"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf";
exports.ids = ["vendor-chunks/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js ***!
  \*************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   registerInstrumentations: () => (/* binding */ registerInstrumentations)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/trace-api.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/metrics-api.js\");\n/* harmony import */ var _opentelemetry_api_logs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/api-logs */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api-logs@0.204.0/node_modules/@opentelemetry/api-logs/build/esm/index.js\");\n/* harmony import */ var _autoLoaderUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./autoLoaderUtils */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nfunction registerInstrumentations(options) {\n    const tracerProvider = options.tracerProvider || _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.trace.getTracerProvider();\n    const meterProvider = options.meterProvider || _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.metrics.getMeterProvider();\n    const loggerProvider = options.loggerProvider || _opentelemetry_api_logs__WEBPACK_IMPORTED_MODULE_2__.logs.getLoggerProvider();\n    const instrumentations = options.instrumentations?.flat() ?? [];\n    (0,_autoLoaderUtils__WEBPACK_IMPORTED_MODULE_3__.enableInstrumentations)(instrumentations, tracerProvider, meterProvider, loggerProvider);\n    return () => {\n        (0,_autoLoaderUtils__WEBPACK_IMPORTED_MODULE_3__.disableInstrumentations)(instrumentations);\n    };\n}\n//# sourceMappingURL=autoLoader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL2F1dG9Mb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDb0Q7QUFDTDtBQUNzQztBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHFEQUFxRCxxREFBSztBQUMxRCxtREFBbUQsdURBQU87QUFDMUQscURBQXFELHlEQUFJO0FBQ3pEO0FBQ0EsSUFBSSx3RUFBc0I7QUFDMUI7QUFDQSxRQUFRLHlFQUF1QjtBQUMvQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdF9mNjUyNjg2ZjYyNmM4OTg4MzMwMGU3MjJlMGJlYWRjZlxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uXFxidWlsZFxcZXNtXFxhdXRvTG9hZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyB0cmFjZSwgbWV0cmljcyB9IGZyb20gJ0BvcGVudGVsZW1ldHJ5L2FwaSc7XG5pbXBvcnQgeyBsb2dzIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvYXBpLWxvZ3MnO1xuaW1wb3J0IHsgZGlzYWJsZUluc3RydW1lbnRhdGlvbnMsIGVuYWJsZUluc3RydW1lbnRhdGlvbnMsIH0gZnJvbSAnLi9hdXRvTG9hZGVyVXRpbHMnO1xuLyoqXG4gKiBJdCB3aWxsIHJlZ2lzdGVyIGluc3RydW1lbnRhdGlvbnMgYW5kIHBsdWdpbnNcbiAqIEBwYXJhbSBvcHRpb25zXG4gKiBAcmV0dXJuIHJldHVybnMgZnVuY3Rpb24gdG8gdW5sb2FkIGluc3RydW1lbnRhdGlvbiBhbmQgcGx1Z2lucyB0aGF0IHdlcmVcbiAqICAgcmVnaXN0ZXJlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25zKG9wdGlvbnMpIHtcbiAgICBjb25zdCB0cmFjZXJQcm92aWRlciA9IG9wdGlvbnMudHJhY2VyUHJvdmlkZXIgfHwgdHJhY2UuZ2V0VHJhY2VyUHJvdmlkZXIoKTtcbiAgICBjb25zdCBtZXRlclByb3ZpZGVyID0gb3B0aW9ucy5tZXRlclByb3ZpZGVyIHx8IG1ldHJpY3MuZ2V0TWV0ZXJQcm92aWRlcigpO1xuICAgIGNvbnN0IGxvZ2dlclByb3ZpZGVyID0gb3B0aW9ucy5sb2dnZXJQcm92aWRlciB8fCBsb2dzLmdldExvZ2dlclByb3ZpZGVyKCk7XG4gICAgY29uc3QgaW5zdHJ1bWVudGF0aW9ucyA9IG9wdGlvbnMuaW5zdHJ1bWVudGF0aW9ucz8uZmxhdCgpID8/IFtdO1xuICAgIGVuYWJsZUluc3RydW1lbnRhdGlvbnMoaW5zdHJ1bWVudGF0aW9ucywgdHJhY2VyUHJvdmlkZXIsIG1ldGVyUHJvdmlkZXIsIGxvZ2dlclByb3ZpZGVyKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBkaXNhYmxlSW5zdHJ1bWVudGF0aW9ucyhpbnN0cnVtZW50YXRpb25zKTtcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0b0xvYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js ***!
  \******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disableInstrumentations: () => (/* binding */ disableInstrumentations),\n/* harmony export */   enableInstrumentations: () => (/* binding */ enableInstrumentations)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nfunction enableInstrumentations(instrumentations, tracerProvider, meterProvider, loggerProvider) {\n    for (let i = 0, j = instrumentations.length; i < j; i++) {\n        const instrumentation = instrumentations[i];\n        if (tracerProvider) {\n            instrumentation.setTracerProvider(tracerProvider);\n        }\n        if (meterProvider) {\n            instrumentation.setMeterProvider(meterProvider);\n        }\n        if (loggerProvider && instrumentation.setLoggerProvider) {\n            instrumentation.setLoggerProvider(loggerProvider);\n        }\n        // instrumentations have been already enabled during creation\n        // so enable only if user prevented that by setting enabled to false\n        // this is to prevent double enabling but when calling register all\n        // instrumentations should be now enabled\n        if (!instrumentation.getConfig().enabled) {\n            instrumentation.enable();\n        }\n    }\n}\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nfunction disableInstrumentations(instrumentations) {\n    instrumentations.forEach(instrumentation => instrumentation.disable());\n}\n//# sourceMappingURL=autoLoaderUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL2F1dG9Mb2FkZXJVdGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAb3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRfZjY1MjY4NmY2MjZjODk4ODMzMDBlNzIyZTBiZWFkY2ZcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvblxcYnVpbGRcXGVzbVxcYXV0b0xvYWRlclV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG4vKipcbiAqIEVuYWJsZSBpbnN0cnVtZW50YXRpb25zXG4gKiBAcGFyYW0gaW5zdHJ1bWVudGF0aW9uc1xuICogQHBhcmFtIHRyYWNlclByb3ZpZGVyXG4gKiBAcGFyYW0gbWV0ZXJQcm92aWRlclxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5hYmxlSW5zdHJ1bWVudGF0aW9ucyhpbnN0cnVtZW50YXRpb25zLCB0cmFjZXJQcm92aWRlciwgbWV0ZXJQcm92aWRlciwgbG9nZ2VyUHJvdmlkZXIpIHtcbiAgICBmb3IgKGxldCBpID0gMCwgaiA9IGluc3RydW1lbnRhdGlvbnMubGVuZ3RoOyBpIDwgajsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGluc3RydW1lbnRhdGlvbiA9IGluc3RydW1lbnRhdGlvbnNbaV07XG4gICAgICAgIGlmICh0cmFjZXJQcm92aWRlcikge1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9uLnNldFRyYWNlclByb3ZpZGVyKHRyYWNlclByb3ZpZGVyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWV0ZXJQcm92aWRlcikge1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9uLnNldE1ldGVyUHJvdmlkZXIobWV0ZXJQcm92aWRlcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxvZ2dlclByb3ZpZGVyICYmIGluc3RydW1lbnRhdGlvbi5zZXRMb2dnZXJQcm92aWRlcikge1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9uLnNldExvZ2dlclByb3ZpZGVyKGxvZ2dlclByb3ZpZGVyKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBpbnN0cnVtZW50YXRpb25zIGhhdmUgYmVlbiBhbHJlYWR5IGVuYWJsZWQgZHVyaW5nIGNyZWF0aW9uXG4gICAgICAgIC8vIHNvIGVuYWJsZSBvbmx5IGlmIHVzZXIgcHJldmVudGVkIHRoYXQgYnkgc2V0dGluZyBlbmFibGVkIHRvIGZhbHNlXG4gICAgICAgIC8vIHRoaXMgaXMgdG8gcHJldmVudCBkb3VibGUgZW5hYmxpbmcgYnV0IHdoZW4gY2FsbGluZyByZWdpc3RlciBhbGxcbiAgICAgICAgLy8gaW5zdHJ1bWVudGF0aW9ucyBzaG91bGQgYmUgbm93IGVuYWJsZWRcbiAgICAgICAgaWYgKCFpbnN0cnVtZW50YXRpb24uZ2V0Q29uZmlnKCkuZW5hYmxlZCkge1xuICAgICAgICAgICAgaW5zdHJ1bWVudGF0aW9uLmVuYWJsZSgpO1xuICAgICAgICB9XG4gICAgfVxufVxuLyoqXG4gKiBEaXNhYmxlIGluc3RydW1lbnRhdGlvbnNcbiAqIEBwYXJhbSBpbnN0cnVtZW50YXRpb25zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkaXNhYmxlSW5zdHJ1bWVudGF0aW9ucyhpbnN0cnVtZW50YXRpb25zKSB7XG4gICAgaW5zdHJ1bWVudGF0aW9ucy5mb3JFYWNoKGluc3RydW1lbnRhdGlvbiA9PiBpbnN0cnVtZW50YXRpb24uZGlzYWJsZSgpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dG9Mb2FkZXJVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationBase: () => (/* reexport safe */ _platform_index__WEBPACK_IMPORTED_MODULE_1__.InstrumentationBase),\n/* harmony export */   InstrumentationNodeModuleDefinition: () => (/* reexport safe */ _instrumentationNodeModuleDefinition__WEBPACK_IMPORTED_MODULE_2__.InstrumentationNodeModuleDefinition),\n/* harmony export */   InstrumentationNodeModuleFile: () => (/* reexport safe */ _instrumentationNodeModuleFile__WEBPACK_IMPORTED_MODULE_3__.InstrumentationNodeModuleFile),\n/* harmony export */   SemconvStability: () => (/* reexport safe */ _semconvStability__WEBPACK_IMPORTED_MODULE_5__.SemconvStability),\n/* harmony export */   isWrapped: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.isWrapped),\n/* harmony export */   registerInstrumentations: () => (/* reexport safe */ _autoLoader__WEBPACK_IMPORTED_MODULE_0__.registerInstrumentations),\n/* harmony export */   safeExecuteInTheMiddle: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.safeExecuteInTheMiddle),\n/* harmony export */   safeExecuteInTheMiddleAsync: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_4__.safeExecuteInTheMiddleAsync),\n/* harmony export */   semconvStabilityFromStr: () => (/* reexport safe */ _semconvStability__WEBPACK_IMPORTED_MODULE_5__.semconvStabilityFromStr)\n/* harmony export */ });\n/* harmony import */ var _autoLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autoLoader */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js\");\n/* harmony import */ var _platform_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./platform/index */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js\");\n/* harmony import */ var _instrumentationNodeModuleDefinition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instrumentationNodeModuleDefinition */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleDefinition.js\");\n/* harmony import */ var _instrumentationNodeModuleFile__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instrumentationNodeModuleFile */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleFile.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/utils.js\");\n/* harmony import */ var _semconvStability__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./semconvStability */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/semconvStability.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN3RDtBQUNEO0FBQ3FDO0FBQ1o7QUFDVTtBQUNYO0FBQy9FIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAb3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRfZjY1MjY4NmY2MjZjODk4ODMzMDBlNzIyZTBiZWFkY2ZcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvblxcYnVpbGRcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydCB7IHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9ucyB9IGZyb20gJy4vYXV0b0xvYWRlcic7XG5leHBvcnQgeyBJbnN0cnVtZW50YXRpb25CYXNlIH0gZnJvbSAnLi9wbGF0Zm9ybS9pbmRleCc7XG5leHBvcnQgeyBJbnN0cnVtZW50YXRpb25Ob2RlTW9kdWxlRGVmaW5pdGlvbiB9IGZyb20gJy4vaW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZURlZmluaXRpb24nO1xuZXhwb3J0IHsgSW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZUZpbGUgfSBmcm9tICcuL2luc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVGaWxlJztcbmV4cG9ydCB7IGlzV3JhcHBlZCwgc2FmZUV4ZWN1dGVJblRoZU1pZGRsZSwgc2FmZUV4ZWN1dGVJblRoZU1pZGRsZUFzeW5jLCB9IGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0IHsgU2VtY29udlN0YWJpbGl0eSwgc2VtY29udlN0YWJpbGl0eUZyb21TdHIgfSBmcm9tICcuL3NlbWNvbnZTdGFiaWxpdHknO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js":
/*!******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js ***!
  \******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationAbstract: () => (/* binding */ InstrumentationAbstract)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/trace-api.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/metrics-api.js\");\n/* harmony import */ var _opentelemetry_api_logs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @opentelemetry/api-logs */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api-logs@0.204.0/node_modules/@opentelemetry/api-logs/build/esm/index.js\");\n/* harmony import */ var _shimmer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shimmer */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n;globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n\n\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nclass InstrumentationAbstract {\n    instrumentationName;\n    instrumentationVersion;\n    _config = {};\n    _tracer;\n    _meter;\n    _logger;\n    _diag;\n    constructor(instrumentationName, instrumentationVersion, config) {\n        this.instrumentationName = instrumentationName;\n        this.instrumentationVersion = instrumentationVersion;\n        this.setConfig(config);\n        this._diag = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.createComponentLogger({\n            namespace: instrumentationName,\n        });\n        this._tracer = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.trace.getTracer(instrumentationName, instrumentationVersion);\n        this._meter = _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__.metrics.getMeter(instrumentationName, instrumentationVersion);\n        this._logger = _opentelemetry_api_logs__WEBPACK_IMPORTED_MODULE_3__.logs.getLogger(instrumentationName, instrumentationVersion);\n        this._updateMetricInstruments();\n    }\n    /* Api to wrap instrumented method */\n    _wrap = _shimmer__WEBPACK_IMPORTED_MODULE_4__.wrap;\n    /* Api to unwrap instrumented methods */\n    _unwrap = _shimmer__WEBPACK_IMPORTED_MODULE_4__.unwrap;\n    /* Api to mass wrap instrumented method */\n    _massWrap = _shimmer__WEBPACK_IMPORTED_MODULE_4__.massWrap;\n    /* Api to mass unwrap instrumented methods */\n    _massUnwrap = _shimmer__WEBPACK_IMPORTED_MODULE_4__.massUnwrap;\n    /* Returns meter */\n    get meter() {\n        return this._meter;\n    }\n    /**\n     * Sets MeterProvider to this plugin\n     * @param meterProvider\n     */\n    setMeterProvider(meterProvider) {\n        this._meter = meterProvider.getMeter(this.instrumentationName, this.instrumentationVersion);\n        this._updateMetricInstruments();\n    }\n    /* Returns logger */\n    get logger() {\n        return this._logger;\n    }\n    /**\n     * Sets LoggerProvider to this plugin\n     * @param loggerProvider\n     */\n    setLoggerProvider(loggerProvider) {\n        this._logger = loggerProvider.getLogger(this.instrumentationName, this.instrumentationVersion);\n    }\n    /**\n     * @experimental\n     *\n     * Get module definitions defined by {@link init}.\n     * This can be used for experimental compile-time instrumentation.\n     *\n     * @returns an array of {@link InstrumentationModuleDefinition}\n     */\n    getModuleDefinitions() {\n        const initResult = this.init() ?? [];\n        if (!Array.isArray(initResult)) {\n            return [initResult];\n        }\n        return initResult;\n    }\n    /**\n     * Sets the new metric instruments with the current Meter.\n     */\n    _updateMetricInstruments() {\n        return;\n    }\n    /* Returns InstrumentationConfig */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Sets InstrumentationConfig to this plugin\n     * @param config\n     */\n    setConfig(config) {\n        // copy config first level properties to ensure they are immutable.\n        // nested properties are not copied, thus are mutable from the outside.\n        this._config = {\n            enabled: true,\n            ...config,\n        };\n    }\n    /**\n     * Sets TraceProvider to this plugin\n     * @param tracerProvider\n     */\n    setTracerProvider(tracerProvider) {\n        this._tracer = tracerProvider.getTracer(this.instrumentationName, this.instrumentationVersion);\n    }\n    /* Returns tracer */\n    get tracer() {\n        return this._tracer;\n    }\n    /**\n     * Execute span customization hook, if configured, and log any errors.\n     * Any semantics of the trigger and info are defined by the specific instrumentation.\n     * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n     * @param triggerName The name of the trigger for executing the hook for logging purposes\n     * @param span The span to which the hook should be applied\n     * @param info The info object to be passed to the hook, with useful data the hook may use\n     */\n    _runSpanCustomizationHook(hookHandler, triggerName, span, info) {\n        if (!hookHandler) {\n            return;\n        }\n        try {\n            hookHandler(span, info);\n        }\n        catch (e) {\n            this._diag.error(`Error running span customization hook due to exception in handler`, { triggerName }, e);\n        }\n    }\n}\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleDefinition.js":
/*!**************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleDefinition.js ***!
  \**************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationNodeModuleDefinition: () => (/* binding */ InstrumentationNodeModuleDefinition)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass InstrumentationNodeModuleDefinition {\n    name;\n    supportedVersions;\n    patch;\n    unpatch;\n    files;\n    constructor(name, supportedVersions, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    patch, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    unpatch, files) {\n        this.name = name;\n        this.supportedVersions = supportedVersions;\n        this.patch = patch;\n        this.unpatch = unpatch;\n        this.files = files || [];\n    }\n}\n//# sourceMappingURL=instrumentationNodeModuleDefinition.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL2luc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVEZWZpbml0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmXFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb25cXGJ1aWxkXFxlc21cXGluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVEZWZpbml0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgY2xhc3MgSW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZURlZmluaXRpb24ge1xuICAgIG5hbWU7XG4gICAgc3VwcG9ydGVkVmVyc2lvbnM7XG4gICAgcGF0Y2g7XG4gICAgdW5wYXRjaDtcbiAgICBmaWxlcztcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBzdXBwb3J0ZWRWZXJzaW9ucywgXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBwYXRjaCwgXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICB1bnBhdGNoLCBmaWxlcykge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnN1cHBvcnRlZFZlcnNpb25zID0gc3VwcG9ydGVkVmVyc2lvbnM7XG4gICAgICAgIHRoaXMucGF0Y2ggPSBwYXRjaDtcbiAgICAgICAgdGhpcy51bnBhdGNoID0gdW5wYXRjaDtcbiAgICAgICAgdGhpcy5maWxlcyA9IGZpbGVzIHx8IFtdO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVEZWZpbml0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleDefinition.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleFile.js":
/*!********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleFile.js ***!
  \********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationNodeModuleFile: () => (/* binding */ InstrumentationNodeModuleFile)\n/* harmony export */ });\n/* harmony import */ var _platform_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./platform/index */ \"path\");\n/* harmony import */ var _platform_index__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_platform_index__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass InstrumentationNodeModuleFile {\n    supportedVersions;\n    patch;\n    unpatch;\n    name;\n    constructor(name, supportedVersions, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    patch, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    unpatch) {\n        this.supportedVersions = supportedVersions;\n        this.patch = patch;\n        this.unpatch = unpatch;\n        this.name = (0,_platform_index__WEBPACK_IMPORTED_MODULE_0__.normalize)(name);\n    }\n}\n//# sourceMappingURL=instrumentationNodeModuleFile.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL2luc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVGaWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUN0QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwwREFBUztBQUM3QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdF9mNjUyNjg2ZjYyNmM4OTg4MzMwMGU3MjJlMGJlYWRjZlxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uXFxidWlsZFxcZXNtXFxpbnN0cnVtZW50YXRpb25Ob2RlTW9kdWxlRmlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgbm9ybWFsaXplIH0gZnJvbSAnLi9wbGF0Zm9ybS9pbmRleCc7XG5leHBvcnQgY2xhc3MgSW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZUZpbGUge1xuICAgIHN1cHBvcnRlZFZlcnNpb25zO1xuICAgIHBhdGNoO1xuICAgIHVucGF0Y2g7XG4gICAgbmFtZTtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBzdXBwb3J0ZWRWZXJzaW9ucywgXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBwYXRjaCwgXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICB1bnBhdGNoKSB7XG4gICAgICAgIHRoaXMuc3VwcG9ydGVkVmVyc2lvbnMgPSBzdXBwb3J0ZWRWZXJzaW9ucztcbiAgICAgICAgdGhpcy5wYXRjaCA9IHBhdGNoO1xuICAgICAgICB0aGlzLnVucGF0Y2ggPSB1bnBhdGNoO1xuICAgICAgICB0aGlzLm5hbWUgPSBub3JtYWxpemUobmFtZSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZUZpbGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentationNodeModuleFile.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ModuleNameTrie.js":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ModuleNameTrie.js ***!
  \*******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModuleNameSeparator: () => (/* binding */ ModuleNameSeparator),\n/* harmony export */   ModuleNameTrie: () => (/* binding */ ModuleNameTrie)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ModuleNameSeparator = '/';\n/**\n * Node in a `ModuleNameTrie`\n */\nclass ModuleNameTrieNode {\n    hooks = [];\n    children = new Map();\n}\n/**\n * Trie containing nodes that represent a part of a module name (i.e. the parts separated by forward slash)\n */\nclass ModuleNameTrie {\n    _trie = new ModuleNameTrieNode();\n    _counter = 0;\n    /**\n     * Insert a module hook into the trie\n     *\n     * @param {Hooked} hook Hook\n     */\n    insert(hook) {\n        let trieNode = this._trie;\n        for (const moduleNamePart of hook.moduleName.split(ModuleNameSeparator)) {\n            let nextNode = trieNode.children.get(moduleNamePart);\n            if (!nextNode) {\n                nextNode = new ModuleNameTrieNode();\n                trieNode.children.set(moduleNamePart, nextNode);\n            }\n            trieNode = nextNode;\n        }\n        trieNode.hooks.push({ hook, insertedId: this._counter++ });\n    }\n    /**\n     * Search for matching hooks in the trie\n     *\n     * @param {string} moduleName Module name\n     * @param {boolean} maintainInsertionOrder Whether to return the results in insertion order\n     * @param {boolean} fullOnly Whether to return only full matches\n     * @returns {Hooked[]} Matching hooks\n     */\n    search(moduleName, { maintainInsertionOrder, fullOnly } = {}) {\n        let trieNode = this._trie;\n        const results = [];\n        let foundFull = true;\n        for (const moduleNamePart of moduleName.split(ModuleNameSeparator)) {\n            const nextNode = trieNode.children.get(moduleNamePart);\n            if (!nextNode) {\n                foundFull = false;\n                break;\n            }\n            if (!fullOnly) {\n                results.push(...nextNode.hooks);\n            }\n            trieNode = nextNode;\n        }\n        if (fullOnly && foundFull) {\n            results.push(...trieNode.hooks);\n        }\n        if (results.length === 0) {\n            return [];\n        }\n        if (results.length === 1) {\n            return [results[0].hook];\n        }\n        if (maintainInsertionOrder) {\n            results.sort((a, b) => a.insertedId - b.insertedId);\n        }\n        return results.map(({ hook }) => hook);\n    }\n}\n//# sourceMappingURL=ModuleNameTrie.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL3BsYXRmb3JtL25vZGUvTW9kdWxlTmFtZVRyaWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsbUNBQW1DO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsU0FBUztBQUN4QixlQUFlLFNBQVM7QUFDeEIsaUJBQWlCLFVBQVU7QUFDM0I7QUFDQSx5QkFBeUIsbUNBQW1DLElBQUk7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixNQUFNO0FBQ3BDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmXFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxpbnN0cnVtZW50YXRpb25cXGJ1aWxkXFxlc21cXHBsYXRmb3JtXFxub2RlXFxNb2R1bGVOYW1lVHJpZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0IGNvbnN0IE1vZHVsZU5hbWVTZXBhcmF0b3IgPSAnLyc7XG4vKipcbiAqIE5vZGUgaW4gYSBgTW9kdWxlTmFtZVRyaWVgXG4gKi9cbmNsYXNzIE1vZHVsZU5hbWVUcmllTm9kZSB7XG4gICAgaG9va3MgPSBbXTtcbiAgICBjaGlsZHJlbiA9IG5ldyBNYXAoKTtcbn1cbi8qKlxuICogVHJpZSBjb250YWluaW5nIG5vZGVzIHRoYXQgcmVwcmVzZW50IGEgcGFydCBvZiBhIG1vZHVsZSBuYW1lIChpLmUuIHRoZSBwYXJ0cyBzZXBhcmF0ZWQgYnkgZm9yd2FyZCBzbGFzaClcbiAqL1xuZXhwb3J0IGNsYXNzIE1vZHVsZU5hbWVUcmllIHtcbiAgICBfdHJpZSA9IG5ldyBNb2R1bGVOYW1lVHJpZU5vZGUoKTtcbiAgICBfY291bnRlciA9IDA7XG4gICAgLyoqXG4gICAgICogSW5zZXJ0IGEgbW9kdWxlIGhvb2sgaW50byB0aGUgdHJpZVxuICAgICAqXG4gICAgICogQHBhcmFtIHtIb29rZWR9IGhvb2sgSG9va1xuICAgICAqL1xuICAgIGluc2VydChob29rKSB7XG4gICAgICAgIGxldCB0cmllTm9kZSA9IHRoaXMuX3RyaWU7XG4gICAgICAgIGZvciAoY29uc3QgbW9kdWxlTmFtZVBhcnQgb2YgaG9vay5tb2R1bGVOYW1lLnNwbGl0KE1vZHVsZU5hbWVTZXBhcmF0b3IpKSB7XG4gICAgICAgICAgICBsZXQgbmV4dE5vZGUgPSB0cmllTm9kZS5jaGlsZHJlbi5nZXQobW9kdWxlTmFtZVBhcnQpO1xuICAgICAgICAgICAgaWYgKCFuZXh0Tm9kZSkge1xuICAgICAgICAgICAgICAgIG5leHROb2RlID0gbmV3IE1vZHVsZU5hbWVUcmllTm9kZSgpO1xuICAgICAgICAgICAgICAgIHRyaWVOb2RlLmNoaWxkcmVuLnNldChtb2R1bGVOYW1lUGFydCwgbmV4dE5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJpZU5vZGUgPSBuZXh0Tm9kZTtcbiAgICAgICAgfVxuICAgICAgICB0cmllTm9kZS5ob29rcy5wdXNoKHsgaG9vaywgaW5zZXJ0ZWRJZDogdGhpcy5fY291bnRlcisrIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZWFyY2ggZm9yIG1hdGNoaW5nIGhvb2tzIGluIHRoZSB0cmllXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbW9kdWxlTmFtZSBNb2R1bGUgbmFtZVxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gbWFpbnRhaW5JbnNlcnRpb25PcmRlciBXaGV0aGVyIHRvIHJldHVybiB0aGUgcmVzdWx0cyBpbiBpbnNlcnRpb24gb3JkZXJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGZ1bGxPbmx5IFdoZXRoZXIgdG8gcmV0dXJuIG9ubHkgZnVsbCBtYXRjaGVzXG4gICAgICogQHJldHVybnMge0hvb2tlZFtdfSBNYXRjaGluZyBob29rc1xuICAgICAqL1xuICAgIHNlYXJjaChtb2R1bGVOYW1lLCB7IG1haW50YWluSW5zZXJ0aW9uT3JkZXIsIGZ1bGxPbmx5IH0gPSB7fSkge1xuICAgICAgICBsZXQgdHJpZU5vZGUgPSB0aGlzLl90cmllO1xuICAgICAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgICAgIGxldCBmb3VuZEZ1bGwgPSB0cnVlO1xuICAgICAgICBmb3IgKGNvbnN0IG1vZHVsZU5hbWVQYXJ0IG9mIG1vZHVsZU5hbWUuc3BsaXQoTW9kdWxlTmFtZVNlcGFyYXRvcikpIHtcbiAgICAgICAgICAgIGNvbnN0IG5leHROb2RlID0gdHJpZU5vZGUuY2hpbGRyZW4uZ2V0KG1vZHVsZU5hbWVQYXJ0KTtcbiAgICAgICAgICAgIGlmICghbmV4dE5vZGUpIHtcbiAgICAgICAgICAgICAgICBmb3VuZEZ1bGwgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghZnVsbE9ubHkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goLi4ubmV4dE5vZGUuaG9va3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJpZU5vZGUgPSBuZXh0Tm9kZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZnVsbE9ubHkgJiYgZm91bmRGdWxsKSB7XG4gICAgICAgICAgICByZXN1bHRzLnB1c2goLi4udHJpZU5vZGUuaG9va3MpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXN1bHRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXN1bHRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIFtyZXN1bHRzWzBdLmhvb2tdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtYWludGFpbkluc2VydGlvbk9yZGVyKSB7XG4gICAgICAgICAgICByZXN1bHRzLnNvcnQoKGEsIGIpID0+IGEuaW5zZXJ0ZWRJZCAtIGIuaW5zZXJ0ZWRJZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdHMubWFwKCh7IGhvb2sgfSkgPT4gaG9vayk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TW9kdWxlTmFtZVRyaWUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ModuleNameTrie.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/RequireInTheMiddleSingleton.js":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/RequireInTheMiddleSingleton.js ***!
  \********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequireInTheMiddleSingleton: () => (/* binding */ RequireInTheMiddleSingleton)\n/* harmony export */ });\n/* harmony import */ var require_in_the_middle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! require-in-the-middle */ \"(rsc)/./node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/index.js\");\n/* harmony import */ var require_in_the_middle__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(require_in_the_middle__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ModuleNameTrie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModuleNameTrie */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ModuleNameTrie.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * Whether Mocha is running in this process\n * Inspired by https://github.com/AndreasPizsa/detect-mocha\n *\n * @type {boolean}\n */\nconst isMocha = [\n    'afterEach',\n    'after',\n    'beforeEach',\n    'before',\n    'describe',\n    'it',\n].every(fn => {\n    // @ts-expect-error TS7053: Element implicitly has an 'any' type\n    return typeof global[fn] === 'function';\n});\n/**\n * Singleton class for `require-in-the-middle`\n * Allows instrumentation plugins to patch modules with only a single `require` patch\n * WARNING: Because this class will create its own `require-in-the-middle` (RITM) instance,\n * we should minimize the number of new instances of this class.\n * Multiple instances of `@opentelemetry/instrumentation` (e.g. multiple versions) in a single process\n * will result in multiple instances of RITM, which will have an impact\n * on the performance of instrumentation hooks being applied.\n */\nclass RequireInTheMiddleSingleton {\n    _moduleNameTrie = new _ModuleNameTrie__WEBPACK_IMPORTED_MODULE_2__.ModuleNameTrie();\n    static _instance;\n    constructor() {\n        this._initialize();\n    }\n    _initialize() {\n        new require_in_the_middle__WEBPACK_IMPORTED_MODULE_0__.Hook(\n        // Intercept all `require` calls; we will filter the matching ones below\n        null, { internals: true }, (exports, name, basedir) => {\n            // For internal files on Windows, `name` will use backslash as the path separator\n            const normalizedModuleName = normalizePathSeparators(name);\n            const matches = this._moduleNameTrie.search(normalizedModuleName, {\n                maintainInsertionOrder: true,\n                // For core modules (e.g. `fs`), do not match on sub-paths (e.g. `fs/promises').\n                // This matches the behavior of `require-in-the-middle`.\n                // `basedir` is always `undefined` for core modules.\n                fullOnly: basedir === undefined,\n            });\n            for (const { onRequire } of matches) {\n                exports = onRequire(exports, name, basedir);\n            }\n            return exports;\n        });\n    }\n    /**\n     * Register a hook with `require-in-the-middle`\n     *\n     * @param {string} moduleName Module name\n     * @param {OnRequireFn} onRequire Hook function\n     * @returns {Hooked} Registered hook\n     */\n    register(moduleName, onRequire) {\n        const hooked = { moduleName, onRequire };\n        this._moduleNameTrie.insert(hooked);\n        return hooked;\n    }\n    /**\n     * Get the `RequireInTheMiddleSingleton` singleton\n     *\n     * @returns {RequireInTheMiddleSingleton} Singleton of `RequireInTheMiddleSingleton`\n     */\n    static getInstance() {\n        // Mocha runs all test suites in the same process\n        // This prevents test suites from sharing a singleton\n        if (isMocha)\n            return new RequireInTheMiddleSingleton();\n        return (this._instance =\n            this._instance ?? new RequireInTheMiddleSingleton());\n    }\n}\n/**\n * Normalize the path separators to forward slash in a module name or path\n *\n * @param {string} moduleNameOrPath Module name or path\n * @returns {string} Normalized module name or path\n */\nfunction normalizePathSeparators(moduleNameOrPath) {\n    return path__WEBPACK_IMPORTED_MODULE_1__.sep !== _ModuleNameTrie__WEBPACK_IMPORTED_MODULE_2__.ModuleNameSeparator\n        ? moduleNameOrPath.split(path__WEBPACK_IMPORTED_MODULE_1__.sep).join(_ModuleNameTrie__WEBPACK_IMPORTED_MODULE_2__.ModuleNameSeparator)\n        : moduleNameOrPath;\n}\n//# sourceMappingURL=RequireInTheMiddleSingleton.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL3BsYXRmb3JtL25vZGUvUmVxdWlyZUluVGhlTWlkZGxlU2luZ2xldG9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUNoQjtBQUMwQztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsMEJBQTBCLDJEQUFjO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVEQUFJO0FBQ2hCLDBDQUEwQztBQUMxQyxnQkFBZ0IsaUJBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IseUJBQXlCLFlBQVk7QUFDckM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsYUFBYTtBQUM1QixpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw2QkFBNkI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQSxXQUFXLHFDQUFRLEtBQUssZ0VBQW1CO0FBQzNDLGlDQUFpQyxxQ0FBUSxPQUFPLGdFQUFtQjtBQUNuRTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdF9mNjUyNjg2ZjYyNmM4OTg4MzMwMGU3MjJlMGJlYWRjZlxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uXFxidWlsZFxcZXNtXFxwbGF0Zm9ybVxcbm9kZVxcUmVxdWlyZUluVGhlTWlkZGxlU2luZ2xldG9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBIb29rIH0gZnJvbSAncmVxdWlyZS1pbi10aGUtbWlkZGxlJztcbmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBNb2R1bGVOYW1lVHJpZSwgTW9kdWxlTmFtZVNlcGFyYXRvciB9IGZyb20gJy4vTW9kdWxlTmFtZVRyaWUnO1xuLyoqXG4gKiBXaGV0aGVyIE1vY2hhIGlzIHJ1bm5pbmcgaW4gdGhpcyBwcm9jZXNzXG4gKiBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vQW5kcmVhc1BpenNhL2RldGVjdC1tb2NoYVxuICpcbiAqIEB0eXBlIHtib29sZWFufVxuICovXG5jb25zdCBpc01vY2hhID0gW1xuICAgICdhZnRlckVhY2gnLFxuICAgICdhZnRlcicsXG4gICAgJ2JlZm9yZUVhY2gnLFxuICAgICdiZWZvcmUnLFxuICAgICdkZXNjcmliZScsXG4gICAgJ2l0Jyxcbl0uZXZlcnkoZm4gPT4ge1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVFM3MDUzOiBFbGVtZW50IGltcGxpY2l0bHkgaGFzIGFuICdhbnknIHR5cGVcbiAgICByZXR1cm4gdHlwZW9mIGdsb2JhbFtmbl0gPT09ICdmdW5jdGlvbic7XG59KTtcbi8qKlxuICogU2luZ2xldG9uIGNsYXNzIGZvciBgcmVxdWlyZS1pbi10aGUtbWlkZGxlYFxuICogQWxsb3dzIGluc3RydW1lbnRhdGlvbiBwbHVnaW5zIHRvIHBhdGNoIG1vZHVsZXMgd2l0aCBvbmx5IGEgc2luZ2xlIGByZXF1aXJlYCBwYXRjaFxuICogV0FSTklORzogQmVjYXVzZSB0aGlzIGNsYXNzIHdpbGwgY3JlYXRlIGl0cyBvd24gYHJlcXVpcmUtaW4tdGhlLW1pZGRsZWAgKFJJVE0pIGluc3RhbmNlLFxuICogd2Ugc2hvdWxkIG1pbmltaXplIHRoZSBudW1iZXIgb2YgbmV3IGluc3RhbmNlcyBvZiB0aGlzIGNsYXNzLlxuICogTXVsdGlwbGUgaW5zdGFuY2VzIG9mIGBAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb25gIChlLmcuIG11bHRpcGxlIHZlcnNpb25zKSBpbiBhIHNpbmdsZSBwcm9jZXNzXG4gKiB3aWxsIHJlc3VsdCBpbiBtdWx0aXBsZSBpbnN0YW5jZXMgb2YgUklUTSwgd2hpY2ggd2lsbCBoYXZlIGFuIGltcGFjdFxuICogb24gdGhlIHBlcmZvcm1hbmNlIG9mIGluc3RydW1lbnRhdGlvbiBob29rcyBiZWluZyBhcHBsaWVkLlxuICovXG5leHBvcnQgY2xhc3MgUmVxdWlyZUluVGhlTWlkZGxlU2luZ2xldG9uIHtcbiAgICBfbW9kdWxlTmFtZVRyaWUgPSBuZXcgTW9kdWxlTmFtZVRyaWUoKTtcbiAgICBzdGF0aWMgX2luc3RhbmNlO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9pbml0aWFsaXplKCk7XG4gICAgfVxuICAgIF9pbml0aWFsaXplKCkge1xuICAgICAgICBuZXcgSG9vayhcbiAgICAgICAgLy8gSW50ZXJjZXB0IGFsbCBgcmVxdWlyZWAgY2FsbHM7IHdlIHdpbGwgZmlsdGVyIHRoZSBtYXRjaGluZyBvbmVzIGJlbG93XG4gICAgICAgIG51bGwsIHsgaW50ZXJuYWxzOiB0cnVlIH0sIChleHBvcnRzLCBuYW1lLCBiYXNlZGlyKSA9PiB7XG4gICAgICAgICAgICAvLyBGb3IgaW50ZXJuYWwgZmlsZXMgb24gV2luZG93cywgYG5hbWVgIHdpbGwgdXNlIGJhY2tzbGFzaCBhcyB0aGUgcGF0aCBzZXBhcmF0b3JcbiAgICAgICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRNb2R1bGVOYW1lID0gbm9ybWFsaXplUGF0aFNlcGFyYXRvcnMobmFtZSk7XG4gICAgICAgICAgICBjb25zdCBtYXRjaGVzID0gdGhpcy5fbW9kdWxlTmFtZVRyaWUuc2VhcmNoKG5vcm1hbGl6ZWRNb2R1bGVOYW1lLCB7XG4gICAgICAgICAgICAgICAgbWFpbnRhaW5JbnNlcnRpb25PcmRlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAvLyBGb3IgY29yZSBtb2R1bGVzIChlLmcuIGBmc2ApLCBkbyBub3QgbWF0Y2ggb24gc3ViLXBhdGhzIChlLmcuIGBmcy9wcm9taXNlcycpLlxuICAgICAgICAgICAgICAgIC8vIFRoaXMgbWF0Y2hlcyB0aGUgYmVoYXZpb3Igb2YgYHJlcXVpcmUtaW4tdGhlLW1pZGRsZWAuXG4gICAgICAgICAgICAgICAgLy8gYGJhc2VkaXJgIGlzIGFsd2F5cyBgdW5kZWZpbmVkYCBmb3IgY29yZSBtb2R1bGVzLlxuICAgICAgICAgICAgICAgIGZ1bGxPbmx5OiBiYXNlZGlyID09PSB1bmRlZmluZWQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgeyBvblJlcXVpcmUgfSBvZiBtYXRjaGVzKSB7XG4gICAgICAgICAgICAgICAgZXhwb3J0cyA9IG9uUmVxdWlyZShleHBvcnRzLCBuYW1lLCBiYXNlZGlyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBleHBvcnRzO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVnaXN0ZXIgYSBob29rIHdpdGggYHJlcXVpcmUtaW4tdGhlLW1pZGRsZWBcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtb2R1bGVOYW1lIE1vZHVsZSBuYW1lXG4gICAgICogQHBhcmFtIHtPblJlcXVpcmVGbn0gb25SZXF1aXJlIEhvb2sgZnVuY3Rpb25cbiAgICAgKiBAcmV0dXJucyB7SG9va2VkfSBSZWdpc3RlcmVkIGhvb2tcbiAgICAgKi9cbiAgICByZWdpc3Rlcihtb2R1bGVOYW1lLCBvblJlcXVpcmUpIHtcbiAgICAgICAgY29uc3QgaG9va2VkID0geyBtb2R1bGVOYW1lLCBvblJlcXVpcmUgfTtcbiAgICAgICAgdGhpcy5fbW9kdWxlTmFtZVRyaWUuaW5zZXJ0KGhvb2tlZCk7XG4gICAgICAgIHJldHVybiBob29rZWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgYFJlcXVpcmVJblRoZU1pZGRsZVNpbmdsZXRvbmAgc2luZ2xldG9uXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UmVxdWlyZUluVGhlTWlkZGxlU2luZ2xldG9ufSBTaW5nbGV0b24gb2YgYFJlcXVpcmVJblRoZU1pZGRsZVNpbmdsZXRvbmBcbiAgICAgKi9cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgICAgIC8vIE1vY2hhIHJ1bnMgYWxsIHRlc3Qgc3VpdGVzIGluIHRoZSBzYW1lIHByb2Nlc3NcbiAgICAgICAgLy8gVGhpcyBwcmV2ZW50cyB0ZXN0IHN1aXRlcyBmcm9tIHNoYXJpbmcgYSBzaW5nbGV0b25cbiAgICAgICAgaWYgKGlzTW9jaGEpXG4gICAgICAgICAgICByZXR1cm4gbmV3IFJlcXVpcmVJblRoZU1pZGRsZVNpbmdsZXRvbigpO1xuICAgICAgICByZXR1cm4gKHRoaXMuX2luc3RhbmNlID1cbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlID8/IG5ldyBSZXF1aXJlSW5UaGVNaWRkbGVTaW5nbGV0b24oKSk7XG4gICAgfVxufVxuLyoqXG4gKiBOb3JtYWxpemUgdGhlIHBhdGggc2VwYXJhdG9ycyB0byBmb3J3YXJkIHNsYXNoIGluIGEgbW9kdWxlIG5hbWUgb3IgcGF0aFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtb2R1bGVOYW1lT3JQYXRoIE1vZHVsZSBuYW1lIG9yIHBhdGhcbiAqIEByZXR1cm5zIHtzdHJpbmd9IE5vcm1hbGl6ZWQgbW9kdWxlIG5hbWUgb3IgcGF0aFxuICovXG5mdW5jdGlvbiBub3JtYWxpemVQYXRoU2VwYXJhdG9ycyhtb2R1bGVOYW1lT3JQYXRoKSB7XG4gICAgcmV0dXJuIHBhdGguc2VwICE9PSBNb2R1bGVOYW1lU2VwYXJhdG9yXG4gICAgICAgID8gbW9kdWxlTmFtZU9yUGF0aC5zcGxpdChwYXRoLnNlcCkuam9pbihNb2R1bGVOYW1lU2VwYXJhdG9yKVxuICAgICAgICA6IG1vZHVsZU5hbWVPclBhdGg7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXF1aXJlSW5UaGVNaWRkbGVTaW5nbGV0b24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/RequireInTheMiddleSingleton.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js":
/*!********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js ***!
  \********************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstrumentationBase: () => (/* binding */ InstrumentationBase)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _semver__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../semver */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/semver.js\");\n/* harmony import */ var _shimmer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shimmer */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js\");\n/* harmony import */ var _instrumentation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js\");\n/* harmony import */ var _RequireInTheMiddleSingleton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./RequireInTheMiddleSingleton */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/RequireInTheMiddleSingleton.js\");\n/* harmony import */ var import_in_the_middle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! import-in-the-middle */ \"(rsc)/./node_modules/.pnpm/import-in-the-middle@1.14.4/node_modules/import-in-the-middle/index.js\");\n/* harmony import */ var import_in_the_middle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(import_in_the_middle__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var require_in_the_middle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! require-in-the-middle */ \"(rsc)/./node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/index.js\");\n/* harmony import */ var require_in_the_middle__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(require_in_the_middle__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n;globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n\n\n\n\n\n\n\n\n\n\n/**\n * Base abstract class for instrumenting node plugins\n */\nclass InstrumentationBase extends _instrumentation__WEBPACK_IMPORTED_MODULE_5__.InstrumentationAbstract {\n    _modules;\n    _hooks = [];\n    _requireInTheMiddleSingleton = _RequireInTheMiddleSingleton__WEBPACK_IMPORTED_MODULE_6__.RequireInTheMiddleSingleton.getInstance();\n    _enabled = false;\n    constructor(instrumentationName, instrumentationVersion, config) {\n        super(instrumentationName, instrumentationVersion, config);\n        let modules = this.init();\n        if (modules && !Array.isArray(modules)) {\n            modules = [modules];\n        }\n        this._modules = modules || [];\n        if (this._config.enabled) {\n            this.enable();\n        }\n    }\n    _wrap = (moduleExports, name, wrapper) => {\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_7__.isWrapped)(moduleExports[name])) {\n            this._unwrap(moduleExports, name);\n        }\n        if (!util__WEBPACK_IMPORTED_MODULE_1__.types.isProxy(moduleExports)) {\n            return (0,_shimmer__WEBPACK_IMPORTED_MODULE_8__.wrap)(moduleExports, name, wrapper);\n        }\n        else {\n            const wrapped = (0,_shimmer__WEBPACK_IMPORTED_MODULE_8__.wrap)(Object.assign({}, moduleExports), name, wrapper);\n            Object.defineProperty(moduleExports, name, {\n                value: wrapped,\n            });\n            return wrapped;\n        }\n    };\n    _unwrap = (moduleExports, name) => {\n        if (!util__WEBPACK_IMPORTED_MODULE_1__.types.isProxy(moduleExports)) {\n            return (0,_shimmer__WEBPACK_IMPORTED_MODULE_8__.unwrap)(moduleExports, name);\n        }\n        else {\n            return Object.defineProperty(moduleExports, name, {\n                value: moduleExports[name],\n            });\n        }\n    };\n    _massWrap = (moduleExportsArray, names, wrapper) => {\n        if (!moduleExportsArray) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.error('must provide one or more modules to patch');\n            return;\n        }\n        else if (!Array.isArray(moduleExportsArray)) {\n            moduleExportsArray = [moduleExportsArray];\n        }\n        if (!(names && Array.isArray(names))) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.error('must provide one or more functions to wrap on modules');\n            return;\n        }\n        moduleExportsArray.forEach(moduleExports => {\n            names.forEach(name => {\n                this._wrap(moduleExports, name, wrapper);\n            });\n        });\n    };\n    _massUnwrap = (moduleExportsArray, names) => {\n        if (!moduleExportsArray) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.error('must provide one or more modules to patch');\n            return;\n        }\n        else if (!Array.isArray(moduleExportsArray)) {\n            moduleExportsArray = [moduleExportsArray];\n        }\n        if (!(names && Array.isArray(names))) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.error('must provide one or more functions to wrap on modules');\n            return;\n        }\n        moduleExportsArray.forEach(moduleExports => {\n            names.forEach(name => {\n                this._unwrap(moduleExports, name);\n            });\n        });\n    };\n    _warnOnPreloadedModules() {\n        this._modules.forEach((module) => {\n            const { name } = module;\n            try {\n                const resolvedModule = /*require.resolve*/(__webpack_require__(\"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive\").resolve(name));\n                if (__webpack_require__.c[resolvedModule]) {\n                    // Module is already cached, which means the instrumentation hook might not work\n                    this._diag.warn(`Module ${name} has been loaded before ${this.instrumentationName} so it might not work, please initialize it before requiring ${name}`);\n                }\n            }\n            catch {\n                // Module isn't available, we can simply skip\n            }\n        });\n    }\n    _extractPackageVersion(baseDir) {\n        try {\n            const json = (0,fs__WEBPACK_IMPORTED_MODULE_4__.readFileSync)(path__WEBPACK_IMPORTED_MODULE_0__.join(baseDir, 'package.json'), {\n                encoding: 'utf8',\n            });\n            const version = JSON.parse(json).version;\n            return typeof version === 'string' ? version : undefined;\n        }\n        catch {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_9__.diag.warn('Failed extracting version', baseDir);\n        }\n        return undefined;\n    }\n    _onRequire(module, exports, name, baseDir) {\n        if (!baseDir) {\n            if (typeof module.patch === 'function') {\n                module.moduleExports = exports;\n                if (this._enabled) {\n                    this._diag.debug('Applying instrumentation patch for nodejs core module on require hook', {\n                        module: module.name,\n                    });\n                    return module.patch(exports);\n                }\n            }\n            return exports;\n        }\n        const version = this._extractPackageVersion(baseDir);\n        module.moduleVersion = version;\n        if (module.name === name) {\n            // main module\n            if (isSupported(module.supportedVersions, version, module.includePrerelease)) {\n                if (typeof module.patch === 'function') {\n                    module.moduleExports = exports;\n                    if (this._enabled) {\n                        this._diag.debug('Applying instrumentation patch for module on require hook', {\n                            module: module.name,\n                            version: module.moduleVersion,\n                            baseDir,\n                        });\n                        return module.patch(exports, module.moduleVersion);\n                    }\n                }\n            }\n            return exports;\n        }\n        // internal file\n        const files = module.files ?? [];\n        const normalizedName = path__WEBPACK_IMPORTED_MODULE_0__.normalize(name);\n        const supportedFileInstrumentations = files\n            .filter(f => f.name === normalizedName)\n            .filter(f => isSupported(f.supportedVersions, version, module.includePrerelease));\n        return supportedFileInstrumentations.reduce((patchedExports, file) => {\n            file.moduleExports = patchedExports;\n            if (this._enabled) {\n                this._diag.debug('Applying instrumentation patch for nodejs module file on require hook', {\n                    module: module.name,\n                    version: module.moduleVersion,\n                    fileName: file.name,\n                    baseDir,\n                });\n                // patch signature is not typed, so we cast it assuming it's correct\n                return file.patch(patchedExports, module.moduleVersion);\n            }\n            return patchedExports;\n        }, exports);\n    }\n    enable() {\n        if (this._enabled) {\n            return;\n        }\n        this._enabled = true;\n        // already hooked, just call patch again\n        if (this._hooks.length > 0) {\n            for (const module of this._modules) {\n                if (typeof module.patch === 'function' && module.moduleExports) {\n                    this._diag.debug('Applying instrumentation patch for nodejs module on instrumentation enabled', {\n                        module: module.name,\n                        version: module.moduleVersion,\n                    });\n                    module.patch(module.moduleExports, module.moduleVersion);\n                }\n                for (const file of module.files) {\n                    if (file.moduleExports) {\n                        this._diag.debug('Applying instrumentation patch for nodejs module file on instrumentation enabled', {\n                            module: module.name,\n                            version: module.moduleVersion,\n                            fileName: file.name,\n                        });\n                        file.patch(file.moduleExports, module.moduleVersion);\n                    }\n                }\n            }\n            return;\n        }\n        this._warnOnPreloadedModules();\n        for (const module of this._modules) {\n            const hookFn = (exports, name, baseDir) => {\n                if (!baseDir && path__WEBPACK_IMPORTED_MODULE_0__.isAbsolute(name)) {\n                    const parsedPath = path__WEBPACK_IMPORTED_MODULE_0__.parse(name);\n                    name = parsedPath.name;\n                    baseDir = parsedPath.dir;\n                }\n                return this._onRequire(module, exports, name, baseDir);\n            };\n            const onRequire = (exports, name, baseDir) => {\n                return this._onRequire(module, exports, name, baseDir);\n            };\n            // `RequireInTheMiddleSingleton` does not support absolute paths.\n            // For an absolute paths, we must create a separate instance of the\n            // require-in-the-middle `Hook`.\n            const hook = path__WEBPACK_IMPORTED_MODULE_0__.isAbsolute(module.name)\n                ? new require_in_the_middle__WEBPACK_IMPORTED_MODULE_3__.Hook([module.name], { internals: true }, onRequire)\n                : this._requireInTheMiddleSingleton.register(module.name, onRequire);\n            this._hooks.push(hook);\n            const esmHook = new import_in_the_middle__WEBPACK_IMPORTED_MODULE_2__.Hook([module.name], { internals: false }, hookFn);\n            this._hooks.push(esmHook);\n        }\n    }\n    disable() {\n        if (!this._enabled) {\n            return;\n        }\n        this._enabled = false;\n        for (const module of this._modules) {\n            if (typeof module.unpatch === 'function' && module.moduleExports) {\n                this._diag.debug('Removing instrumentation patch for nodejs module on instrumentation disabled', {\n                    module: module.name,\n                    version: module.moduleVersion,\n                });\n                module.unpatch(module.moduleExports, module.moduleVersion);\n            }\n            for (const file of module.files) {\n                if (file.moduleExports) {\n                    this._diag.debug('Removing instrumentation patch for nodejs module file on instrumentation disabled', {\n                        module: module.name,\n                        version: module.moduleVersion,\n                        fileName: file.name,\n                    });\n                    file.unpatch(file.moduleExports, module.moduleVersion);\n                }\n            }\n        }\n    }\n    isEnabled() {\n        return this._enabled;\n    }\n}\nfunction isSupported(supportedVersions, version, includePrerelease) {\n    if (typeof version === 'undefined') {\n        // If we don't have the version, accept the wildcard case only\n        return supportedVersions.includes('*');\n    }\n    return supportedVersions.some(supportedVersion => {\n        return (0,_semver__WEBPACK_IMPORTED_MODULE_10__.satisfies)(version, supportedVersion, { includePrerelease });\n    });\n}\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/semconvStability.js":
/*!*******************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/semconvStability.js ***!
  \*******************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SemconvStability: () => (/* binding */ SemconvStability),\n/* harmony export */   semconvStabilityFromStr: () => (/* binding */ semconvStabilityFromStr)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar SemconvStability;\n(function (SemconvStability) {\n    /** Emit only stable semantic conventions. */\n    SemconvStability[SemconvStability[\"STABLE\"] = 1] = \"STABLE\";\n    /** Emit only old semantic conventions. */\n    SemconvStability[SemconvStability[\"OLD\"] = 2] = \"OLD\";\n    /** Emit both stable and old semantic conventions. */\n    SemconvStability[SemconvStability[\"DUPLICATE\"] = 3] = \"DUPLICATE\";\n})(SemconvStability || (SemconvStability = {}));\n/**\n * Determine the appropriate semconv stability for the given namespace.\n *\n * This will parse the given string of comma-separated values (often\n * `process.env.OTEL_SEMCONV_STABILITY_OPT_IN`) looking for the `${namespace}`\n * or `${namespace}/dup` tokens. This is a pattern defined by a number of\n * non-normative semconv documents.\n *\n * For example:\n * - namespace 'http': https://opentelemetry.io/docs/specs/semconv/non-normative/http-migration/\n * - namespace 'database': https://opentelemetry.io/docs/specs/semconv/non-normative/database-migration/\n * - namespace 'k8s': https://opentelemetry.io/docs/specs/semconv/non-normative/k8s-migration/\n *\n * Usage:\n *\n *  import {SemconvStability, semconvStabilityFromStr} from '@opentelemetry/instrumentation';\n *\n *  export class FooInstrumentation extends InstrumentationBase<FooInstrumentationConfig> {\n *    private _semconvStability: SemconvStability;\n *    constructor(config: FooInstrumentationConfig = {}) {\n *      super('@opentelemetry/instrumentation-foo', VERSION, config);\n *\n *      // When supporting the OTEL_SEMCONV_STABILITY_OPT_IN envvar\n *      this._semconvStability = semconvStabilityFromStr(\n *        'http',\n *        process.env.OTEL_SEMCONV_STABILITY_OPT_IN\n *      );\n *\n *      // or when supporting a `semconvStabilityOptIn` config option (e.g. for\n *      // the web where there are no envvars).\n *      this._semconvStability = semconvStabilityFromStr(\n *        'http',\n *        config?.semconvStabilityOptIn\n *      );\n *    }\n *  }\n *\n *  // Then, to apply semconv, use the following or similar:\n *  if (this._semconvStability & SemconvStability.OLD) {\n *    // ...\n *  }\n *  if (this._semconvStability & SemconvStability.STABLE) {\n *    // ...\n *  }\n *\n */\nfunction semconvStabilityFromStr(namespace, str) {\n    let semconvStability = SemconvStability.OLD;\n    // The same parsing of `str` as `getStringListFromEnv` from the core pkg.\n    const entries = str\n        ?.split(',')\n        .map(v => v.trim())\n        .filter(s => s !== '');\n    for (const entry of entries ?? []) {\n        if (entry.toLowerCase() === namespace + '/dup') {\n            // DUPLICATE takes highest precedence.\n            semconvStability = SemconvStability.DUPLICATE;\n            break;\n        }\n        else if (entry.toLowerCase() === namespace) {\n            semconvStability = SemconvStability.STABLE;\n        }\n    }\n    return semconvStability;\n}\n//# sourceMappingURL=semconvStability.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL3NlbWNvbnZTdGFiaWxpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0Q0FBNEM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsVUFBVTtBQUM3RSxTQUFTLFVBQVU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQ0FBMkM7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAb3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRfZjY1MjY4NmY2MjZjODk4ODMzMDBlNzIyZTBiZWFkY2ZcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXGluc3RydW1lbnRhdGlvblxcYnVpbGRcXGVzbVxcc2VtY29udlN0YWJpbGl0eS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0IHZhciBTZW1jb252U3RhYmlsaXR5O1xuKGZ1bmN0aW9uIChTZW1jb252U3RhYmlsaXR5KSB7XG4gICAgLyoqIEVtaXQgb25seSBzdGFibGUgc2VtYW50aWMgY29udmVudGlvbnMuICovXG4gICAgU2VtY29udlN0YWJpbGl0eVtTZW1jb252U3RhYmlsaXR5W1wiU1RBQkxFXCJdID0gMV0gPSBcIlNUQUJMRVwiO1xuICAgIC8qKiBFbWl0IG9ubHkgb2xkIHNlbWFudGljIGNvbnZlbnRpb25zLiAqL1xuICAgIFNlbWNvbnZTdGFiaWxpdHlbU2VtY29udlN0YWJpbGl0eVtcIk9MRFwiXSA9IDJdID0gXCJPTERcIjtcbiAgICAvKiogRW1pdCBib3RoIHN0YWJsZSBhbmQgb2xkIHNlbWFudGljIGNvbnZlbnRpb25zLiAqL1xuICAgIFNlbWNvbnZTdGFiaWxpdHlbU2VtY29udlN0YWJpbGl0eVtcIkRVUExJQ0FURVwiXSA9IDNdID0gXCJEVVBMSUNBVEVcIjtcbn0pKFNlbWNvbnZTdGFiaWxpdHkgfHwgKFNlbWNvbnZTdGFiaWxpdHkgPSB7fSkpO1xuLyoqXG4gKiBEZXRlcm1pbmUgdGhlIGFwcHJvcHJpYXRlIHNlbWNvbnYgc3RhYmlsaXR5IGZvciB0aGUgZ2l2ZW4gbmFtZXNwYWNlLlxuICpcbiAqIFRoaXMgd2lsbCBwYXJzZSB0aGUgZ2l2ZW4gc3RyaW5nIG9mIGNvbW1hLXNlcGFyYXRlZCB2YWx1ZXMgKG9mdGVuXG4gKiBgcHJvY2Vzcy5lbnYuT1RFTF9TRU1DT05WX1NUQUJJTElUWV9PUFRfSU5gKSBsb29raW5nIGZvciB0aGUgYCR7bmFtZXNwYWNlfWBcbiAqIG9yIGAke25hbWVzcGFjZX0vZHVwYCB0b2tlbnMuIFRoaXMgaXMgYSBwYXR0ZXJuIGRlZmluZWQgYnkgYSBudW1iZXIgb2ZcbiAqIG5vbi1ub3JtYXRpdmUgc2VtY29udiBkb2N1bWVudHMuXG4gKlxuICogRm9yIGV4YW1wbGU6XG4gKiAtIG5hbWVzcGFjZSAnaHR0cCc6IGh0dHBzOi8vb3BlbnRlbGVtZXRyeS5pby9kb2NzL3NwZWNzL3NlbWNvbnYvbm9uLW5vcm1hdGl2ZS9odHRwLW1pZ3JhdGlvbi9cbiAqIC0gbmFtZXNwYWNlICdkYXRhYmFzZSc6IGh0dHBzOi8vb3BlbnRlbGVtZXRyeS5pby9kb2NzL3NwZWNzL3NlbWNvbnYvbm9uLW5vcm1hdGl2ZS9kYXRhYmFzZS1taWdyYXRpb24vXG4gKiAtIG5hbWVzcGFjZSAnazhzJzogaHR0cHM6Ly9vcGVudGVsZW1ldHJ5LmlvL2RvY3Mvc3BlY3Mvc2VtY29udi9ub24tbm9ybWF0aXZlL2s4cy1taWdyYXRpb24vXG4gKlxuICogVXNhZ2U6XG4gKlxuICogIGltcG9ydCB7U2VtY29udlN0YWJpbGl0eSwgc2VtY29udlN0YWJpbGl0eUZyb21TdHJ9IGZyb20gJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbic7XG4gKlxuICogIGV4cG9ydCBjbGFzcyBGb29JbnN0cnVtZW50YXRpb24gZXh0ZW5kcyBJbnN0cnVtZW50YXRpb25CYXNlPEZvb0luc3RydW1lbnRhdGlvbkNvbmZpZz4ge1xuICogICAgcHJpdmF0ZSBfc2VtY29udlN0YWJpbGl0eTogU2VtY29udlN0YWJpbGl0eTtcbiAqICAgIGNvbnN0cnVjdG9yKGNvbmZpZzogRm9vSW5zdHJ1bWVudGF0aW9uQ29uZmlnID0ge30pIHtcbiAqICAgICAgc3VwZXIoJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1mb28nLCBWRVJTSU9OLCBjb25maWcpO1xuICpcbiAqICAgICAgLy8gV2hlbiBzdXBwb3J0aW5nIHRoZSBPVEVMX1NFTUNPTlZfU1RBQklMSVRZX09QVF9JTiBlbnZ2YXJcbiAqICAgICAgdGhpcy5fc2VtY29udlN0YWJpbGl0eSA9IHNlbWNvbnZTdGFiaWxpdHlGcm9tU3RyKFxuICogICAgICAgICdodHRwJyxcbiAqICAgICAgICBwcm9jZXNzLmVudi5PVEVMX1NFTUNPTlZfU1RBQklMSVRZX09QVF9JTlxuICogICAgICApO1xuICpcbiAqICAgICAgLy8gb3Igd2hlbiBzdXBwb3J0aW5nIGEgYHNlbWNvbnZTdGFiaWxpdHlPcHRJbmAgY29uZmlnIG9wdGlvbiAoZS5nLiBmb3JcbiAqICAgICAgLy8gdGhlIHdlYiB3aGVyZSB0aGVyZSBhcmUgbm8gZW52dmFycykuXG4gKiAgICAgIHRoaXMuX3NlbWNvbnZTdGFiaWxpdHkgPSBzZW1jb252U3RhYmlsaXR5RnJvbVN0cihcbiAqICAgICAgICAnaHR0cCcsXG4gKiAgICAgICAgY29uZmlnPy5zZW1jb252U3RhYmlsaXR5T3B0SW5cbiAqICAgICAgKTtcbiAqICAgIH1cbiAqICB9XG4gKlxuICogIC8vIFRoZW4sIHRvIGFwcGx5IHNlbWNvbnYsIHVzZSB0aGUgZm9sbG93aW5nIG9yIHNpbWlsYXI6XG4gKiAgaWYgKHRoaXMuX3NlbWNvbnZTdGFiaWxpdHkgJiBTZW1jb252U3RhYmlsaXR5Lk9MRCkge1xuICogICAgLy8gLi4uXG4gKiAgfVxuICogIGlmICh0aGlzLl9zZW1jb252U3RhYmlsaXR5ICYgU2VtY29udlN0YWJpbGl0eS5TVEFCTEUpIHtcbiAqICAgIC8vIC4uLlxuICogIH1cbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZW1jb252U3RhYmlsaXR5RnJvbVN0cihuYW1lc3BhY2UsIHN0cikge1xuICAgIGxldCBzZW1jb252U3RhYmlsaXR5ID0gU2VtY29udlN0YWJpbGl0eS5PTEQ7XG4gICAgLy8gVGhlIHNhbWUgcGFyc2luZyBvZiBgc3RyYCBhcyBgZ2V0U3RyaW5nTGlzdEZyb21FbnZgIGZyb20gdGhlIGNvcmUgcGtnLlxuICAgIGNvbnN0IGVudHJpZXMgPSBzdHJcbiAgICAgICAgPy5zcGxpdCgnLCcpXG4gICAgICAgIC5tYXAodiA9PiB2LnRyaW0oKSlcbiAgICAgICAgLmZpbHRlcihzID0+IHMgIT09ICcnKTtcbiAgICBmb3IgKGNvbnN0IGVudHJ5IG9mIGVudHJpZXMgPz8gW10pIHtcbiAgICAgICAgaWYgKGVudHJ5LnRvTG93ZXJDYXNlKCkgPT09IG5hbWVzcGFjZSArICcvZHVwJykge1xuICAgICAgICAgICAgLy8gRFVQTElDQVRFIHRha2VzIGhpZ2hlc3QgcHJlY2VkZW5jZS5cbiAgICAgICAgICAgIHNlbWNvbnZTdGFiaWxpdHkgPSBTZW1jb252U3RhYmlsaXR5LkRVUExJQ0FURTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGVudHJ5LnRvTG93ZXJDYXNlKCkgPT09IG5hbWVzcGFjZSkge1xuICAgICAgICAgICAgc2VtY29udlN0YWJpbGl0eSA9IFNlbWNvbnZTdGFiaWxpdHkuU1RBQkxFO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzZW1jb252U3RhYmlsaXR5O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VtY29udlN0YWJpbGl0eS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/semconvStability.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/semver.js":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/semver.js ***!
  \*********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   satisfies: () => (/* binding */ satisfies)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This is a custom semantic versioning implementation compatible with the\n// `satisfies(version, range, options?)` function from the `semver` npm package;\n// with the exception that the `loose` option is not supported.\n//\n// The motivation for the custom semver implementation is that\n// `semver` package has some initialization delay (lots of RegExp init and compile)\n// and this leads to coldstart overhead for the OTEL Lambda Node.js layer.\n// Hence, we have implemented lightweight version of it internally with required functionalities.\n\nconst VERSION_REGEXP = /^(?:v)?(?<version>(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)\\.(?<patch>0|[1-9]\\d*))(?:-(?<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<build>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\nconst RANGE_REGEXP = /^(?<op><|>|=|==|<=|>=|~|\\^|~>)?\\s*(?:v)?(?<version>(?<major>x|X|\\*|0|[1-9]\\d*)(?:\\.(?<minor>x|X|\\*|0|[1-9]\\d*))?(?:\\.(?<patch>x|X|\\*|0|[1-9]\\d*))?)(?:-(?<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<build>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\nconst operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1],\n    '!=': [-1, 1],\n};\n/**\n * Checks given version whether it satisfies given range expression.\n * @param version the [version](https://github.com/npm/node-semver#versions) to be checked\n * @param range   the [range](https://github.com/npm/node-semver#ranges) expression for version check\n * @param options options to configure semver satisfy check\n */\nfunction satisfies(version, range, options) {\n    // Strict semver format check\n    if (!_validateVersion(version)) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.error(`Invalid version: ${version}`);\n        return false;\n    }\n    // If range is empty, satisfy check succeeds regardless what version is\n    if (!range) {\n        return true;\n    }\n    // Cleanup range\n    range = range.replace(/([<>=~^]+)\\s+/g, '$1');\n    // Parse version\n    const parsedVersion = _parseVersion(version);\n    if (!parsedVersion) {\n        return false;\n    }\n    const allParsedRanges = [];\n    // Check given version whether it satisfies given range expression\n    const checkResult = _doSatisfies(parsedVersion, range, allParsedRanges, options);\n    // If check result is OK,\n    // do another final check for pre-release, if pre-release check is included by option\n    if (checkResult && !options?.includePrerelease) {\n        return _doPreleaseCheck(parsedVersion, allParsedRanges);\n    }\n    return checkResult;\n}\nfunction _validateVersion(version) {\n    return typeof version === 'string' && VERSION_REGEXP.test(version);\n}\nfunction _doSatisfies(parsedVersion, range, allParsedRanges, options) {\n    if (range.includes('||')) {\n        // A version matches a range if and only if\n        // every comparator in at least one of the ||-separated comparator sets is satisfied by the version\n        const ranges = range.trim().split('||');\n        for (const r of ranges) {\n            if (_checkRange(parsedVersion, r, allParsedRanges, options)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    else if (range.includes(' - ')) {\n        // Hyphen ranges: https://github.com/npm/node-semver#hyphen-ranges-xyz---abc\n        range = replaceHyphen(range, options);\n    }\n    else if (range.includes(' ')) {\n        // Multiple separated ranges and all needs to be satisfied for success\n        const ranges = range\n            .trim()\n            .replace(/\\s{2,}/g, ' ')\n            .split(' ');\n        for (const r of ranges) {\n            if (!_checkRange(parsedVersion, r, allParsedRanges, options)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Check given parsed version with given range\n    return _checkRange(parsedVersion, range, allParsedRanges, options);\n}\nfunction _checkRange(parsedVersion, range, allParsedRanges, options) {\n    range = _normalizeRange(range, options);\n    if (range.includes(' ')) {\n        // If there are multiple ranges separated, satisfy each of them\n        return _doSatisfies(parsedVersion, range, allParsedRanges, options);\n    }\n    else {\n        // Validate and parse range\n        const parsedRange = _parseRange(range);\n        allParsedRanges.push(parsedRange);\n        // Check parsed version by parsed range\n        return _satisfies(parsedVersion, parsedRange);\n    }\n}\nfunction _satisfies(parsedVersion, parsedRange) {\n    // If range is invalid, satisfy check fails (no error throw)\n    if (parsedRange.invalid) {\n        return false;\n    }\n    // If range is empty or wildcard, satisfy check succeeds regardless what version is\n    if (!parsedRange.version || _isWildcard(parsedRange.version)) {\n        return true;\n    }\n    // Compare version segment first\n    let comparisonResult = _compareVersionSegments(parsedVersion.versionSegments || [], parsedRange.versionSegments || []);\n    // If versions segments are equal, compare by pre-release segments\n    if (comparisonResult === 0) {\n        const versionPrereleaseSegments = parsedVersion.prereleaseSegments || [];\n        const rangePrereleaseSegments = parsedRange.prereleaseSegments || [];\n        if (!versionPrereleaseSegments.length && !rangePrereleaseSegments.length) {\n            comparisonResult = 0;\n        }\n        else if (!versionPrereleaseSegments.length &&\n            rangePrereleaseSegments.length) {\n            comparisonResult = 1;\n        }\n        else if (versionPrereleaseSegments.length &&\n            !rangePrereleaseSegments.length) {\n            comparisonResult = -1;\n        }\n        else {\n            comparisonResult = _compareVersionSegments(versionPrereleaseSegments, rangePrereleaseSegments);\n        }\n    }\n    // Resolve check result according to comparison operator\n    return operatorResMap[parsedRange.op]?.includes(comparisonResult);\n}\nfunction _doPreleaseCheck(parsedVersion, allParsedRanges) {\n    if (parsedVersion.prerelease) {\n        return allParsedRanges.some(r => r.prerelease && r.version === parsedVersion.version);\n    }\n    return true;\n}\nfunction _normalizeRange(range, options) {\n    range = range.trim();\n    range = replaceCaret(range, options);\n    range = replaceTilde(range);\n    range = replaceXRange(range, options);\n    range = range.trim();\n    return range;\n}\nfunction isX(id) {\n    return !id || id.toLowerCase() === 'x' || id === '*';\n}\nfunction _parseVersion(versionString) {\n    const match = versionString.match(VERSION_REGEXP);\n    if (!match) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.error(`Invalid version: ${versionString}`);\n        return undefined;\n    }\n    const version = match.groups.version;\n    const prerelease = match.groups.prerelease;\n    const build = match.groups.build;\n    const versionSegments = version.split('.');\n    const prereleaseSegments = prerelease?.split('.');\n    return {\n        op: undefined,\n        version,\n        versionSegments,\n        versionSegmentCount: versionSegments.length,\n        prerelease,\n        prereleaseSegments,\n        prereleaseSegmentCount: prereleaseSegments ? prereleaseSegments.length : 0,\n        build,\n    };\n}\nfunction _parseRange(rangeString) {\n    if (!rangeString) {\n        return {};\n    }\n    const match = rangeString.match(RANGE_REGEXP);\n    if (!match) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.error(`Invalid range: ${rangeString}`);\n        return {\n            invalid: true,\n        };\n    }\n    let op = match.groups.op;\n    const version = match.groups.version;\n    const prerelease = match.groups.prerelease;\n    const build = match.groups.build;\n    const versionSegments = version.split('.');\n    const prereleaseSegments = prerelease?.split('.');\n    if (op === '==') {\n        op = '=';\n    }\n    return {\n        op: op || '=',\n        version,\n        versionSegments,\n        versionSegmentCount: versionSegments.length,\n        prerelease,\n        prereleaseSegments,\n        prereleaseSegmentCount: prereleaseSegments ? prereleaseSegments.length : 0,\n        build,\n    };\n}\nfunction _isWildcard(s) {\n    return s === '*' || s === 'x' || s === 'X';\n}\nfunction _parseVersionString(v) {\n    const n = parseInt(v, 10);\n    return isNaN(n) ? v : n;\n}\nfunction _normalizeVersionType(a, b) {\n    if (typeof a === typeof b) {\n        if (typeof a === 'number') {\n            return [a, b];\n        }\n        else if (typeof a === 'string') {\n            return [a, b];\n        }\n        else {\n            throw new Error('Version segments can only be strings or numbers');\n        }\n    }\n    else {\n        return [String(a), String(b)];\n    }\n}\nfunction _compareVersionStrings(v1, v2) {\n    if (_isWildcard(v1) || _isWildcard(v2)) {\n        return 0;\n    }\n    const [parsedV1, parsedV2] = _normalizeVersionType(_parseVersionString(v1), _parseVersionString(v2));\n    if (parsedV1 > parsedV2) {\n        return 1;\n    }\n    else if (parsedV1 < parsedV2) {\n        return -1;\n    }\n    return 0;\n}\nfunction _compareVersionSegments(v1, v2) {\n    for (let i = 0; i < Math.max(v1.length, v2.length); i++) {\n        const res = _compareVersionStrings(v1[i] || '0', v2[i] || '0');\n        if (res !== 0) {\n            return res;\n        }\n    }\n    return 0;\n}\n////////////////////////////////////////////////////////////////////////////////\n// The rest of this file is adapted from portions of https://github.com/npm/node-semver/tree/868d4bb\n// License:\n/*\n * The ISC License\n *\n * Copyright (c) Isaac Z. Schlueter and Contributors\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\n * IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]';\nconst NUMERICIDENTIFIER = '0|[1-9]\\\\d*';\nconst NONNUMERICIDENTIFIER = `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`;\nconst GTLT = '((?:<|>)?=?)';\nconst PRERELEASEIDENTIFIER = `(?:${NUMERICIDENTIFIER}|${NONNUMERICIDENTIFIER})`;\nconst PRERELEASE = `(?:-(${PRERELEASEIDENTIFIER}(?:\\\\.${PRERELEASEIDENTIFIER})*))`;\nconst BUILDIDENTIFIER = `${LETTERDASHNUMBER}+`;\nconst BUILD = `(?:\\\\+(${BUILDIDENTIFIER}(?:\\\\.${BUILDIDENTIFIER})*))`;\nconst XRANGEIDENTIFIER = `${NUMERICIDENTIFIER}|x|X|\\\\*`;\nconst XRANGEPLAIN = `[v=\\\\s]*(${XRANGEIDENTIFIER})` +\n    `(?:\\\\.(${XRANGEIDENTIFIER})` +\n    `(?:\\\\.(${XRANGEIDENTIFIER})` +\n    `(?:${PRERELEASE})?${BUILD}?` +\n    `)?)?`;\nconst XRANGE = `^${GTLT}\\\\s*${XRANGEPLAIN}$`;\nconst XRANGE_REGEXP = new RegExp(XRANGE);\nconst HYPHENRANGE = `^\\\\s*(${XRANGEPLAIN})` + `\\\\s+-\\\\s+` + `(${XRANGEPLAIN})` + `\\\\s*$`;\nconst HYPHENRANGE_REGEXP = new RegExp(HYPHENRANGE);\nconst LONETILDE = '(?:~>?)';\nconst TILDE = `^${LONETILDE}${XRANGEPLAIN}$`;\nconst TILDE_REGEXP = new RegExp(TILDE);\nconst LONECARET = '(?:\\\\^)';\nconst CARET = `^${LONECARET}${XRANGEPLAIN}$`;\nconst CARET_REGEXP = new RegExp(CARET);\n// Borrowed from https://github.com/npm/node-semver/blob/868d4bbe3d318c52544f38d5f9977a1103e924c2/classes/range.js#L285\n//\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nfunction replaceTilde(comp) {\n    const r = TILDE_REGEXP;\n    return comp.replace(r, (_, M, m, p, pr) => {\n        let ret;\n        if (isX(M)) {\n            ret = '';\n        }\n        else if (isX(m)) {\n            ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;\n        }\n        else if (isX(p)) {\n            // ~1.2 == >=1.2.0 <1.3.0-0\n            ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;\n        }\n        else if (pr) {\n            ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n        }\n        else {\n            // ~1.2.3 == >=1.2.3 <1.3.0-0\n            ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;\n        }\n        return ret;\n    });\n}\n// Borrowed from https://github.com/npm/node-semver/blob/868d4bbe3d318c52544f38d5f9977a1103e924c2/classes/range.js#L329\n//\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nfunction replaceCaret(comp, options) {\n    const r = CARET_REGEXP;\n    const z = options?.includePrerelease ? '-0' : '';\n    return comp.replace(r, (_, M, m, p, pr) => {\n        let ret;\n        if (isX(M)) {\n            ret = '';\n        }\n        else if (isX(m)) {\n            ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;\n        }\n        else if (isX(p)) {\n            if (M === '0') {\n                ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;\n            }\n            else {\n                ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;\n            }\n        }\n        else if (pr) {\n            if (M === '0') {\n                if (m === '0') {\n                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;\n                }\n                else {\n                    ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n                }\n            }\n            else {\n                ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;\n            }\n        }\n        else {\n            if (M === '0') {\n                if (m === '0') {\n                    ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;\n                }\n                else {\n                    ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;\n                }\n            }\n            else {\n                ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;\n            }\n        }\n        return ret;\n    });\n}\n// Borrowed from https://github.com/npm/node-semver/blob/868d4bbe3d318c52544f38d5f9977a1103e924c2/classes/range.js#L390\nfunction replaceXRange(comp, options) {\n    const r = XRANGE_REGEXP;\n    return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n        const xM = isX(M);\n        const xm = xM || isX(m);\n        const xp = xm || isX(p);\n        const anyX = xp;\n        if (gtlt === '=' && anyX) {\n            gtlt = '';\n        }\n        // if we're including prereleases in the match, then we need\n        // to fix this to -0, the lowest possible prerelease value\n        pr = options?.includePrerelease ? '-0' : '';\n        if (xM) {\n            if (gtlt === '>' || gtlt === '<') {\n                // nothing is allowed\n                ret = '<0.0.0-0';\n            }\n            else {\n                // nothing is forbidden\n                ret = '*';\n            }\n        }\n        else if (gtlt && anyX) {\n            // we know patch is an x, because we have any x at all.\n            // replace X with 0\n            if (xm) {\n                m = 0;\n            }\n            p = 0;\n            if (gtlt === '>') {\n                // >1 => >=2.0.0\n                // >1.2 => >=1.3.0\n                gtlt = '>=';\n                if (xm) {\n                    M = +M + 1;\n                    m = 0;\n                    p = 0;\n                }\n                else {\n                    m = +m + 1;\n                    p = 0;\n                }\n            }\n            else if (gtlt === '<=') {\n                // <=0.7.x is actually <0.8.0, since any 0.7.x should\n                // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n                gtlt = '<';\n                if (xm) {\n                    M = +M + 1;\n                }\n                else {\n                    m = +m + 1;\n                }\n            }\n            if (gtlt === '<') {\n                pr = '-0';\n            }\n            ret = `${gtlt + M}.${m}.${p}${pr}`;\n        }\n        else if (xm) {\n            ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;\n        }\n        else if (xp) {\n            ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;\n        }\n        return ret;\n    });\n}\n// Borrowed from https://github.com/npm/node-semver/blob/868d4bbe3d318c52544f38d5f9977a1103e924c2/classes/range.js#L488\n//\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nfunction replaceHyphen(comp, options) {\n    const r = HYPHENRANGE_REGEXP;\n    return comp.replace(r, (_, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr) => {\n        if (isX(fM)) {\n            from = '';\n        }\n        else if (isX(fm)) {\n            from = `>=${fM}.0.0${options?.includePrerelease ? '-0' : ''}`;\n        }\n        else if (isX(fp)) {\n            from = `>=${fM}.${fm}.0${options?.includePrerelease ? '-0' : ''}`;\n        }\n        else if (fpr) {\n            from = `>=${from}`;\n        }\n        else {\n            from = `>=${from}${options?.includePrerelease ? '-0' : ''}`;\n        }\n        if (isX(tM)) {\n            to = '';\n        }\n        else if (isX(tm)) {\n            to = `<${+tM + 1}.0.0-0`;\n        }\n        else if (isX(tp)) {\n            to = `<${tM}.${+tm + 1}.0-0`;\n        }\n        else if (tpr) {\n            to = `<=${tM}.${tm}.${tp}-${tpr}`;\n        }\n        else if (options?.includePrerelease) {\n            to = `<${tM}.${tm}.${+tp + 1}-0`;\n        }\n        else {\n            to = `<=${to}`;\n        }\n        return `${from} ${to}`.trim();\n    });\n}\n//# sourceMappingURL=semver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/semver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js ***!
  \**********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ shimmer),\n/* harmony export */   massUnwrap: () => (/* binding */ massUnwrap),\n/* harmony export */   massWrap: () => (/* binding */ massWrap),\n/* harmony export */   unwrap: () => (/* binding */ unwrap),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Default to complaining loudly when things don't go according to plan.\n// eslint-disable-next-line no-console\nlet logger = console.error.bind(console);\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty(obj, name, value) {\n    const enumerable = !!obj[name] &&\n        Object.prototype.propertyIsEnumerable.call(obj, name);\n    Object.defineProperty(obj, name, {\n        configurable: true,\n        enumerable,\n        writable: true,\n        value,\n    });\n}\nconst wrap = (nodule, name, wrapper) => {\n    if (!nodule || !nodule[name]) {\n        logger('no original function ' + String(name) + ' to wrap');\n        return;\n    }\n    if (!wrapper) {\n        logger('no wrapper function');\n        logger(new Error().stack);\n        return;\n    }\n    const original = nodule[name];\n    if (typeof original !== 'function' || typeof wrapper !== 'function') {\n        logger('original object and wrapper must be functions');\n        return;\n    }\n    const wrapped = wrapper(original, name);\n    defineProperty(wrapped, '__original', original);\n    defineProperty(wrapped, '__unwrap', () => {\n        if (nodule[name] === wrapped) {\n            defineProperty(nodule, name, original);\n        }\n    });\n    defineProperty(wrapped, '__wrapped', true);\n    defineProperty(nodule, name, wrapped);\n    return wrapped;\n};\nconst massWrap = (nodules, names, wrapper) => {\n    if (!nodules) {\n        logger('must provide one or more modules to patch');\n        logger(new Error().stack);\n        return;\n    }\n    else if (!Array.isArray(nodules)) {\n        nodules = [nodules];\n    }\n    if (!(names && Array.isArray(names))) {\n        logger('must provide one or more functions to wrap on modules');\n        return;\n    }\n    nodules.forEach(nodule => {\n        names.forEach(name => {\n            wrap(nodule, name, wrapper);\n        });\n    });\n};\nconst unwrap = (nodule, name) => {\n    if (!nodule || !nodule[name]) {\n        logger('no function to unwrap.');\n        logger(new Error().stack);\n        return;\n    }\n    const wrapped = nodule[name];\n    if (!wrapped.__unwrap) {\n        logger('no original to unwrap to -- has ' +\n            String(name) +\n            ' already been unwrapped?');\n    }\n    else {\n        wrapped.__unwrap();\n        return;\n    }\n};\nconst massUnwrap = (nodules, names) => {\n    if (!nodules) {\n        logger('must provide one or more modules to patch');\n        logger(new Error().stack);\n        return;\n    }\n    else if (!Array.isArray(nodules)) {\n        nodules = [nodules];\n    }\n    if (!(names && Array.isArray(names))) {\n        logger('must provide one or more functions to unwrap on modules');\n        return;\n    }\n    nodules.forEach(nodule => {\n        names.forEach(name => {\n            unwrap(nodule, name);\n        });\n    });\n};\nfunction shimmer(options) {\n    if (options && options.logger) {\n        if (typeof options.logger !== 'function') {\n            logger(\"new logger isn't a function, not replacing\");\n        }\n        else {\n            logger = options.logger;\n        }\n    }\n}\nshimmer.wrap = wrap;\nshimmer.massWrap = massWrap;\nshimmer.unwrap = unwrap;\nshimmer.massUnwrap = massUnwrap;\n//# sourceMappingURL=shimmer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL3NoaW1tZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdF9mNjUyNjg2ZjYyNmM4OTg4MzMwMGU3MjJlMGJlYWRjZlxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uXFxidWlsZFxcZXNtXFxzaGltbWVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG4vLyBEZWZhdWx0IHRvIGNvbXBsYWluaW5nIGxvdWRseSB3aGVuIHRoaW5ncyBkb24ndCBnbyBhY2NvcmRpbmcgdG8gcGxhbi5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG5sZXQgbG9nZ2VyID0gY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUpO1xuLy8gU2V0cyBhIHByb3BlcnR5IG9uIGFuIG9iamVjdCwgcHJlc2VydmluZyBpdHMgZW51bWVyYWJpbGl0eS5cbi8vIFRoaXMgZnVuY3Rpb24gYXNzdW1lcyB0aGF0IHRoZSBwcm9wZXJ0eSBpcyBhbHJlYWR5IHdyaXRhYmxlLlxuZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkob2JqLCBuYW1lLCB2YWx1ZSkge1xuICAgIGNvbnN0IGVudW1lcmFibGUgPSAhIW9ialtuYW1lXSAmJlxuICAgICAgICBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqLCBuYW1lKTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBuYW1lLCB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlLFxuICAgIH0pO1xufVxuZXhwb3J0IGNvbnN0IHdyYXAgPSAobm9kdWxlLCBuYW1lLCB3cmFwcGVyKSA9PiB7XG4gICAgaWYgKCFub2R1bGUgfHwgIW5vZHVsZVtuYW1lXSkge1xuICAgICAgICBsb2dnZXIoJ25vIG9yaWdpbmFsIGZ1bmN0aW9uICcgKyBTdHJpbmcobmFtZSkgKyAnIHRvIHdyYXAnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIXdyYXBwZXIpIHtcbiAgICAgICAgbG9nZ2VyKCdubyB3cmFwcGVyIGZ1bmN0aW9uJyk7XG4gICAgICAgIGxvZ2dlcihuZXcgRXJyb3IoKS5zdGFjayk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgb3JpZ2luYWwgPSBub2R1bGVbbmFtZV07XG4gICAgaWYgKHR5cGVvZiBvcmlnaW5hbCAhPT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2Ygd3JhcHBlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBsb2dnZXIoJ29yaWdpbmFsIG9iamVjdCBhbmQgd3JhcHBlciBtdXN0IGJlIGZ1bmN0aW9ucycpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHdyYXBwZWQgPSB3cmFwcGVyKG9yaWdpbmFsLCBuYW1lKTtcbiAgICBkZWZpbmVQcm9wZXJ0eSh3cmFwcGVkLCAnX19vcmlnaW5hbCcsIG9yaWdpbmFsKTtcbiAgICBkZWZpbmVQcm9wZXJ0eSh3cmFwcGVkLCAnX191bndyYXAnLCAoKSA9PiB7XG4gICAgICAgIGlmIChub2R1bGVbbmFtZV0gPT09IHdyYXBwZWQpIHtcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KG5vZHVsZSwgbmFtZSwgb3JpZ2luYWwpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgZGVmaW5lUHJvcGVydHkod3JhcHBlZCwgJ19fd3JhcHBlZCcsIHRydWUpO1xuICAgIGRlZmluZVByb3BlcnR5KG5vZHVsZSwgbmFtZSwgd3JhcHBlZCk7XG4gICAgcmV0dXJuIHdyYXBwZWQ7XG59O1xuZXhwb3J0IGNvbnN0IG1hc3NXcmFwID0gKG5vZHVsZXMsIG5hbWVzLCB3cmFwcGVyKSA9PiB7XG4gICAgaWYgKCFub2R1bGVzKSB7XG4gICAgICAgIGxvZ2dlcignbXVzdCBwcm92aWRlIG9uZSBvciBtb3JlIG1vZHVsZXMgdG8gcGF0Y2gnKTtcbiAgICAgICAgbG9nZ2VyKG5ldyBFcnJvcigpLnN0YWNrKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBlbHNlIGlmICghQXJyYXkuaXNBcnJheShub2R1bGVzKSkge1xuICAgICAgICBub2R1bGVzID0gW25vZHVsZXNdO1xuICAgIH1cbiAgICBpZiAoIShuYW1lcyAmJiBBcnJheS5pc0FycmF5KG5hbWVzKSkpIHtcbiAgICAgICAgbG9nZ2VyKCdtdXN0IHByb3ZpZGUgb25lIG9yIG1vcmUgZnVuY3Rpb25zIHRvIHdyYXAgb24gbW9kdWxlcycpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIG5vZHVsZXMuZm9yRWFjaChub2R1bGUgPT4ge1xuICAgICAgICBuYW1lcy5mb3JFYWNoKG5hbWUgPT4ge1xuICAgICAgICAgICAgd3JhcChub2R1bGUsIG5hbWUsIHdyYXBwZXIpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5leHBvcnQgY29uc3QgdW53cmFwID0gKG5vZHVsZSwgbmFtZSkgPT4ge1xuICAgIGlmICghbm9kdWxlIHx8ICFub2R1bGVbbmFtZV0pIHtcbiAgICAgICAgbG9nZ2VyKCdubyBmdW5jdGlvbiB0byB1bndyYXAuJyk7XG4gICAgICAgIGxvZ2dlcihuZXcgRXJyb3IoKS5zdGFjayk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgd3JhcHBlZCA9IG5vZHVsZVtuYW1lXTtcbiAgICBpZiAoIXdyYXBwZWQuX191bndyYXApIHtcbiAgICAgICAgbG9nZ2VyKCdubyBvcmlnaW5hbCB0byB1bndyYXAgdG8gLS0gaGFzICcgK1xuICAgICAgICAgICAgU3RyaW5nKG5hbWUpICtcbiAgICAgICAgICAgICcgYWxyZWFkeSBiZWVuIHVud3JhcHBlZD8nKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHdyYXBwZWQuX191bndyYXAoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbn07XG5leHBvcnQgY29uc3QgbWFzc1Vud3JhcCA9IChub2R1bGVzLCBuYW1lcykgPT4ge1xuICAgIGlmICghbm9kdWxlcykge1xuICAgICAgICBsb2dnZXIoJ211c3QgcHJvdmlkZSBvbmUgb3IgbW9yZSBtb2R1bGVzIHRvIHBhdGNoJyk7XG4gICAgICAgIGxvZ2dlcihuZXcgRXJyb3IoKS5zdGFjayk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkobm9kdWxlcykpIHtcbiAgICAgICAgbm9kdWxlcyA9IFtub2R1bGVzXTtcbiAgICB9XG4gICAgaWYgKCEobmFtZXMgJiYgQXJyYXkuaXNBcnJheShuYW1lcykpKSB7XG4gICAgICAgIGxvZ2dlcignbXVzdCBwcm92aWRlIG9uZSBvciBtb3JlIGZ1bmN0aW9ucyB0byB1bndyYXAgb24gbW9kdWxlcycpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIG5vZHVsZXMuZm9yRWFjaChub2R1bGUgPT4ge1xuICAgICAgICBuYW1lcy5mb3JFYWNoKG5hbWUgPT4ge1xuICAgICAgICAgICAgdW53cmFwKG5vZHVsZSwgbmFtZSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNoaW1tZXIob3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMubG9nZ2VyKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5sb2dnZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGxvZ2dlcihcIm5ldyBsb2dnZXIgaXNuJ3QgYSBmdW5jdGlvbiwgbm90IHJlcGxhY2luZ1wiKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxvZ2dlciA9IG9wdGlvbnMubG9nZ2VyO1xuICAgICAgICB9XG4gICAgfVxufVxuc2hpbW1lci53cmFwID0gd3JhcDtcbnNoaW1tZXIubWFzc1dyYXAgPSBtYXNzV3JhcDtcbnNoaW1tZXIudW53cmFwID0gdW53cmFwO1xuc2hpbW1lci5tYXNzVW53cmFwID0gbWFzc1Vud3JhcDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoaW1tZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/shimmer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/utils.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/utils.js ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isWrapped: () => (/* binding */ isWrapped),\n/* harmony export */   safeExecuteInTheMiddle: () => (/* binding */ safeExecuteInTheMiddle),\n/* harmony export */   safeExecuteInTheMiddleAsync: () => (/* binding */ safeExecuteInTheMiddleAsync)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nfunction safeExecuteInTheMiddle(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nasync function safeExecuteInTheMiddleAsync(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = await execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nfunction isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0X2Y2NTI2ODZmNjI2Yzg5ODgzMzAwZTcyMmUwYmVhZGNmL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24vYnVpbGQvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdF9mNjUyNjg2ZjYyNmM4OTg4MzMwMGU3MjJlMGJlYWRjZlxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxcaW5zdHJ1bWVudGF0aW9uXFxidWlsZFxcZXNtXFx1dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBmdW5jdGlvbiB0byBleGVjdXRlIHBhdGNoZWQgZnVuY3Rpb24gYW5kIGJlaW5nIGFibGUgdG8gY2F0Y2ggZXJyb3JzXG4gKiBAcGFyYW0gZXhlY3V0ZSAtIGZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkXG4gKiBAcGFyYW0gb25GaW5pc2ggLSBjYWxsYmFjayB0byBydW4gd2hlbiBleGVjdXRlIGZpbmlzaGVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYWZlRXhlY3V0ZUluVGhlTWlkZGxlKGV4ZWN1dGUsIG9uRmluaXNoLCBwcmV2ZW50VGhyb3dpbmdFcnJvcikge1xuICAgIGxldCBlcnJvcjtcbiAgICBsZXQgcmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICAgIHJlc3VsdCA9IGV4ZWN1dGUoKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgZXJyb3IgPSBlO1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgb25GaW5pc2goZXJyb3IsIHJlc3VsdCk7XG4gICAgICAgIGlmIChlcnJvciAmJiAhcHJldmVudFRocm93aW5nRXJyb3IpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnNhZmUtZmluYWxseVxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuc2FmZS1maW5hbGx5XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuLyoqXG4gKiBBc3luYyBmdW5jdGlvbiB0byBleGVjdXRlIHBhdGNoZWQgZnVuY3Rpb24gYW5kIGJlaW5nIGFibGUgdG8gY2F0Y2ggZXJyb3JzXG4gKiBAcGFyYW0gZXhlY3V0ZSAtIGZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkXG4gKiBAcGFyYW0gb25GaW5pc2ggLSBjYWxsYmFjayB0byBydW4gd2hlbiBleGVjdXRlIGZpbmlzaGVzXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzYWZlRXhlY3V0ZUluVGhlTWlkZGxlQXN5bmMoZXhlY3V0ZSwgb25GaW5pc2gsIHByZXZlbnRUaHJvd2luZ0Vycm9yKSB7XG4gICAgbGV0IGVycm9yO1xuICAgIGxldCByZXN1bHQ7XG4gICAgdHJ5IHtcbiAgICAgICAgcmVzdWx0ID0gYXdhaXQgZXhlY3V0ZSgpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBlcnJvciA9IGU7XG4gICAgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICBvbkZpbmlzaChlcnJvciwgcmVzdWx0KTtcbiAgICAgICAgaWYgKGVycm9yICYmICFwcmV2ZW50VGhyb3dpbmdFcnJvcikge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuc2FmZS1maW5hbGx5XG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5zYWZlLWZpbmFsbHlcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG4vKipcbiAqIENoZWNrcyBpZiBjZXJ0YWluIGZ1bmN0aW9uIGhhcyBiZWVuIGFscmVhZHkgd3JhcHBlZFxuICogQHBhcmFtIGZ1bmNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzV3JhcHBlZChmdW5jKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgZnVuYyA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgICB0eXBlb2YgZnVuYy5fX29yaWdpbmFsID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgIHR5cGVvZiBmdW5jLl9fdW53cmFwID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgIGZ1bmMuX193cmFwcGVkID09PSB0cnVlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/utils.js\n");

/***/ })

};
;