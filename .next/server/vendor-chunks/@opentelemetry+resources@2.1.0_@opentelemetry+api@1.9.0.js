"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0";
exports.ids = ["vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultResource: () => (/* binding */ defaultResource),\n/* harmony export */   emptyResource: () => (/* binding */ emptyResource),\n/* harmony export */   resourceFromAttributes: () => (/* binding */ resourceFromAttributes),\n/* harmony export */   resourceFromDetectedResource: () => (/* binding */ resourceFromDetectedResource)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _opentelemetry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @opentelemetry/core */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+core@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/core/build/esm/platform/node/sdk-info.js\");\n/* harmony import */ var _opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/stable_attributes.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./platform */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\nclass ResourceImpl {\n    _rawAttributes;\n    _asyncAttributesPending = false;\n    _schemaUrl;\n    _memoizedAttributes;\n    static FromAttributeList(attributes, options) {\n        const res = new ResourceImpl({}, options);\n        res._rawAttributes = guardedRawAttributes(attributes);\n        res._asyncAttributesPending =\n            attributes.filter(([_, val]) => (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(val)).length > 0;\n        return res;\n    }\n    constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    resource, options) {\n        const attributes = resource.attributes ?? {};\n        this._rawAttributes = Object.entries(attributes).map(([k, v]) => {\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(v)) {\n                // side-effect\n                this._asyncAttributesPending = true;\n            }\n            return [k, v];\n        });\n        this._rawAttributes = guardedRawAttributes(this._rawAttributes);\n        this._schemaUrl = validateSchemaUrl(options?.schemaUrl);\n    }\n    get asyncAttributesPending() {\n        return this._asyncAttributesPending;\n    }\n    async waitForAsyncAttributes() {\n        if (!this.asyncAttributesPending) {\n            return;\n        }\n        for (let i = 0; i < this._rawAttributes.length; i++) {\n            const [k, v] = this._rawAttributes[i];\n            this._rawAttributes[i] = [k, (0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(v) ? await v : v];\n        }\n        this._asyncAttributesPending = false;\n    }\n    get attributes() {\n        if (this.asyncAttributesPending) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.error('Accessing resource attributes before async attributes settled');\n        }\n        if (this._memoizedAttributes) {\n            return this._memoizedAttributes;\n        }\n        const attrs = {};\n        for (const [k, v] of this._rawAttributes) {\n            if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(v)) {\n                _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`Unsettled resource attribute ${k} skipped`);\n                continue;\n            }\n            if (v != null) {\n                attrs[k] ??= v;\n            }\n        }\n        // only memoize output if all attributes are settled\n        if (!this._asyncAttributesPending) {\n            this._memoizedAttributes = attrs;\n        }\n        return attrs;\n    }\n    getRawAttributes() {\n        return this._rawAttributes;\n    }\n    get schemaUrl() {\n        return this._schemaUrl;\n    }\n    merge(resource) {\n        if (resource == null)\n            return this;\n        // Order is important\n        // Spec states incoming attributes override existing attributes\n        const mergedSchemaUrl = mergeSchemaUrl(this, resource);\n        const mergedOptions = mergedSchemaUrl\n            ? { schemaUrl: mergedSchemaUrl }\n            : undefined;\n        return ResourceImpl.FromAttributeList([...resource.getRawAttributes(), ...this.getRawAttributes()], mergedOptions);\n    }\n}\nfunction resourceFromAttributes(attributes, options) {\n    return ResourceImpl.FromAttributeList(Object.entries(attributes), options);\n}\nfunction resourceFromDetectedResource(detectedResource, options) {\n    return new ResourceImpl(detectedResource, options);\n}\nfunction emptyResource() {\n    return resourceFromAttributes({});\n}\nfunction defaultResource() {\n    return resourceFromAttributes({\n        [_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_SERVICE_NAME]: (0,_platform__WEBPACK_IMPORTED_MODULE_3__.defaultServiceName)(),\n        [_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_LANGUAGE]: _opentelemetry_core__WEBPACK_IMPORTED_MODULE_4__.SDK_INFO[_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_LANGUAGE],\n        [_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_NAME]: _opentelemetry_core__WEBPACK_IMPORTED_MODULE_4__.SDK_INFO[_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_NAME],\n        [_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_VERSION]: _opentelemetry_core__WEBPACK_IMPORTED_MODULE_4__.SDK_INFO[_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_TELEMETRY_SDK_VERSION],\n    });\n}\nfunction guardedRawAttributes(attributes) {\n    return attributes.map(([k, v]) => {\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isPromiseLike)(v)) {\n            return [\n                k,\n                v.catch(err => {\n                    _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug('promise rejection for resource attribute: %s - %s', k, err);\n                    return undefined;\n                }),\n            ];\n        }\n        return [k, v];\n    });\n}\nfunction validateSchemaUrl(schemaUrl) {\n    if (typeof schemaUrl === 'string' || schemaUrl === undefined) {\n        return schemaUrl;\n    }\n    _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.warn('Schema URL must be string or undefined, got %s. Schema URL will be ignored.', schemaUrl);\n    return undefined;\n}\nfunction mergeSchemaUrl(old, updating) {\n    const oldSchemaUrl = old?.schemaUrl;\n    const updatingSchemaUrl = updating?.schemaUrl;\n    const isOldEmpty = oldSchemaUrl === undefined || oldSchemaUrl === '';\n    const isUpdatingEmpty = updatingSchemaUrl === undefined || updatingSchemaUrl === '';\n    if (isOldEmpty) {\n        return updatingSchemaUrl;\n    }\n    if (isUpdatingEmpty) {\n        return oldSchemaUrl;\n    }\n    if (oldSchemaUrl === updatingSchemaUrl) {\n        return oldSchemaUrl;\n    }\n    _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.warn('Schema URL merge conflict: old resource has \"%s\", updating resource has \"%s\". Resulting resource will have undefined Schema URL.', oldSchemaUrl, updatingSchemaUrl);\n    return undefined;\n}\n//# sourceMappingURL=ResourceImpl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9SZXNvdXJjZUltcGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzBDO0FBQ0s7QUFDNEc7QUFDM0c7QUFDUjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBLDRDQUE0QyxxREFBYTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFEQUFhO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdDQUFnQztBQUN4RDtBQUNBLHlDQUF5QyxxREFBYTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvREFBSTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQWE7QUFDN0IsZ0JBQWdCLG9EQUFJLHVDQUF1QyxHQUFHO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCxvQ0FBb0M7QUFDcEM7QUFDTztBQUNQO0FBQ0EsU0FBUyxrRkFBaUIsR0FBRyw2REFBa0I7QUFDL0MsU0FBUyw0RkFBMkIsR0FBRyx5REFBUSxDQUFDLDRGQUEyQjtBQUMzRSxTQUFTLHdGQUF1QixHQUFHLHlEQUFRLENBQUMsd0ZBQXVCO0FBQ25FLFNBQVMsMkZBQTBCLEdBQUcseURBQVEsQ0FBQywyRkFBMEI7QUFDekUsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFlBQVkscURBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9EQUFJO0FBQ3hCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxvREFBSTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxvREFBSTtBQUNSO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMFxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxccmVzb3VyY2VzXFxidWlsZFxcZXNtXFxSZXNvdXJjZUltcGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IGRpYWcgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuaW1wb3J0IHsgU0RLX0lORk8gfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9jb3JlJztcbmltcG9ydCB7IEFUVFJfU0VSVklDRV9OQU1FLCBBVFRSX1RFTEVNRVRSWV9TREtfTEFOR1VBR0UsIEFUVFJfVEVMRU1FVFJZX1NES19OQU1FLCBBVFRSX1RFTEVNRVRSWV9TREtfVkVSU0lPTiwgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9zZW1hbnRpYy1jb252ZW50aW9ucyc7XG5pbXBvcnQgeyBkZWZhdWx0U2VydmljZU5hbWUgfSBmcm9tICcuL3BsYXRmb3JtJztcbmltcG9ydCB7IGlzUHJvbWlzZUxpa2UgfSBmcm9tICcuL3V0aWxzJztcbmNsYXNzIFJlc291cmNlSW1wbCB7XG4gICAgX3Jhd0F0dHJpYnV0ZXM7XG4gICAgX2FzeW5jQXR0cmlidXRlc1BlbmRpbmcgPSBmYWxzZTtcbiAgICBfc2NoZW1hVXJsO1xuICAgIF9tZW1vaXplZEF0dHJpYnV0ZXM7XG4gICAgc3RhdGljIEZyb21BdHRyaWJ1dGVMaXN0KGF0dHJpYnV0ZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcmVzID0gbmV3IFJlc291cmNlSW1wbCh7fSwgb3B0aW9ucyk7XG4gICAgICAgIHJlcy5fcmF3QXR0cmlidXRlcyA9IGd1YXJkZWRSYXdBdHRyaWJ1dGVzKGF0dHJpYnV0ZXMpO1xuICAgICAgICByZXMuX2FzeW5jQXR0cmlidXRlc1BlbmRpbmcgPVxuICAgICAgICAgICAgYXR0cmlidXRlcy5maWx0ZXIoKFtfLCB2YWxdKSA9PiBpc1Byb21pc2VMaWtlKHZhbCkpLmxlbmd0aCA+IDA7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKFxuICAgIC8qKlxuICAgICAqIEEgZGljdGlvbmFyeSBvZiBhdHRyaWJ1dGVzIHdpdGggc3RyaW5nIGtleXMgYW5kIHZhbHVlcyB0aGF0IHByb3ZpZGVcbiAgICAgKiBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZW50aXR5IGFzIG51bWJlcnMsIHN0cmluZ3Mgb3IgYm9vbGVhbnNcbiAgICAgKiBUT0RPOiBDb25zaWRlciB0byBhZGQgY2hlY2svdmFsaWRhdGlvbiBvbiBhdHRyaWJ1dGVzLlxuICAgICAqL1xuICAgIHJlc291cmNlLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSByZXNvdXJjZS5hdHRyaWJ1dGVzID8/IHt9O1xuICAgICAgICB0aGlzLl9yYXdBdHRyaWJ1dGVzID0gT2JqZWN0LmVudHJpZXMoYXR0cmlidXRlcykubWFwKChbaywgdl0pID0+IHtcbiAgICAgICAgICAgIGlmIChpc1Byb21pc2VMaWtlKHYpKSB7XG4gICAgICAgICAgICAgICAgLy8gc2lkZS1lZmZlY3RcbiAgICAgICAgICAgICAgICB0aGlzLl9hc3luY0F0dHJpYnV0ZXNQZW5kaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBbaywgdl07XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9yYXdBdHRyaWJ1dGVzID0gZ3VhcmRlZFJhd0F0dHJpYnV0ZXModGhpcy5fcmF3QXR0cmlidXRlcyk7XG4gICAgICAgIHRoaXMuX3NjaGVtYVVybCA9IHZhbGlkYXRlU2NoZW1hVXJsKG9wdGlvbnM/LnNjaGVtYVVybCk7XG4gICAgfVxuICAgIGdldCBhc3luY0F0dHJpYnV0ZXNQZW5kaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYXN5bmNBdHRyaWJ1dGVzUGVuZGluZztcbiAgICB9XG4gICAgYXN5bmMgd2FpdEZvckFzeW5jQXR0cmlidXRlcygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmFzeW5jQXR0cmlidXRlc1BlbmRpbmcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3Jhd0F0dHJpYnV0ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IFtrLCB2XSA9IHRoaXMuX3Jhd0F0dHJpYnV0ZXNbaV07XG4gICAgICAgICAgICB0aGlzLl9yYXdBdHRyaWJ1dGVzW2ldID0gW2ssIGlzUHJvbWlzZUxpa2UodikgPyBhd2FpdCB2IDogdl07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYXN5bmNBdHRyaWJ1dGVzUGVuZGluZyA9IGZhbHNlO1xuICAgIH1cbiAgICBnZXQgYXR0cmlidXRlcygpIHtcbiAgICAgICAgaWYgKHRoaXMuYXN5bmNBdHRyaWJ1dGVzUGVuZGluZykge1xuICAgICAgICAgICAgZGlhZy5lcnJvcignQWNjZXNzaW5nIHJlc291cmNlIGF0dHJpYnV0ZXMgYmVmb3JlIGFzeW5jIGF0dHJpYnV0ZXMgc2V0dGxlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9tZW1vaXplZEF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9tZW1vaXplZEF0dHJpYnV0ZXM7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYXR0cnMgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBbaywgdl0gb2YgdGhpcy5fcmF3QXR0cmlidXRlcykge1xuICAgICAgICAgICAgaWYgKGlzUHJvbWlzZUxpa2UodikpIHtcbiAgICAgICAgICAgICAgICBkaWFnLmRlYnVnKGBVbnNldHRsZWQgcmVzb3VyY2UgYXR0cmlidXRlICR7a30gc2tpcHBlZGApO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHYgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGF0dHJzW2tdID8/PSB2O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIG9ubHkgbWVtb2l6ZSBvdXRwdXQgaWYgYWxsIGF0dHJpYnV0ZXMgYXJlIHNldHRsZWRcbiAgICAgICAgaWYgKCF0aGlzLl9hc3luY0F0dHJpYnV0ZXNQZW5kaW5nKSB7XG4gICAgICAgICAgICB0aGlzLl9tZW1vaXplZEF0dHJpYnV0ZXMgPSBhdHRycztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXR0cnM7XG4gICAgfVxuICAgIGdldFJhd0F0dHJpYnV0ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yYXdBdHRyaWJ1dGVzO1xuICAgIH1cbiAgICBnZXQgc2NoZW1hVXJsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2NoZW1hVXJsO1xuICAgIH1cbiAgICBtZXJnZShyZXNvdXJjZSkge1xuICAgICAgICBpZiAocmVzb3VyY2UgPT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAvLyBPcmRlciBpcyBpbXBvcnRhbnRcbiAgICAgICAgLy8gU3BlYyBzdGF0ZXMgaW5jb21pbmcgYXR0cmlidXRlcyBvdmVycmlkZSBleGlzdGluZyBhdHRyaWJ1dGVzXG4gICAgICAgIGNvbnN0IG1lcmdlZFNjaGVtYVVybCA9IG1lcmdlU2NoZW1hVXJsKHRoaXMsIHJlc291cmNlKTtcbiAgICAgICAgY29uc3QgbWVyZ2VkT3B0aW9ucyA9IG1lcmdlZFNjaGVtYVVybFxuICAgICAgICAgICAgPyB7IHNjaGVtYVVybDogbWVyZ2VkU2NoZW1hVXJsIH1cbiAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gUmVzb3VyY2VJbXBsLkZyb21BdHRyaWJ1dGVMaXN0KFsuLi5yZXNvdXJjZS5nZXRSYXdBdHRyaWJ1dGVzKCksIC4uLnRoaXMuZ2V0UmF3QXR0cmlidXRlcygpXSwgbWVyZ2VkT3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc291cmNlRnJvbUF0dHJpYnV0ZXMoYXR0cmlidXRlcywgb3B0aW9ucykge1xuICAgIHJldHVybiBSZXNvdXJjZUltcGwuRnJvbUF0dHJpYnV0ZUxpc3QoT2JqZWN0LmVudHJpZXMoYXR0cmlidXRlcyksIG9wdGlvbnMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc291cmNlRnJvbURldGVjdGVkUmVzb3VyY2UoZGV0ZWN0ZWRSZXNvdXJjZSwgb3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgUmVzb3VyY2VJbXBsKGRldGVjdGVkUmVzb3VyY2UsIG9wdGlvbnMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVtcHR5UmVzb3VyY2UoKSB7XG4gICAgcmV0dXJuIHJlc291cmNlRnJvbUF0dHJpYnV0ZXMoe30pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRSZXNvdXJjZSgpIHtcbiAgICByZXR1cm4gcmVzb3VyY2VGcm9tQXR0cmlidXRlcyh7XG4gICAgICAgIFtBVFRSX1NFUlZJQ0VfTkFNRV06IGRlZmF1bHRTZXJ2aWNlTmFtZSgpLFxuICAgICAgICBbQVRUUl9URUxFTUVUUllfU0RLX0xBTkdVQUdFXTogU0RLX0lORk9bQVRUUl9URUxFTUVUUllfU0RLX0xBTkdVQUdFXSxcbiAgICAgICAgW0FUVFJfVEVMRU1FVFJZX1NES19OQU1FXTogU0RLX0lORk9bQVRUUl9URUxFTUVUUllfU0RLX05BTUVdLFxuICAgICAgICBbQVRUUl9URUxFTUVUUllfU0RLX1ZFUlNJT05dOiBTREtfSU5GT1tBVFRSX1RFTEVNRVRSWV9TREtfVkVSU0lPTl0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBndWFyZGVkUmF3QXR0cmlidXRlcyhhdHRyaWJ1dGVzKSB7XG4gICAgcmV0dXJuIGF0dHJpYnV0ZXMubWFwKChbaywgdl0pID0+IHtcbiAgICAgICAgaWYgKGlzUHJvbWlzZUxpa2UodikpIHtcbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgayxcbiAgICAgICAgICAgICAgICB2LmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGRpYWcuZGVidWcoJ3Byb21pc2UgcmVqZWN0aW9uIGZvciByZXNvdXJjZSBhdHRyaWJ1dGU6ICVzIC0gJXMnLCBrLCBlcnIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW2ssIHZdO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gdmFsaWRhdGVTY2hlbWFVcmwoc2NoZW1hVXJsKSB7XG4gICAgaWYgKHR5cGVvZiBzY2hlbWFVcmwgPT09ICdzdHJpbmcnIHx8IHNjaGVtYVVybCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBzY2hlbWFVcmw7XG4gICAgfVxuICAgIGRpYWcud2FybignU2NoZW1hIFVSTCBtdXN0IGJlIHN0cmluZyBvciB1bmRlZmluZWQsIGdvdCAlcy4gU2NoZW1hIFVSTCB3aWxsIGJlIGlnbm9yZWQuJywgc2NoZW1hVXJsKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuZnVuY3Rpb24gbWVyZ2VTY2hlbWFVcmwob2xkLCB1cGRhdGluZykge1xuICAgIGNvbnN0IG9sZFNjaGVtYVVybCA9IG9sZD8uc2NoZW1hVXJsO1xuICAgIGNvbnN0IHVwZGF0aW5nU2NoZW1hVXJsID0gdXBkYXRpbmc/LnNjaGVtYVVybDtcbiAgICBjb25zdCBpc09sZEVtcHR5ID0gb2xkU2NoZW1hVXJsID09PSB1bmRlZmluZWQgfHwgb2xkU2NoZW1hVXJsID09PSAnJztcbiAgICBjb25zdCBpc1VwZGF0aW5nRW1wdHkgPSB1cGRhdGluZ1NjaGVtYVVybCA9PT0gdW5kZWZpbmVkIHx8IHVwZGF0aW5nU2NoZW1hVXJsID09PSAnJztcbiAgICBpZiAoaXNPbGRFbXB0eSkge1xuICAgICAgICByZXR1cm4gdXBkYXRpbmdTY2hlbWFVcmw7XG4gICAgfVxuICAgIGlmIChpc1VwZGF0aW5nRW1wdHkpIHtcbiAgICAgICAgcmV0dXJuIG9sZFNjaGVtYVVybDtcbiAgICB9XG4gICAgaWYgKG9sZFNjaGVtYVVybCA9PT0gdXBkYXRpbmdTY2hlbWFVcmwpIHtcbiAgICAgICAgcmV0dXJuIG9sZFNjaGVtYVVybDtcbiAgICB9XG4gICAgZGlhZy53YXJuKCdTY2hlbWEgVVJMIG1lcmdlIGNvbmZsaWN0OiBvbGQgcmVzb3VyY2UgaGFzIFwiJXNcIiwgdXBkYXRpbmcgcmVzb3VyY2UgaGFzIFwiJXNcIi4gUmVzdWx0aW5nIHJlc291cmNlIHdpbGwgaGF2ZSB1bmRlZmluZWQgU2NoZW1hIFVSTC4nLCBvbGRTY2hlbWFVcmwsIHVwZGF0aW5nU2NoZW1hVXJsKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmVzb3VyY2VJbXBsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detect-resources.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detect-resources.js ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectResources: () => (/* binding */ detectResources)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _ResourceImpl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ResourceImpl */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Runs all resource detectors and returns the results merged into a single Resource.\n *\n * @param config Configuration for resource detection\n */\nconst detectResources = (config = {}) => {\n    const resources = (config.detectors || []).map(d => {\n        try {\n            const resource = (0,_ResourceImpl__WEBPACK_IMPORTED_MODULE_0__.resourceFromDetectedResource)(d.detect(config));\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`${d.constructor.name} found resource.`, resource);\n            return resource;\n        }\n        catch (e) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`${d.constructor.name} failed: ${e.message}`);\n            return (0,_ResourceImpl__WEBPACK_IMPORTED_MODULE_0__.emptyResource)();\n        }\n    });\n    return resources.reduce((acc, resource) => acc.merge(resource), (0,_ResourceImpl__WEBPACK_IMPORTED_MODULE_0__.emptyResource)());\n};\n//# sourceMappingURL=detect-resources.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3QtcmVzb3VyY2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwQztBQUNtQztBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0NBQW9DO0FBQzNDO0FBQ0E7QUFDQSw2QkFBNkIsMkVBQTRCO0FBQ3pELFlBQVksb0RBQUksVUFBVSxvQkFBb0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvREFBSSxVQUFVLG9CQUFvQixVQUFVLFVBQVU7QUFDbEUsbUJBQW1CLDREQUFhO0FBQ2hDO0FBQ0EsS0FBSztBQUNMLG9FQUFvRSw0REFBYTtBQUNqRjtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAb3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wXFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxyZXNvdXJjZXNcXGJ1aWxkXFxlc21cXGRldGVjdC1yZXNvdXJjZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IGRpYWcgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuaW1wb3J0IHsgZW1wdHlSZXNvdXJjZSwgcmVzb3VyY2VGcm9tRGV0ZWN0ZWRSZXNvdXJjZSB9IGZyb20gJy4vUmVzb3VyY2VJbXBsJztcbi8qKlxuICogUnVucyBhbGwgcmVzb3VyY2UgZGV0ZWN0b3JzIGFuZCByZXR1cm5zIHRoZSByZXN1bHRzIG1lcmdlZCBpbnRvIGEgc2luZ2xlIFJlc291cmNlLlxuICpcbiAqIEBwYXJhbSBjb25maWcgQ29uZmlndXJhdGlvbiBmb3IgcmVzb3VyY2UgZGV0ZWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBkZXRlY3RSZXNvdXJjZXMgPSAoY29uZmlnID0ge30pID0+IHtcbiAgICBjb25zdCByZXNvdXJjZXMgPSAoY29uZmlnLmRldGVjdG9ycyB8fCBbXSkubWFwKGQgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzb3VyY2UgPSByZXNvdXJjZUZyb21EZXRlY3RlZFJlc291cmNlKGQuZGV0ZWN0KGNvbmZpZykpO1xuICAgICAgICAgICAgZGlhZy5kZWJ1ZyhgJHtkLmNvbnN0cnVjdG9yLm5hbWV9IGZvdW5kIHJlc291cmNlLmAsIHJlc291cmNlKTtcbiAgICAgICAgICAgIHJldHVybiByZXNvdXJjZTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgZGlhZy5kZWJ1ZyhgJHtkLmNvbnN0cnVjdG9yLm5hbWV9IGZhaWxlZDogJHtlLm1lc3NhZ2V9YCk7XG4gICAgICAgICAgICByZXR1cm4gZW1wdHlSZXNvdXJjZSgpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc291cmNlcy5yZWR1Y2UoKGFjYywgcmVzb3VyY2UpID0+IGFjYy5tZXJnZShyZXNvdXJjZSksIGVtcHR5UmVzb3VyY2UoKSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGV0ZWN0LXJlc291cmNlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detect-resources.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js ***!
  \*************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   envDetector: () => (/* binding */ envDetector)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/stable_attributes.js\");\n/* harmony import */ var _opentelemetry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/core */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+core@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/core/build/esm/platform/node/environment.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * EnvDetector can be used to detect the presence of and create a Resource\n * from the OTEL_RESOURCE_ATTRIBUTES environment variable.\n */\nclass EnvDetector {\n    // Type, attribute keys, and attribute values should not exceed 256 characters.\n    _MAX_LENGTH = 255;\n    // OTEL_RESOURCE_ATTRIBUTES is a comma-separated list of attributes.\n    _COMMA_SEPARATOR = ',';\n    // OTEL_RESOURCE_ATTRIBUTES contains key value pair separated by '='.\n    _LABEL_KEY_VALUE_SPLITTER = '=';\n    _ERROR_MESSAGE_INVALID_CHARS = 'should be a ASCII string with a length greater than 0 and not exceed ' +\n        this._MAX_LENGTH +\n        ' characters.';\n    _ERROR_MESSAGE_INVALID_VALUE = 'should be a ASCII string with a length not exceed ' +\n        this._MAX_LENGTH +\n        ' characters.';\n    /**\n     * Returns a {@link Resource} populated with attributes from the\n     * OTEL_RESOURCE_ATTRIBUTES environment variable. Note this is an async\n     * function to conform to the Detector interface.\n     *\n     * @param config The resource detection config\n     */\n    detect(_config) {\n        const attributes = {};\n        const rawAttributes = (0,_opentelemetry_core__WEBPACK_IMPORTED_MODULE_0__.getStringFromEnv)('OTEL_RESOURCE_ATTRIBUTES');\n        const serviceName = (0,_opentelemetry_core__WEBPACK_IMPORTED_MODULE_0__.getStringFromEnv)('OTEL_SERVICE_NAME');\n        if (rawAttributes) {\n            try {\n                const parsedAttributes = this._parseResourceAttributes(rawAttributes);\n                Object.assign(attributes, parsedAttributes);\n            }\n            catch (e) {\n                _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`EnvDetector failed: ${e.message}`);\n            }\n        }\n        if (serviceName) {\n            attributes[_opentelemetry_semantic_conventions__WEBPACK_IMPORTED_MODULE_2__.ATTR_SERVICE_NAME] = serviceName;\n        }\n        return { attributes };\n    }\n    /**\n     * Creates an attribute map from the OTEL_RESOURCE_ATTRIBUTES environment\n     * variable.\n     *\n     * OTEL_RESOURCE_ATTRIBUTES: A comma-separated list of attributes describing\n     * the source in more detail, e.g. “key1=val1,key2=val2”. Domain names and\n     * paths are accepted as attribute keys. Values may be quoted or unquoted in\n     * general. If a value contains whitespace, =, or \" characters, it must\n     * always be quoted.\n     *\n     * @param rawEnvAttributes The resource attributes as a comma-separated list\n     * of key/value pairs.\n     * @returns The sanitized resource attributes.\n     */\n    _parseResourceAttributes(rawEnvAttributes) {\n        if (!rawEnvAttributes)\n            return {};\n        const attributes = {};\n        const rawAttributes = rawEnvAttributes.split(this._COMMA_SEPARATOR, -1);\n        for (const rawAttribute of rawAttributes) {\n            const keyValuePair = rawAttribute.split(this._LABEL_KEY_VALUE_SPLITTER, -1);\n            if (keyValuePair.length !== 2) {\n                continue;\n            }\n            let [key, value] = keyValuePair;\n            // Leading and trailing whitespaces are trimmed.\n            key = key.trim();\n            value = value.trim().split(/^\"|\"$/).join('');\n            if (!this._isValidAndNotEmpty(key)) {\n                throw new Error(`Attribute key ${this._ERROR_MESSAGE_INVALID_CHARS}`);\n            }\n            if (!this._isValid(value)) {\n                throw new Error(`Attribute value ${this._ERROR_MESSAGE_INVALID_VALUE}`);\n            }\n            attributes[key] = decodeURIComponent(value);\n        }\n        return attributes;\n    }\n    /**\n     * Determines whether the given String is a valid printable ASCII string with\n     * a length not exceed _MAX_LENGTH characters.\n     *\n     * @param str The String to be validated.\n     * @returns Whether the String is valid.\n     */\n    _isValid(name) {\n        return name.length <= this._MAX_LENGTH && this._isBaggageOctetString(name);\n    }\n    // https://www.w3.org/TR/baggage/#definition\n    _isBaggageOctetString(str) {\n        for (let i = 0; i < str.length; i++) {\n            const ch = str.charCodeAt(i);\n            if (ch < 0x21 || ch === 0x2c || ch === 0x3b || ch === 0x5c || ch > 0x7e) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Determines whether the given String is a valid printable ASCII string with\n     * a length greater than 0 and not exceed _MAX_LENGTH characters.\n     *\n     * @param str The String to be validated.\n     * @returns Whether the String is valid and not empty.\n     */\n    _isValidAndNotEmpty(str) {\n        return str.length > 0 && this._isValid(str);\n    }\n}\nconst envDetector = new EnvDetector();\n//# sourceMappingURL=EnvDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/HostDetector.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/HostDetector.js ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hostDetector: () => (/* binding */ hostDetector)\n/* harmony export */ });\n/* harmony import */ var _semconv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../semconv */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _machine_id_getMachineId__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./machine-id/getMachineId */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n/**\n * HostDetector detects the resources related to the host current process is\n * running on. Currently only non-cloud-based attributes are included.\n */\nclass HostDetector {\n    detect(_config) {\n        const attributes = {\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_HOST_NAME]: (0,os__WEBPACK_IMPORTED_MODULE_0__.hostname)(),\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_HOST_ARCH]: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeArch)((0,os__WEBPACK_IMPORTED_MODULE_0__.arch)()),\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_HOST_ID]: (0,_machine_id_getMachineId__WEBPACK_IMPORTED_MODULE_3__.getMachineId)(),\n        };\n        return { attributes };\n    }\n}\nconst hostDetector = new HostDetector();\n//# sourceMappingURL=HostDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9Ib3N0RGV0ZWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2dGO0FBQzVDO0FBQ3FCO0FBQ2pCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvREFBYyxHQUFHLDRDQUFRO0FBQ3RDLGFBQWEsb0RBQWMsR0FBRyxxREFBYSxDQUFDLHdDQUFJO0FBQ2hELGFBQWEsa0RBQVksR0FBRyxzRUFBWTtBQUN4QztBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMFxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxccmVzb3VyY2VzXFxidWlsZFxcZXNtXFxkZXRlY3RvcnNcXHBsYXRmb3JtXFxub2RlXFxIb3N0RGV0ZWN0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IEFUVFJfSE9TVF9BUkNILCBBVFRSX0hPU1RfSUQsIEFUVFJfSE9TVF9OQU1FIH0gZnJvbSAnLi4vLi4vLi4vc2VtY29udic7XG5pbXBvcnQgeyBhcmNoLCBob3N0bmFtZSB9IGZyb20gJ29zJztcbmltcG9ydCB7IGdldE1hY2hpbmVJZCB9IGZyb20gJy4vbWFjaGluZS1pZC9nZXRNYWNoaW5lSWQnO1xuaW1wb3J0IHsgbm9ybWFsaXplQXJjaCB9IGZyb20gJy4vdXRpbHMnO1xuLyoqXG4gKiBIb3N0RGV0ZWN0b3IgZGV0ZWN0cyB0aGUgcmVzb3VyY2VzIHJlbGF0ZWQgdG8gdGhlIGhvc3QgY3VycmVudCBwcm9jZXNzIGlzXG4gKiBydW5uaW5nIG9uLiBDdXJyZW50bHkgb25seSBub24tY2xvdWQtYmFzZWQgYXR0cmlidXRlcyBhcmUgaW5jbHVkZWQuXG4gKi9cbmNsYXNzIEhvc3REZXRlY3RvciB7XG4gICAgZGV0ZWN0KF9jb25maWcpIHtcbiAgICAgICAgY29uc3QgYXR0cmlidXRlcyA9IHtcbiAgICAgICAgICAgIFtBVFRSX0hPU1RfTkFNRV06IGhvc3RuYW1lKCksXG4gICAgICAgICAgICBbQVRUUl9IT1NUX0FSQ0hdOiBub3JtYWxpemVBcmNoKGFyY2goKSksXG4gICAgICAgICAgICBbQVRUUl9IT1NUX0lEXTogZ2V0TWFjaGluZUlkKCksXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB7IGF0dHJpYnV0ZXMgfTtcbiAgICB9XG59XG5leHBvcnQgY29uc3QgaG9zdERldGVjdG9yID0gbmV3IEhvc3REZXRlY3RvcigpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SG9zdERldGVjdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/HostDetector.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/OSDetector.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/OSDetector.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   osDetector: () => (/* binding */ osDetector)\n/* harmony export */ });\n/* harmony import */ var _semconv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../semconv */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * OSDetector detects the resources related to the operating system (OS) on\n * which the process represented by this resource is running.\n */\nclass OSDetector {\n    detect(_config) {\n        const attributes = {\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_OS_TYPE]: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.normalizeType)((0,os__WEBPACK_IMPORTED_MODULE_0__.platform)()),\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_OS_VERSION]: (0,os__WEBPACK_IMPORTED_MODULE_0__.release)(),\n        };\n        return { attributes };\n    }\n}\nconst osDetector = new OSDetector();\n//# sourceMappingURL=OSDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9PU0RldGVjdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lFO0FBQzFCO0FBQ0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtEQUFZLEdBQUcscURBQWEsQ0FBQyw0Q0FBUTtBQUNsRCxhQUFhLHFEQUFlLEdBQUcsMkNBQU87QUFDdEM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNPO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjBcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXHJlc291cmNlc1xcYnVpbGRcXGVzbVxcZGV0ZWN0b3JzXFxwbGF0Zm9ybVxcbm9kZVxcT1NEZXRlY3Rvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgQVRUUl9PU19UWVBFLCBBVFRSX09TX1ZFUlNJT04gfSBmcm9tICcuLi8uLi8uLi9zZW1jb252JztcbmltcG9ydCB7IHBsYXRmb3JtLCByZWxlYXNlIH0gZnJvbSAnb3MnO1xuaW1wb3J0IHsgbm9ybWFsaXplVHlwZSB9IGZyb20gJy4vdXRpbHMnO1xuLyoqXG4gKiBPU0RldGVjdG9yIGRldGVjdHMgdGhlIHJlc291cmNlcyByZWxhdGVkIHRvIHRoZSBvcGVyYXRpbmcgc3lzdGVtIChPUykgb25cbiAqIHdoaWNoIHRoZSBwcm9jZXNzIHJlcHJlc2VudGVkIGJ5IHRoaXMgcmVzb3VyY2UgaXMgcnVubmluZy5cbiAqL1xuY2xhc3MgT1NEZXRlY3RvciB7XG4gICAgZGV0ZWN0KF9jb25maWcpIHtcbiAgICAgICAgY29uc3QgYXR0cmlidXRlcyA9IHtcbiAgICAgICAgICAgIFtBVFRSX09TX1RZUEVdOiBub3JtYWxpemVUeXBlKHBsYXRmb3JtKCkpLFxuICAgICAgICAgICAgW0FUVFJfT1NfVkVSU0lPTl06IHJlbGVhc2UoKSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHsgYXR0cmlidXRlcyB9O1xuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBvc0RldGVjdG9yID0gbmV3IE9TRGV0ZWN0b3IoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9TRGV0ZWN0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/OSDetector.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ProcessDetector.js":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ProcessDetector.js ***!
  \*******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processDetector: () => (/* binding */ processDetector)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/* harmony import */ var _semconv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../semconv */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * ProcessDetector will be used to detect the resources related current process running\n * and being instrumented from the NodeJS Process module.\n */\nclass ProcessDetector {\n    detect(_config) {\n        const attributes = {\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_PID]: process.pid,\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_EXECUTABLE_NAME]: process.title,\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_EXECUTABLE_PATH]: process.execPath,\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_COMMAND_ARGS]: [\n                process.argv[0],\n                ...process.execArgv,\n                ...process.argv.slice(1),\n            ],\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_RUNTIME_VERSION]: process.versions.node,\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_RUNTIME_NAME]: 'nodejs',\n            [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_RUNTIME_DESCRIPTION]: 'Node.js',\n        };\n        if (process.argv.length > 1) {\n            attributes[_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_COMMAND] = process.argv[1];\n        }\n        try {\n            const userInfo = os__WEBPACK_IMPORTED_MODULE_0__.userInfo();\n            attributes[_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_PROCESS_OWNER] = userInfo.username;\n        }\n        catch (e) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__.diag.debug(`error obtaining process owner: ${e}`);\n        }\n        return { attributes };\n    }\n}\nconst processDetector = new ProcessDetector();\n//# sourceMappingURL=ProcessDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9Qcm9jZXNzRGV0ZWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDMEM7QUFDdU87QUFDeFA7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHNEQUFnQjtBQUM3QixhQUFhLGtFQUE0QjtBQUN6QyxhQUFhLGtFQUE0QjtBQUN6QyxhQUFhLCtEQUF5QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0VBQTRCO0FBQ3pDLGFBQWEsK0RBQXlCO0FBQ3RDLGFBQWEsc0VBQWdDO0FBQzdDO0FBQ0E7QUFDQSx1QkFBdUIsMERBQW9CO0FBQzNDO0FBQ0E7QUFDQSw2QkFBNkIsd0NBQVc7QUFDeEMsdUJBQXVCLHdEQUFrQjtBQUN6QztBQUNBO0FBQ0EsWUFBWSxvREFBSSx5Q0FBeUMsRUFBRTtBQUMzRDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMFxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxccmVzb3VyY2VzXFxidWlsZFxcZXNtXFxkZXRlY3RvcnNcXHBsYXRmb3JtXFxub2RlXFxQcm9jZXNzRGV0ZWN0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IGRpYWcgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuaW1wb3J0IHsgQVRUUl9QUk9DRVNTX0NPTU1BTkQsIEFUVFJfUFJPQ0VTU19DT01NQU5EX0FSR1MsIEFUVFJfUFJPQ0VTU19FWEVDVVRBQkxFX05BTUUsIEFUVFJfUFJPQ0VTU19FWEVDVVRBQkxFX1BBVEgsIEFUVFJfUFJPQ0VTU19PV05FUiwgQVRUUl9QUk9DRVNTX1BJRCwgQVRUUl9QUk9DRVNTX1JVTlRJTUVfREVTQ1JJUFRJT04sIEFUVFJfUFJPQ0VTU19SVU5USU1FX05BTUUsIEFUVFJfUFJPQ0VTU19SVU5USU1FX1ZFUlNJT04sIH0gZnJvbSAnLi4vLi4vLi4vc2VtY29udic7XG5pbXBvcnQgKiBhcyBvcyBmcm9tICdvcyc7XG4vKipcbiAqIFByb2Nlc3NEZXRlY3RvciB3aWxsIGJlIHVzZWQgdG8gZGV0ZWN0IHRoZSByZXNvdXJjZXMgcmVsYXRlZCBjdXJyZW50IHByb2Nlc3MgcnVubmluZ1xuICogYW5kIGJlaW5nIGluc3RydW1lbnRlZCBmcm9tIHRoZSBOb2RlSlMgUHJvY2VzcyBtb2R1bGUuXG4gKi9cbmNsYXNzIFByb2Nlc3NEZXRlY3RvciB7XG4gICAgZGV0ZWN0KF9jb25maWcpIHtcbiAgICAgICAgY29uc3QgYXR0cmlidXRlcyA9IHtcbiAgICAgICAgICAgIFtBVFRSX1BST0NFU1NfUElEXTogcHJvY2Vzcy5waWQsXG4gICAgICAgICAgICBbQVRUUl9QUk9DRVNTX0VYRUNVVEFCTEVfTkFNRV06IHByb2Nlc3MudGl0bGUsXG4gICAgICAgICAgICBbQVRUUl9QUk9DRVNTX0VYRUNVVEFCTEVfUEFUSF06IHByb2Nlc3MuZXhlY1BhdGgsXG4gICAgICAgICAgICBbQVRUUl9QUk9DRVNTX0NPTU1BTkRfQVJHU106IFtcbiAgICAgICAgICAgICAgICBwcm9jZXNzLmFyZ3ZbMF0sXG4gICAgICAgICAgICAgICAgLi4ucHJvY2Vzcy5leGVjQXJndixcbiAgICAgICAgICAgICAgICAuLi5wcm9jZXNzLmFyZ3Yuc2xpY2UoMSksXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgW0FUVFJfUFJPQ0VTU19SVU5USU1FX1ZFUlNJT05dOiBwcm9jZXNzLnZlcnNpb25zLm5vZGUsXG4gICAgICAgICAgICBbQVRUUl9QUk9DRVNTX1JVTlRJTUVfTkFNRV06ICdub2RlanMnLFxuICAgICAgICAgICAgW0FUVFJfUFJPQ0VTU19SVU5USU1FX0RFU0NSSVBUSU9OXTogJ05vZGUuanMnLFxuICAgICAgICB9O1xuICAgICAgICBpZiAocHJvY2Vzcy5hcmd2Lmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZXNbQVRUUl9QUk9DRVNTX0NPTU1BTkRdID0gcHJvY2Vzcy5hcmd2WzFdO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB1c2VySW5mbyA9IG9zLnVzZXJJbmZvKCk7XG4gICAgICAgICAgICBhdHRyaWJ1dGVzW0FUVFJfUFJPQ0VTU19PV05FUl0gPSB1c2VySW5mby51c2VybmFtZTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgZGlhZy5kZWJ1ZyhgZXJyb3Igb2J0YWluaW5nIHByb2Nlc3Mgb3duZXI6ICR7ZX1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBhdHRyaWJ1dGVzIH07XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IHByb2Nlc3NEZXRlY3RvciA9IG5ldyBQcm9jZXNzRGV0ZWN0b3IoKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVByb2Nlc3NEZXRlY3Rvci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ProcessDetector.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ServiceInstanceIdDetector.js":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ServiceInstanceIdDetector.js ***!
  \*****************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serviceInstanceIdDetector: () => (/* binding */ serviceInstanceIdDetector)\n/* harmony export */ });\n/* harmony import */ var _semconv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../semconv */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * ServiceInstanceIdDetector detects the resources related to the service instance ID.\n */\nclass ServiceInstanceIdDetector {\n    detect(_config) {\n        return {\n            attributes: {\n                [_semconv__WEBPACK_IMPORTED_MODULE_1__.ATTR_SERVICE_INSTANCE_ID]: (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomUUID)(),\n            },\n        };\n    }\n}\n/**\n * @experimental\n */\nconst serviceInstanceIdDetector = new ServiceInstanceIdDetector();\n//# sourceMappingURL=ServiceInstanceIdDetector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9TZXJ2aWNlSW5zdGFuY2VJZERldGVjdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEQ7QUFDeEI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsOERBQXdCLEdBQUcsa0RBQVU7QUFDdEQsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjBcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXHJlc291cmNlc1xcYnVpbGRcXGVzbVxcZGV0ZWN0b3JzXFxwbGF0Zm9ybVxcbm9kZVxcU2VydmljZUluc3RhbmNlSWREZXRlY3Rvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgQVRUUl9TRVJWSUNFX0lOU1RBTkNFX0lEIH0gZnJvbSAnLi4vLi4vLi4vc2VtY29udic7XG5pbXBvcnQgeyByYW5kb21VVUlEIH0gZnJvbSAnY3J5cHRvJztcbi8qKlxuICogU2VydmljZUluc3RhbmNlSWREZXRlY3RvciBkZXRlY3RzIHRoZSByZXNvdXJjZXMgcmVsYXRlZCB0byB0aGUgc2VydmljZSBpbnN0YW5jZSBJRC5cbiAqL1xuY2xhc3MgU2VydmljZUluc3RhbmNlSWREZXRlY3RvciB7XG4gICAgZGV0ZWN0KF9jb25maWcpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICBbQVRUUl9TRVJWSUNFX0lOU1RBTkNFX0lEXTogcmFuZG9tVVVJRCgpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqL1xuZXhwb3J0IGNvbnN0IHNlcnZpY2VJbnN0YW5jZUlkRGV0ZWN0b3IgPSBuZXcgU2VydmljZUluc3RhbmNlSWREZXRlY3RvcigpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VydmljZUluc3RhbmNlSWREZXRlY3Rvci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ServiceInstanceIdDetector.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js ***!
  \************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   execAsync: () => (/* binding */ execAsync)\n/* harmony export */ });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nconst execAsync = util__WEBPACK_IMPORTED_MODULE_1__.promisify(child_process__WEBPACK_IMPORTED_MODULE_0__.exec);\n//# sourceMappingURL=execAsync.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2V4ZWNBc3luYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMrQztBQUNsQjtBQUN0QixrQkFBa0IsMkNBQWMsQ0FBQywrQ0FBa0I7QUFDMUQiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjBcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXHJlc291cmNlc1xcYnVpbGRcXGVzbVxcZGV0ZWN0b3JzXFxwbGF0Zm9ybVxcbm9kZVxcbWFjaGluZS1pZFxcZXhlY0FzeW5jLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgKiBhcyBjaGlsZF9wcm9jZXNzIGZyb20gJ2NoaWxkX3Byb2Nlc3MnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICd1dGlsJztcbmV4cG9ydCBjb25zdCBleGVjQXN5bmMgPSB1dGlsLnByb21pc2lmeShjaGlsZF9wcm9jZXNzLmV4ZWMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXhlY0FzeW5jLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-bsd.js":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-bsd.js ***!
  \*******************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _execAsync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./execAsync */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nasync function getMachineId() {\n    try {\n        const result = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile('/etc/hostid', { encoding: 'utf8' });\n        return result.trim();\n    }\n    catch (e) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`error reading machine id: ${e}`);\n    }\n    try {\n        const result = await (0,_execAsync__WEBPACK_IMPORTED_MODULE_2__.execAsync)('kenv -q smbios.system.uuid');\n        return result.stdout.trim();\n    }\n    catch (e) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`error reading machine id: ${e}`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-bsd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2dldE1hY2hpbmVJZC1ic2QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDb0M7QUFDSTtBQUNFO0FBQ25DO0FBQ1A7QUFDQSw2QkFBNkIsd0NBQUUsMkJBQTJCLGtCQUFrQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG9EQUFJLG9DQUFvQyxFQUFFO0FBQ2xEO0FBQ0E7QUFDQSw2QkFBNkIscURBQVM7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsUUFBUSxvREFBSSxvQ0FBb0MsRUFBRTtBQUNsRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMFxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxccmVzb3VyY2VzXFxidWlsZFxcZXNtXFxkZXRlY3RvcnNcXHBsYXRmb3JtXFxub2RlXFxtYWNoaW5lLWlkXFxnZXRNYWNoaW5lSWQtYnNkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBwcm9taXNlcyBhcyBmcyB9IGZyb20gJ2ZzJztcbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gJy4vZXhlY0FzeW5jJztcbmltcG9ydCB7IGRpYWcgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1hY2hpbmVJZCgpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmcy5yZWFkRmlsZSgnL2V0Yy9ob3N0aWQnLCB7IGVuY29kaW5nOiAndXRmOCcgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQudHJpbSgpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBkaWFnLmRlYnVnKGBlcnJvciByZWFkaW5nIG1hY2hpbmUgaWQ6ICR7ZX1gKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZXhlY0FzeW5jKCdrZW52IC1xIHNtYmlvcy5zeXN0ZW0udXVpZCcpO1xuICAgICAgICByZXR1cm4gcmVzdWx0LnN0ZG91dC50cmltKCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGRpYWcuZGVidWcoYGVycm9yIHJlYWRpbmcgbWFjaGluZSBpZDogJHtlfWApO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TWFjaGluZUlkLWJzZC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-bsd.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-darwin.js":
/*!**********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-darwin.js ***!
  \**********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var _execAsync__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./execAsync */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nasync function getMachineId() {\n    try {\n        const result = await (0,_execAsync__WEBPACK_IMPORTED_MODULE_0__.execAsync)('ioreg -rd1 -c \"IOPlatformExpertDevice\"');\n        const idLine = result.stdout\n            .split('\\n')\n            .find(line => line.includes('IOPlatformUUID'));\n        if (!idLine) {\n            return undefined;\n        }\n        const parts = idLine.split('\" = \"');\n        if (parts.length === 2) {\n            return parts[1].slice(0, -1);\n        }\n    }\n    catch (e) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`error reading machine id: ${e}`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-darwin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2dldE1hY2hpbmVJZC1kYXJ3aW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3dDO0FBQ0U7QUFDbkM7QUFDUDtBQUNBLDZCQUE2QixxREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG9EQUFJLG9DQUFvQyxFQUFFO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAb3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wXFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxyZXNvdXJjZXNcXGJ1aWxkXFxlc21cXGRldGVjdG9yc1xccGxhdGZvcm1cXG5vZGVcXG1hY2hpbmUtaWRcXGdldE1hY2hpbmVJZC1kYXJ3aW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gJy4vZXhlY0FzeW5jJztcbmltcG9ydCB7IGRpYWcgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1hY2hpbmVJZCgpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBleGVjQXN5bmMoJ2lvcmVnIC1yZDEgLWMgXCJJT1BsYXRmb3JtRXhwZXJ0RGV2aWNlXCInKTtcbiAgICAgICAgY29uc3QgaWRMaW5lID0gcmVzdWx0LnN0ZG91dFxuICAgICAgICAgICAgLnNwbGl0KCdcXG4nKVxuICAgICAgICAgICAgLmZpbmQobGluZSA9PiBsaW5lLmluY2x1ZGVzKCdJT1BsYXRmb3JtVVVJRCcpKTtcbiAgICAgICAgaWYgKCFpZExpbmUpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGFydHMgPSBpZExpbmUuc3BsaXQoJ1wiID0gXCInKTtcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnRzWzFdLnNsaWNlKDAsIC0xKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBkaWFnLmRlYnVnKGBlcnJvciByZWFkaW5nIG1hY2hpbmUgaWQ6ICR7ZX1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldE1hY2hpbmVJZC1kYXJ3aW4uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-darwin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nasync function getMachineId() {\n    const paths = ['/etc/machine-id', '/var/lib/dbus/machine-id'];\n    for (const path of paths) {\n        try {\n            const result = await fs__WEBPACK_IMPORTED_MODULE_0__.promises.readFile(path, { encoding: 'utf8' });\n            return result.trim();\n        }\n        catch (e) {\n            _opentelemetry_api__WEBPACK_IMPORTED_MODULE_1__.diag.debug(`error reading machine id: ${e}`);\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-linux.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2dldE1hY2hpbmVJZC1saW51eC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ29DO0FBQ007QUFDbkM7QUFDUDtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsd0NBQUUsa0JBQWtCLGtCQUFrQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9EQUFJLG9DQUFvQyxFQUFFO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjBcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXHJlc291cmNlc1xcYnVpbGRcXGVzbVxcZGV0ZWN0b3JzXFxwbGF0Zm9ybVxcbm9kZVxcbWFjaGluZS1pZFxcZ2V0TWFjaGluZUlkLWxpbnV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBwcm9taXNlcyBhcyBmcyB9IGZyb20gJ2ZzJztcbmltcG9ydCB7IGRpYWcgfSBmcm9tICdAb3BlbnRlbGVtZXRyeS9hcGknO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1hY2hpbmVJZCgpIHtcbiAgICBjb25zdCBwYXRocyA9IFsnL2V0Yy9tYWNoaW5lLWlkJywgJy92YXIvbGliL2RidXMvbWFjaGluZS1pZCddO1xuICAgIGZvciAoY29uc3QgcGF0aCBvZiBwYXRocykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZnMucmVhZEZpbGUocGF0aCwgeyBlbmNvZGluZzogJ3V0ZjgnIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50cmltKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGRpYWcuZGVidWcoYGVycm9yIHJlYWRpbmcgbWFjaGluZSBpZDogJHtlfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRNYWNoaW5lSWQtbGludXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-unsupported.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-unsupported.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nasync function getMachineId() {\n    _opentelemetry_api__WEBPACK_IMPORTED_MODULE_0__.diag.debug('could not read machine-id: unsupported platform');\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-unsupported.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2dldE1hY2hpbmVJZC11bnN1cHBvcnRlZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMwQztBQUNuQztBQUNQLElBQUksb0RBQUk7QUFDUjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjBcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXHJlc291cmNlc1xcYnVpbGRcXGVzbVxcZGV0ZWN0b3JzXFxwbGF0Zm9ybVxcbm9kZVxcbWFjaGluZS1pZFxcZ2V0TWFjaGluZUlkLXVuc3VwcG9ydGVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBkaWFnIH0gZnJvbSAnQG9wZW50ZWxlbWV0cnkvYXBpJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRNYWNoaW5lSWQoKSB7XG4gICAgZGlhZy5kZWJ1ZygnY291bGQgbm90IHJlYWQgbWFjaGluZS1pZDogdW5zdXBwb3J0ZWQgcGxhdGZvcm0nKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TWFjaGluZUlkLXVuc3VwcG9ydGVkLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-unsupported.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-win.js":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-win.js ***!
  \*******************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! process */ \"process\");\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _execAsync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./execAsync */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/execAsync.js\");\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/diag-api.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nasync function getMachineId() {\n    const args = 'QUERY HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Cryptography /v MachineGuid';\n    let command = '%windir%\\\\System32\\\\REG.exe';\n    if (process__WEBPACK_IMPORTED_MODULE_0__.arch === 'ia32' && \"PROCESSOR_ARCHITEW6432\" in process__WEBPACK_IMPORTED_MODULE_0__.env) {\n        command = '%windir%\\\\sysnative\\\\cmd.exe /c ' + command;\n    }\n    try {\n        const result = await (0,_execAsync__WEBPACK_IMPORTED_MODULE_1__.execAsync)(`${command} ${args}`);\n        const parts = result.stdout.split('REG_SZ');\n        if (parts.length === 2) {\n            return parts[1].trim();\n        }\n    }\n    catch (e) {\n        _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__.diag.debug(`error reading machine id: ${e}`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=getMachineId-win.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2dldE1hY2hpbmVJZC13aW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUM7QUFDSztBQUNFO0FBQ25DO0FBQ1A7QUFDQTtBQUNBLFFBQVEseUNBQVksZUFBZSxvRUFBdUM7QUFDMUU7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHFEQUFTLElBQUksU0FBUyxFQUFFLEtBQUs7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxvREFBSSxvQ0FBb0MsRUFBRTtBQUNsRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMFxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxccmVzb3VyY2VzXFxidWlsZFxcZXNtXFxkZXRlY3RvcnNcXHBsYXRmb3JtXFxub2RlXFxtYWNoaW5lLWlkXFxnZXRNYWNoaW5lSWQtd2luLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgKiBhcyBwcm9jZXNzIGZyb20gJ3Byb2Nlc3MnO1xuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSAnLi9leGVjQXN5bmMnO1xuaW1wb3J0IHsgZGlhZyB9IGZyb20gJ0BvcGVudGVsZW1ldHJ5L2FwaSc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TWFjaGluZUlkKCkge1xuICAgIGNvbnN0IGFyZ3MgPSAnUVVFUlkgSEtFWV9MT0NBTF9NQUNISU5FXFxcXFNPRlRXQVJFXFxcXE1pY3Jvc29mdFxcXFxDcnlwdG9ncmFwaHkgL3YgTWFjaGluZUd1aWQnO1xuICAgIGxldCBjb21tYW5kID0gJyV3aW5kaXIlXFxcXFN5c3RlbTMyXFxcXFJFRy5leGUnO1xuICAgIGlmIChwcm9jZXNzLmFyY2ggPT09ICdpYTMyJyAmJiAnUFJPQ0VTU09SX0FSQ0hJVEVXNjQzMicgaW4gcHJvY2Vzcy5lbnYpIHtcbiAgICAgICAgY29tbWFuZCA9ICcld2luZGlyJVxcXFxzeXNuYXRpdmVcXFxcY21kLmV4ZSAvYyAnICsgY29tbWFuZDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZXhlY0FzeW5jKGAke2NvbW1hbmR9ICR7YXJnc31gKTtcbiAgICAgICAgY29uc3QgcGFydHMgPSByZXN1bHQuc3Rkb3V0LnNwbGl0KCdSRUdfU1onKTtcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnRzWzFdLnRyaW0oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBkaWFnLmRlYnVnKGBlcnJvciByZWFkaW5nIG1hY2hpbmUgaWQ6ICR7ZX1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldE1hY2hpbmVJZC13aW4uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-win.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId.js":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId.js ***!
  \***************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMachineId: () => (/* binding */ getMachineId)\n/* harmony export */ });\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! process */ \"process\");\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(process__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet getMachineIdImpl;\nasync function getMachineId() {\n    if (!getMachineIdImpl) {\n        switch (process__WEBPACK_IMPORTED_MODULE_0__.platform) {\n            case 'darwin':\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-darwin.js */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-darwin.js\")))\n                    .getMachineId;\n                break;\n            case 'linux':\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-linux.js */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-linux.js\")))\n                    .getMachineId;\n                break;\n            case 'freebsd':\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-bsd.js */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-bsd.js\"))).getMachineId;\n                break;\n            case 'win32':\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-win.js */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-win.js\"))).getMachineId;\n                break;\n            default:\n                getMachineIdImpl = (await __webpack_require__.e(/*! import() */ \"vendor-chunks/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0\").then(__webpack_require__.bind(__webpack_require__, /*! ./getMachineId-unsupported.js */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId-unsupported.js\")))\n                    .getMachineId;\n                break;\n        }\n    }\n    return getMachineIdImpl();\n}\n//# sourceMappingURL=getMachineId.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS9tYWNoaW5lLWlkL2dldE1hY2hpbmVJZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDbUM7QUFDbkM7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCLDZDQUFnQjtBQUNoQztBQUNBLDBDQUEwQyxrWUFBa0M7QUFDNUU7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGdZQUFpQztBQUMzRTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsNFhBQStCO0FBQ3pFO0FBQ0E7QUFDQSwwQ0FBMEMsNFhBQStCO0FBQ3pFO0FBQ0E7QUFDQSwwQ0FBMEMsNFlBQXVDO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAb3BlbnRlbGVtZXRyeStyZXNvdXJjZXNAMi4xLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wXFxub2RlX21vZHVsZXNcXEBvcGVudGVsZW1ldHJ5XFxyZXNvdXJjZXNcXGJ1aWxkXFxlc21cXGRldGVjdG9yc1xccGxhdGZvcm1cXG5vZGVcXG1hY2hpbmUtaWRcXGdldE1hY2hpbmVJZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0ICogYXMgcHJvY2VzcyBmcm9tICdwcm9jZXNzJztcbmxldCBnZXRNYWNoaW5lSWRJbXBsO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1hY2hpbmVJZCgpIHtcbiAgICBpZiAoIWdldE1hY2hpbmVJZEltcGwpIHtcbiAgICAgICAgc3dpdGNoIChwcm9jZXNzLnBsYXRmb3JtKSB7XG4gICAgICAgICAgICBjYXNlICdkYXJ3aW4nOlxuICAgICAgICAgICAgICAgIGdldE1hY2hpbmVJZEltcGwgPSAoYXdhaXQgaW1wb3J0KCcuL2dldE1hY2hpbmVJZC1kYXJ3aW4uanMnKSlcbiAgICAgICAgICAgICAgICAgICAgLmdldE1hY2hpbmVJZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2xpbnV4JzpcbiAgICAgICAgICAgICAgICBnZXRNYWNoaW5lSWRJbXBsID0gKGF3YWl0IGltcG9ydCgnLi9nZXRNYWNoaW5lSWQtbGludXguanMnKSlcbiAgICAgICAgICAgICAgICAgICAgLmdldE1hY2hpbmVJZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2ZyZWVic2QnOlxuICAgICAgICAgICAgICAgIGdldE1hY2hpbmVJZEltcGwgPSAoYXdhaXQgaW1wb3J0KCcuL2dldE1hY2hpbmVJZC1ic2QuanMnKSkuZ2V0TWFjaGluZUlkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnd2luMzInOlxuICAgICAgICAgICAgICAgIGdldE1hY2hpbmVJZEltcGwgPSAoYXdhaXQgaW1wb3J0KCcuL2dldE1hY2hpbmVJZC13aW4uanMnKSkuZ2V0TWFjaGluZUlkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBnZXRNYWNoaW5lSWRJbXBsID0gKGF3YWl0IGltcG9ydCgnLi9nZXRNYWNoaW5lSWQtdW5zdXBwb3J0ZWQuanMnKSlcbiAgICAgICAgICAgICAgICAgICAgLmdldE1hY2hpbmVJZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZ2V0TWFjaGluZUlkSW1wbCgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TWFjaGluZUlkLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/machine-id/getMachineId.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js ***!
  \*********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeArch: () => (/* binding */ normalizeArch),\n/* harmony export */   normalizeType: () => (/* binding */ normalizeType)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst normalizeArch = (nodeArchString) => {\n    // Maps from https://nodejs.org/api/os.html#osarch to arch values in spec:\n    // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/semantic_conventions/host.md\n    switch (nodeArchString) {\n        case 'arm':\n            return 'arm32';\n        case 'ppc':\n            return 'ppc32';\n        case 'x64':\n            return 'amd64';\n        default:\n            return nodeArchString;\n    }\n};\nconst normalizeType = (nodePlatform) => {\n    // Maps from https://nodejs.org/api/os.html#osplatform to arch values in spec:\n    // https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/semantic_conventions/os.md\n    switch (nodePlatform) {\n        case 'sunos':\n            return 'solaris';\n        case 'win32':\n            return 'windows';\n        default:\n            return nodePlatform;\n    }\n};\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9kZXRlY3RvcnMvcGxhdGZvcm0vbm9kZS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMFxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxccmVzb3VyY2VzXFxidWlsZFxcZXNtXFxkZXRlY3RvcnNcXHBsYXRmb3JtXFxub2RlXFx1dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0IGNvbnN0IG5vcm1hbGl6ZUFyY2ggPSAobm9kZUFyY2hTdHJpbmcpID0+IHtcbiAgICAvLyBNYXBzIGZyb20gaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9vcy5odG1sI29zYXJjaCB0byBhcmNoIHZhbHVlcyBpbiBzcGVjOlxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuLXRlbGVtZXRyeS9vcGVudGVsZW1ldHJ5LXNwZWNpZmljYXRpb24vYmxvYi9tYWluL3NwZWNpZmljYXRpb24vcmVzb3VyY2Uvc2VtYW50aWNfY29udmVudGlvbnMvaG9zdC5tZFxuICAgIHN3aXRjaCAobm9kZUFyY2hTdHJpbmcpIHtcbiAgICAgICAgY2FzZSAnYXJtJzpcbiAgICAgICAgICAgIHJldHVybiAnYXJtMzInO1xuICAgICAgICBjYXNlICdwcGMnOlxuICAgICAgICAgICAgcmV0dXJuICdwcGMzMic7XG4gICAgICAgIGNhc2UgJ3g2NCc6XG4gICAgICAgICAgICByZXR1cm4gJ2FtZDY0JztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBub2RlQXJjaFN0cmluZztcbiAgICB9XG59O1xuZXhwb3J0IGNvbnN0IG5vcm1hbGl6ZVR5cGUgPSAobm9kZVBsYXRmb3JtKSA9PiB7XG4gICAgLy8gTWFwcyBmcm9tIGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvb3MuaHRtbCNvc3BsYXRmb3JtIHRvIGFyY2ggdmFsdWVzIGluIHNwZWM6XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL29wZW4tdGVsZW1ldHJ5L29wZW50ZWxlbWV0cnktc3BlY2lmaWNhdGlvbi9ibG9iL21haW4vc3BlY2lmaWNhdGlvbi9yZXNvdXJjZS9zZW1hbnRpY19jb252ZW50aW9ucy9vcy5tZFxuICAgIHN3aXRjaCAobm9kZVBsYXRmb3JtKSB7XG4gICAgICAgIGNhc2UgJ3N1bm9zJzpcbiAgICAgICAgICAgIHJldHVybiAnc29sYXJpcyc7XG4gICAgICAgIGNhc2UgJ3dpbjMyJzpcbiAgICAgICAgICAgIHJldHVybiAnd2luZG93cyc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gbm9kZVBsYXRmb3JtO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/index.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/index.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultResource: () => (/* reexport safe */ _ResourceImpl__WEBPACK_IMPORTED_MODULE_6__.defaultResource),\n/* harmony export */   defaultServiceName: () => (/* reexport safe */ _platform__WEBPACK_IMPORTED_MODULE_7__.defaultServiceName),\n/* harmony export */   detectResources: () => (/* reexport safe */ _detect_resources__WEBPACK_IMPORTED_MODULE_0__.detectResources),\n/* harmony export */   emptyResource: () => (/* reexport safe */ _ResourceImpl__WEBPACK_IMPORTED_MODULE_6__.emptyResource),\n/* harmony export */   envDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_1__.envDetector),\n/* harmony export */   hostDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_2__.hostDetector),\n/* harmony export */   osDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_3__.osDetector),\n/* harmony export */   processDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_4__.processDetector),\n/* harmony export */   resourceFromAttributes: () => (/* reexport safe */ _ResourceImpl__WEBPACK_IMPORTED_MODULE_6__.resourceFromAttributes),\n/* harmony export */   serviceInstanceIdDetector: () => (/* reexport safe */ _detectors__WEBPACK_IMPORTED_MODULE_5__.serviceInstanceIdDetector)\n/* harmony export */ });\n/* harmony import */ var _detect_resources__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./detect-resources */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detect-resources.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./detectors */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/EnvDetector.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./detectors */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/HostDetector.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./detectors */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/OSDetector.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./detectors */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ProcessDetector.js\");\n/* harmony import */ var _detectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./detectors */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/detectors/platform/node/ServiceInstanceIdDetector.js\");\n/* harmony import */ var _ResourceImpl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ResourceImpl */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./platform */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js\");\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDcUQ7QUFDNEQ7QUFDeEI7QUFDekM7QUFDaEQiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjBcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXHJlc291cmNlc1xcYnVpbGRcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmV4cG9ydCB7IGRldGVjdFJlc291cmNlcyB9IGZyb20gJy4vZGV0ZWN0LXJlc291cmNlcyc7XG5leHBvcnQgeyBlbnZEZXRlY3RvciwgaG9zdERldGVjdG9yLCBvc0RldGVjdG9yLCBwcm9jZXNzRGV0ZWN0b3IsIHNlcnZpY2VJbnN0YW5jZUlkRGV0ZWN0b3IsIH0gZnJvbSAnLi9kZXRlY3RvcnMnO1xuZXhwb3J0IHsgcmVzb3VyY2VGcm9tQXR0cmlidXRlcywgZGVmYXVsdFJlc291cmNlLCBlbXB0eVJlc291cmNlLCB9IGZyb20gJy4vUmVzb3VyY2VJbXBsJztcbmV4cG9ydCB7IGRlZmF1bHRTZXJ2aWNlTmFtZSB9IGZyb20gJy4vcGxhdGZvcm0nO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultServiceName: () => (/* binding */ defaultServiceName)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction defaultServiceName() {\n    return `unknown_service:${process.argv0}`;\n}\n//# sourceMappingURL=default-service-name.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS9wbGF0Zm9ybS9ub2RlL2RlZmF1bHQtc2VydmljZS1uYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDhCQUE4QixjQUFjO0FBQzVDO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBvcGVudGVsZW1ldHJ5K3Jlc291cmNlc0AyLjEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjBcXG5vZGVfbW9kdWxlc1xcQG9wZW50ZWxlbWV0cnlcXHJlc291cmNlc1xcYnVpbGRcXGVzbVxccGxhdGZvcm1cXG5vZGVcXGRlZmF1bHQtc2VydmljZS1uYW1lLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdFNlcnZpY2VOYW1lKCkge1xuICAgIHJldHVybiBgdW5rbm93bl9zZXJ2aWNlOiR7cHJvY2Vzcy5hcmd2MH1gO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdC1zZXJ2aWNlLW5hbWUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/platform/node/default-service-name.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js ***!
  \***********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ATTR_CLOUD_ACCOUNT_ID: () => (/* binding */ ATTR_CLOUD_ACCOUNT_ID),\n/* harmony export */   ATTR_CLOUD_AVAILABILITY_ZONE: () => (/* binding */ ATTR_CLOUD_AVAILABILITY_ZONE),\n/* harmony export */   ATTR_CLOUD_PROVIDER: () => (/* binding */ ATTR_CLOUD_PROVIDER),\n/* harmony export */   ATTR_CLOUD_REGION: () => (/* binding */ ATTR_CLOUD_REGION),\n/* harmony export */   ATTR_CONTAINER_ID: () => (/* binding */ ATTR_CONTAINER_ID),\n/* harmony export */   ATTR_CONTAINER_IMAGE_NAME: () => (/* binding */ ATTR_CONTAINER_IMAGE_NAME),\n/* harmony export */   ATTR_CONTAINER_IMAGE_TAGS: () => (/* binding */ ATTR_CONTAINER_IMAGE_TAGS),\n/* harmony export */   ATTR_CONTAINER_NAME: () => (/* binding */ ATTR_CONTAINER_NAME),\n/* harmony export */   ATTR_HOST_ARCH: () => (/* binding */ ATTR_HOST_ARCH),\n/* harmony export */   ATTR_HOST_ID: () => (/* binding */ ATTR_HOST_ID),\n/* harmony export */   ATTR_HOST_IMAGE_ID: () => (/* binding */ ATTR_HOST_IMAGE_ID),\n/* harmony export */   ATTR_HOST_IMAGE_NAME: () => (/* binding */ ATTR_HOST_IMAGE_NAME),\n/* harmony export */   ATTR_HOST_IMAGE_VERSION: () => (/* binding */ ATTR_HOST_IMAGE_VERSION),\n/* harmony export */   ATTR_HOST_NAME: () => (/* binding */ ATTR_HOST_NAME),\n/* harmony export */   ATTR_HOST_TYPE: () => (/* binding */ ATTR_HOST_TYPE),\n/* harmony export */   ATTR_K8S_CLUSTER_NAME: () => (/* binding */ ATTR_K8S_CLUSTER_NAME),\n/* harmony export */   ATTR_K8S_DEPLOYMENT_NAME: () => (/* binding */ ATTR_K8S_DEPLOYMENT_NAME),\n/* harmony export */   ATTR_K8S_NAMESPACE_NAME: () => (/* binding */ ATTR_K8S_NAMESPACE_NAME),\n/* harmony export */   ATTR_K8S_POD_NAME: () => (/* binding */ ATTR_K8S_POD_NAME),\n/* harmony export */   ATTR_OS_TYPE: () => (/* binding */ ATTR_OS_TYPE),\n/* harmony export */   ATTR_OS_VERSION: () => (/* binding */ ATTR_OS_VERSION),\n/* harmony export */   ATTR_PROCESS_COMMAND: () => (/* binding */ ATTR_PROCESS_COMMAND),\n/* harmony export */   ATTR_PROCESS_COMMAND_ARGS: () => (/* binding */ ATTR_PROCESS_COMMAND_ARGS),\n/* harmony export */   ATTR_PROCESS_EXECUTABLE_NAME: () => (/* binding */ ATTR_PROCESS_EXECUTABLE_NAME),\n/* harmony export */   ATTR_PROCESS_EXECUTABLE_PATH: () => (/* binding */ ATTR_PROCESS_EXECUTABLE_PATH),\n/* harmony export */   ATTR_PROCESS_OWNER: () => (/* binding */ ATTR_PROCESS_OWNER),\n/* harmony export */   ATTR_PROCESS_PID: () => (/* binding */ ATTR_PROCESS_PID),\n/* harmony export */   ATTR_PROCESS_RUNTIME_DESCRIPTION: () => (/* binding */ ATTR_PROCESS_RUNTIME_DESCRIPTION),\n/* harmony export */   ATTR_PROCESS_RUNTIME_NAME: () => (/* binding */ ATTR_PROCESS_RUNTIME_NAME),\n/* harmony export */   ATTR_PROCESS_RUNTIME_VERSION: () => (/* binding */ ATTR_PROCESS_RUNTIME_VERSION),\n/* harmony export */   ATTR_SERVICE_INSTANCE_ID: () => (/* binding */ ATTR_SERVICE_INSTANCE_ID),\n/* harmony export */   ATTR_SERVICE_NAMESPACE: () => (/* binding */ ATTR_SERVICE_NAMESPACE),\n/* harmony export */   ATTR_WEBENGINE_DESCRIPTION: () => (/* binding */ ATTR_WEBENGINE_DESCRIPTION),\n/* harmony export */   ATTR_WEBENGINE_NAME: () => (/* binding */ ATTR_WEBENGINE_NAME),\n/* harmony export */   ATTR_WEBENGINE_VERSION: () => (/* binding */ ATTR_WEBENGINE_VERSION)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * This file contains a copy of unstable semantic convention definitions\n * used by this package.\n * @see https://github.com/open-telemetry/opentelemetry-js/tree/main/semantic-conventions#unstable-semconv\n */\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @example 111111111111\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CLOUD_ACCOUNT_ID = 'cloud.account.id';\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * @example us-east-1c\n *\n * @note Availability zones are called \"zones\" on Alibaba Cloud and Google Cloud.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\n/**\n * Name of the cloud provider.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CLOUD_PROVIDER = 'cloud.provider';\n/**\n * The geographical region the resource is running.\n *\n * @example us-central1\n * @example us-east-1\n *\n * @note Refer to your provider's docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/global-infrastructure/geographies/), [Google Cloud regions](https://cloud.google.com/about/locations), or [Tencent Cloud regions](https://www.tencentcloud.com/document/product/213/6091).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CLOUD_REGION = 'cloud.region';\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/containers/run/#container-identification). The UUID might be abbreviated.\n *\n * @example a3bf90e006b2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CONTAINER_ID = 'container.id';\n/**\n * Name of the image the container was built on.\n *\n * @example gcr.io/opentelemetry/operator\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CONTAINER_IMAGE_NAME = 'container.image.name';\n/**\n * Container image tags. An example can be found in [Docker Image Inspect](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect). Should be only the `<tag>` section of the full name for example from `registry.example.com/my-org/my-image:<tag>`.\n *\n * @example [\"v1.27.1\", \"3.5.7-0\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CONTAINER_IMAGE_TAGS = 'container.image.tags';\n/**\n * Container name used by container runtime.\n *\n * @example opentelemetry-autoconf\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_CONTAINER_NAME = 'container.name';\n/**\n * The CPU architecture the host system is running on.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_ARCH = 'host.arch';\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider. For non-containerized systems, this should be the `machine-id`. See the table below for the sources to use to determine the `machine-id` based on operating system.\n *\n * @example fdbf79e8af94cb7f9e8df36789187052\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_ID = 'host.id';\n/**\n * VM image ID or host OS image ID. For Cloud, this value is from the provider.\n *\n * @example ami-07b06b442921831e5\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_IMAGE_ID = 'host.image.id';\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @example infra-ami-eks-worker-node-7d4ec78312\n * @example CentOS-8-x86_64-1905\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_IMAGE_NAME = 'host.image.name';\n/**\n * The version string of the VM image or host OS as defined in [Version Attributes](/docs/resource/README.md#version-attributes).\n *\n * @example 0.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_IMAGE_VERSION = 'host.image.version';\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @example opentelemetry-test\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_NAME = 'host.name';\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @example n1-standard-1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_HOST_TYPE = 'host.type';\n/**\n * The name of the cluster.\n *\n * @example opentelemetry-cluster\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_K8S_CLUSTER_NAME = 'k8s.cluster.name';\n/**\n * The name of the Deployment.\n *\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\n/**\n * The name of the namespace that the pod is running in.\n *\n * @example default\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\n/**\n * The name of the Pod.\n *\n * @example opentelemetry-pod-autoconf\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_K8S_POD_NAME = 'k8s.pod.name';\n/**\n * The operating system type.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_OS_TYPE = 'os.type';\n/**\n * The version string of the operating system as defined in [Version Attributes](/docs/resource/README.md#version-attributes).\n *\n * @example 14.2.1\n * @example 18.04.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_OS_VERSION = 'os.version';\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @example cmd/otelcol\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_COMMAND = 'process.command';\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @example [\"cmd/otecol\", \"--config=config.yaml\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_COMMAND_ARGS = 'process.command_args';\n/**\n * The name of the process executable. On Linux based systems, this **SHOULD** be set to the base name of the target of `/proc/[pid]/exe`. On Windows, this **SHOULD** be set to the base name of `GetProcessImageFileNameW`.\n *\n * @example otelcol\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @example /usr/bin/cmd/otelcol\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\n/**\n * The username of the user that owns the process.\n *\n * @example root\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_OWNER = 'process.owner';\n/**\n * Process identifier (PID).\n *\n * @example 1234\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_PID = 'process.pid';\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @example \"Eclipse OpenJ9 Eclipse OpenJ9 VM openj9-0.21.0\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\n/**\n * The name of the runtime of this process.\n *\n * @example OpenJDK Runtime Environment\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_RUNTIME_NAME = 'process.runtime.name';\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @example \"14.0.2\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\n/**\n * The string ID of the service instance.\n *\n * @example 627cc493-f310-47de-96bd-71410b7dec09\n *\n * @note **MUST** be unique for each instance of the same `service.namespace,service.name` pair (in other words\n * `service.namespace,service.name,service.instance.id` triplet **MUST** be globally unique). The ID helps to\n * distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled\n * service).\n *\n * Implementations, such as SDKs, are recommended to generate a random Version 1 or Version 4 [RFC\n * 4122](https://www.ietf.org/rfc/rfc4122.txt) UUID, but are free to use an inherent unique ID as the source of\n * this value if stability is desirable. In that case, the ID **SHOULD** be used as source of a UUID Version 5 and\n * **SHOULD** use the following UUID as the namespace: `4d63009a-8d0f-11ee-aad7-4c796ed8e320`.\n *\n * UUIDs are typically recommended, as only an opaque value for the purposes of identifying a service instance is\n * needed. Similar to what can be seen in the man page for the\n * [`/etc/machine-id`](https://www.freedesktop.org/software/systemd/man/latest/machine-id.html) file, the underlying\n * data, such as pod name and namespace should be treated as confidential, being the user's choice to expose it\n * or not via another resource attribute.\n *\n * For applications running behind an application server (like unicorn), we do not recommend using one identifier\n * for all processes participating in the application. Instead, it's recommended each division (e.g. a worker\n * thread in unicorn) to have its own instance.id.\n *\n * It's not recommended for a Collector to set `service.instance.id` if it can't unambiguously determine the\n * service instance that is generating that telemetry. For instance, creating an UUID based on `pod.name` will\n * likely be wrong, as the Collector might not know from which container within that pod the telemetry originated.\n * However, Collectors can set the `service.instance.id` if they can unambiguously determine the service instance\n * for that telemetry. This is typically the case for scraping receivers, as they know the target address and\n * port.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_SERVICE_INSTANCE_ID = 'service.instance.id';\n/**\n * A namespace for `service.name`.\n *\n * @example Shop\n *\n * @note A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_SERVICE_NAMESPACE = 'service.namespace';\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @example WildFly Full 21.0.0.Final (WildFly Core 13.0.1.Final) - 2.2.2.Final\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_WEBENGINE_DESCRIPTION = 'webengine.description';\n/**\n * The name of the web engine.\n *\n * @example WildFly\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_WEBENGINE_NAME = 'webengine.name';\n/**\n * The version of the web engine.\n *\n * @example 21.0.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nconst ATTR_WEBENGINE_VERSION = 'webengine.version';\n//# sourceMappingURL=semconv.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/semconv.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/utils.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/utils.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   isPromiseLike: () => (/* binding */ isPromiseLike)\n/* harmony export */ });\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst isPromiseLike = (val) => {\n    return (val !== null &&\n        typeof val === 'object' &&\n        typeof val.then === 'function');\n};\nfunction identity(_) {\n    return _;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvcmVzb3VyY2VzL2J1aWxkL2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQG9wZW50ZWxlbWV0cnkrcmVzb3VyY2VzQDIuMS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMFxcbm9kZV9tb2R1bGVzXFxAb3BlbnRlbGVtZXRyeVxccmVzb3VyY2VzXFxidWlsZFxcZXNtXFx1dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGlzUHJvbWlzZUxpa2UgPSAodmFsKSA9PiB7XG4gICAgcmV0dXJuICh2YWwgIT09IG51bGwgJiZcbiAgICAgICAgdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgdHlwZW9mIHZhbC50aGVuID09PSAnZnVuY3Rpb24nKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gaWRlbnRpdHkoXykge1xuICAgIHJldHVybiBfO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/utils.js\n");

/***/ })

};
;