/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sentry+node@10.16.0";
exports.ids = ["vendor-chunks/@sentry+node@10.16.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\nexports.DEBUG_BUILD = DEBUG_BUILD;\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvZGVidWctYnVpbGQuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcZGVidWctYnVpbGQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbi8qKlxuICogVGhpcyBzZXJ2ZXMgYXMgYSBidWlsZCB0aW1lIGZsYWcgdGhhdCB3aWxsIGJlIHRydWUgYnkgZGVmYXVsdCwgYnV0IGZhbHNlIGluIG5vbi1kZWJ1ZyBidWlsZHMgb3IgaWYgdXNlcnMgcmVwbGFjZSBgX19TRU5UUllfREVCVUdfX2AgaW4gdGhlaXIgZ2VuZXJhdGVkIGNvZGUuXG4gKlxuICogQVRURU5USU9OOiBUaGlzIGNvbnN0YW50IG11c3QgbmV2ZXIgY3Jvc3MgcGFja2FnZSBib3VuZGFyaWVzIChpLmUuIGJlIGV4cG9ydGVkKSB0byBndWFyYW50ZWUgdGhhdCBpdCBjYW4gYmUgdXNlZCBmb3IgdHJlZSBzaGFraW5nLlxuICovXG5jb25zdCBERUJVR19CVUlMRCA9ICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXyk7XG5cbmV4cG9ydHMuREVCVUdfQlVJTEQgPSBERUJVR19CVUlMRDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnLWJ1aWxkLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst http = __webpack_require__(/*! ./integrations/http.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/http.js\");\nconst nodeFetch = __webpack_require__(/*! ./integrations/node-fetch.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/node-fetch.js\");\nconst fs = __webpack_require__(/*! ./integrations/fs.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/fs.js\");\nconst express = __webpack_require__(/*! ./integrations/tracing/express.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/express.js\");\nconst index = __webpack_require__(/*! ./integrations/tracing/fastify/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/index.js\");\nconst graphql = __webpack_require__(/*! ./integrations/tracing/graphql.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/graphql.js\");\nconst kafka = __webpack_require__(/*! ./integrations/tracing/kafka.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/kafka.js\");\nconst lrumemoizer = __webpack_require__(/*! ./integrations/tracing/lrumemoizer.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/lrumemoizer.js\");\nconst mongo = __webpack_require__(/*! ./integrations/tracing/mongo.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongo.js\");\nconst mongoose = __webpack_require__(/*! ./integrations/tracing/mongoose.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongoose.js\");\nconst mysql = __webpack_require__(/*! ./integrations/tracing/mysql.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql.js\");\nconst mysql2 = __webpack_require__(/*! ./integrations/tracing/mysql2.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql2.js\");\nconst redis = __webpack_require__(/*! ./integrations/tracing/redis.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/redis.js\");\nconst postgres = __webpack_require__(/*! ./integrations/tracing/postgres.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgres.js\");\nconst postgresjs = __webpack_require__(/*! ./integrations/tracing/postgresjs.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgresjs.js\");\nconst prisma = __webpack_require__(/*! ./integrations/tracing/prisma.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js\");\nconst index$1 = __webpack_require__(/*! ./integrations/tracing/hapi/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hapi/index.js\");\nconst index$2 = __webpack_require__(/*! ./integrations/tracing/hono/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/index.js\");\nconst koa = __webpack_require__(/*! ./integrations/tracing/koa.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/koa.js\");\nconst connect = __webpack_require__(/*! ./integrations/tracing/connect.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/connect.js\");\nconst knex = __webpack_require__(/*! ./integrations/tracing/knex.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/knex.js\");\nconst tedious = __webpack_require__(/*! ./integrations/tracing/tedious.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/tedious.js\");\nconst genericPool = __webpack_require__(/*! ./integrations/tracing/genericPool.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/genericPool.js\");\nconst dataloader = __webpack_require__(/*! ./integrations/tracing/dataloader.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/dataloader.js\");\nconst amqplib = __webpack_require__(/*! ./integrations/tracing/amqplib.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/amqplib.js\");\nconst index$3 = __webpack_require__(/*! ./integrations/tracing/vercelai/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/index.js\");\nconst index$4 = __webpack_require__(/*! ./integrations/tracing/openai/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/openai/index.js\");\nconst index$5 = __webpack_require__(/*! ./integrations/tracing/anthropic-ai/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/anthropic-ai/index.js\");\nconst index$6 = __webpack_require__(/*! ./integrations/tracing/google-genai/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/google-genai/index.js\");\nconst launchDarkly = __webpack_require__(/*! ./integrations/featureFlagShims/launchDarkly.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/launchDarkly.js\");\nconst openFeature = __webpack_require__(/*! ./integrations/featureFlagShims/openFeature.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/openFeature.js\");\nconst statsig = __webpack_require__(/*! ./integrations/featureFlagShims/statsig.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/statsig.js\");\nconst unleash = __webpack_require__(/*! ./integrations/featureFlagShims/unleash.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/unleash.js\");\nconst firebase = __webpack_require__(/*! ./integrations/tracing/firebase/firebase.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/firebase.js\");\nconst index$7 = __webpack_require__(/*! ./sdk/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/sdk/index.js\");\nconst initOtel = __webpack_require__(/*! ./sdk/initOtel.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/sdk/initOtel.js\");\nconst index$8 = __webpack_require__(/*! ./integrations/tracing/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/index.js\");\nconst opentelemetry = __webpack_require__(/*! @sentry/opentelemetry */ \"(rsc)/./node_modules/.pnpm/@sentry+opentelemetry@10.16_6ab421456e2f0bf04c66c14f54985fe1/node_modules/@sentry/opentelemetry/build/cjs/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\n\n\nexports.httpIntegration = http.httpIntegration;\nexports.nativeNodeFetchIntegration = nodeFetch.nativeNodeFetchIntegration;\nexports.fsIntegration = fs.fsIntegration;\nexports.expressErrorHandler = express.expressErrorHandler;\nexports.expressIntegration = express.expressIntegration;\nexports.setupExpressErrorHandler = express.setupExpressErrorHandler;\nexports.fastifyIntegration = index.fastifyIntegration;\nexports.setupFastifyErrorHandler = index.setupFastifyErrorHandler;\nexports.graphqlIntegration = graphql.graphqlIntegration;\nexports.kafkaIntegration = kafka.kafkaIntegration;\nexports.lruMemoizerIntegration = lrumemoizer.lruMemoizerIntegration;\nexports.mongoIntegration = mongo.mongoIntegration;\nexports.mongooseIntegration = mongoose.mongooseIntegration;\nexports.mysqlIntegration = mysql.mysqlIntegration;\nexports.mysql2Integration = mysql2.mysql2Integration;\nexports.redisIntegration = redis.redisIntegration;\nexports.postgresIntegration = postgres.postgresIntegration;\nexports.postgresJsIntegration = postgresjs.postgresJsIntegration;\nexports.prismaIntegration = prisma.prismaIntegration;\nexports.hapiIntegration = index$1.hapiIntegration;\nexports.setupHapiErrorHandler = index$1.setupHapiErrorHandler;\nexports.honoIntegration = index$2.honoIntegration;\nexports.setupHonoErrorHandler = index$2.setupHonoErrorHandler;\nexports.koaIntegration = koa.koaIntegration;\nexports.setupKoaErrorHandler = koa.setupKoaErrorHandler;\nexports.connectIntegration = connect.connectIntegration;\nexports.setupConnectErrorHandler = connect.setupConnectErrorHandler;\nexports.knexIntegration = knex.knexIntegration;\nexports.tediousIntegration = tedious.tediousIntegration;\nexports.genericPoolIntegration = genericPool.genericPoolIntegration;\nexports.dataloaderIntegration = dataloader.dataloaderIntegration;\nexports.amqplibIntegration = amqplib.amqplibIntegration;\nexports.vercelAIIntegration = index$3.vercelAIIntegration;\nexports.openAIIntegration = index$4.openAIIntegration;\nexports.anthropicAIIntegration = index$5.anthropicAIIntegration;\nexports.googleGenAIIntegration = index$6.googleGenAIIntegration;\nexports.buildLaunchDarklyFlagUsedHandler = launchDarkly.buildLaunchDarklyFlagUsedHandlerShim;\nexports.launchDarklyIntegration = launchDarkly.launchDarklyIntegrationShim;\nexports.OpenFeatureIntegrationHook = openFeature.OpenFeatureIntegrationHookShim;\nexports.openFeatureIntegration = openFeature.openFeatureIntegrationShim;\nexports.statsigIntegration = statsig.statsigIntegrationShim;\nexports.unleashIntegration = unleash.unleashIntegrationShim;\nexports.firebaseIntegration = firebase.firebaseIntegration;\nexports.getDefaultIntegrations = index$7.getDefaultIntegrations;\nexports.getDefaultIntegrationsWithoutPerformance = index$7.getDefaultIntegrationsWithoutPerformance;\nexports.init = index$7.init;\nexports.initWithoutDefaultIntegrations = index$7.initWithoutDefaultIntegrations;\nexports.initOpenTelemetry = initOtel.initOpenTelemetry;\nexports.preloadOpenTelemetry = initOtel.preloadOpenTelemetry;\nexports.getAutoPerformanceIntegrations = index$8.getAutoPerformanceIntegrations;\nexports.setNodeAsyncContextStrategy = opentelemetry.setOpenTelemetryContextAsyncContextStrategy;\nexports.SDK_VERSION = core.SDK_VERSION;\nexports.SEMANTIC_ATTRIBUTE_SENTRY_OP = core.SEMANTIC_ATTRIBUTE_SENTRY_OP;\nexports.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN;\nexports.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = core.SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE;\nexports.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = core.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE;\nexports.Scope = core.Scope;\nexports.addBreadcrumb = core.addBreadcrumb;\nexports.addEventProcessor = core.addEventProcessor;\nexports.addIntegration = core.addIntegration;\nexports.captureCheckIn = core.captureCheckIn;\nexports.captureConsoleIntegration = core.captureConsoleIntegration;\nexports.captureEvent = core.captureEvent;\nexports.captureException = core.captureException;\nexports.captureFeedback = core.captureFeedback;\nexports.captureMessage = core.captureMessage;\nexports.captureSession = core.captureSession;\nexports.close = core.close;\nexports.consoleIntegration = core.consoleIntegration;\nexports.consoleLoggingIntegration = core.consoleLoggingIntegration;\nexports.continueTrace = core.continueTrace;\nexports.createConsolaReporter = core.createConsolaReporter;\nexports.createTransport = core.createTransport;\nexports.dedupeIntegration = core.dedupeIntegration;\nexports.endSession = core.endSession;\nexports.eventFiltersIntegration = core.eventFiltersIntegration;\nexports.extraErrorDataIntegration = core.extraErrorDataIntegration;\nexports.featureFlagsIntegration = core.featureFlagsIntegration;\nexports.flush = core.flush;\nexports.functionToStringIntegration = core.functionToStringIntegration;\nexports.getActiveSpan = core.getActiveSpan;\nexports.getClient = core.getClient;\nexports.getCurrentScope = core.getCurrentScope;\nexports.getGlobalScope = core.getGlobalScope;\nexports.getIsolationScope = core.getIsolationScope;\nexports.getRootSpan = core.getRootSpan;\nexports.getSpanDescendants = core.getSpanDescendants;\nexports.getSpanStatusFromHttpCode = core.getSpanStatusFromHttpCode;\nexports.getTraceData = core.getTraceData;\nexports.getTraceMetaTags = core.getTraceMetaTags;\nexports.httpHeadersToSpanAttributes = core.httpHeadersToSpanAttributes;\nexports.inboundFiltersIntegration = core.inboundFiltersIntegration;\nexports.instrumentSupabaseClient = core.instrumentSupabaseClient;\nexports.isEnabled = core.isEnabled;\nexports.isInitialized = core.isInitialized;\nexports.lastEventId = core.lastEventId;\nexports.linkedErrorsIntegration = core.linkedErrorsIntegration;\nexports.parameterize = core.parameterize;\nexports.profiler = core.profiler;\nexports.requestDataIntegration = core.requestDataIntegration;\nexports.rewriteFramesIntegration = core.rewriteFramesIntegration;\nexports.setContext = core.setContext;\nexports.setCurrentClient = core.setCurrentClient;\nexports.setExtra = core.setExtra;\nexports.setExtras = core.setExtras;\nexports.setHttpStatus = core.setHttpStatus;\nexports.setMeasurement = core.setMeasurement;\nexports.setTag = core.setTag;\nexports.setTags = core.setTags;\nexports.setUser = core.setUser;\nexports.spanToBaggageHeader = core.spanToBaggageHeader;\nexports.spanToJSON = core.spanToJSON;\nexports.spanToTraceHeader = core.spanToTraceHeader;\nexports.startInactiveSpan = core.startInactiveSpan;\nexports.startNewTrace = core.startNewTrace;\nexports.startSession = core.startSession;\nexports.startSpan = core.startSpan;\nexports.startSpanManual = core.startSpanManual;\nexports.supabaseIntegration = core.supabaseIntegration;\nexports.suppressTracing = core.suppressTracing;\nexports.trpcMiddleware = core.trpcMiddleware;\nexports.updateSpanName = core.updateSpanName;\nexports.winterCGHeadersToDict = core.winterCGHeadersToDict;\nexports.withActiveSpan = core.withActiveSpan;\nexports.withIsolationScope = core.withIsolationScope;\nexports.withMonitor = core.withMonitor;\nexports.withScope = core.withScope;\nexports.wrapMcpServerWithSentry = core.wrapMcpServerWithSentry;\nexports.zodErrorsIntegration = core.zodErrorsIntegration;\nexports.NODE_VERSION = nodeCore.NODE_VERSION;\nexports.NodeClient = nodeCore.NodeClient;\nexports.SentryContextManager = nodeCore.SentryContextManager;\nexports.anrIntegration = nodeCore.anrIntegration;\nexports.childProcessIntegration = nodeCore.childProcessIntegration;\nexports.contextLinesIntegration = nodeCore.contextLinesIntegration;\nexports.createGetModuleFromFilename = nodeCore.createGetModuleFromFilename;\nexports.createSentryWinstonTransport = nodeCore.createSentryWinstonTransport;\nexports.cron = nodeCore.cron;\nexports.defaultStackParser = nodeCore.defaultStackParser;\nexports.disableAnrDetectionForCallback = nodeCore.disableAnrDetectionForCallback;\nexports.generateInstrumentOnce = nodeCore.generateInstrumentOnce;\nexports.getSentryRelease = nodeCore.getSentryRelease;\nexports.localVariablesIntegration = nodeCore.localVariablesIntegration;\nexports.logger = nodeCore.logger;\nexports.makeNodeTransport = nodeCore.makeNodeTransport;\nexports.modulesIntegration = nodeCore.modulesIntegration;\nexports.nodeContextIntegration = nodeCore.nodeContextIntegration;\nexports.onUncaughtExceptionIntegration = nodeCore.onUncaughtExceptionIntegration;\nexports.onUnhandledRejectionIntegration = nodeCore.onUnhandledRejectionIntegration;\nexports.spotlightIntegration = nodeCore.spotlightIntegration;\nexports.systemErrorIntegration = nodeCore.systemErrorIntegration;\nexports.validateOpenTelemetrySetup = nodeCore.validateOpenTelemetrySetup;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/launchDarkly.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/launchDarkly.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\n\n/**\n * This is a shim for the LaunchDarkly integration.\n * We need this in order to not throw runtime errors when accidentally importing this on the server through a meta framework like Next.js.\n */\nconst launchDarklyIntegrationShim = core.defineIntegration((_options) => {\n  if (!core.isBrowser()) {\n    core.consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('The launchDarklyIntegration() can only be used in the browser.');\n    });\n  }\n\n  return {\n    name: 'LaunchDarkly',\n  };\n});\n\n/**\n * This is a shim for the LaunchDarkly flag used handler.\n */\nfunction buildLaunchDarklyFlagUsedHandlerShim() {\n  if (!core.isBrowser()) {\n    core.consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('The buildLaunchDarklyFlagUsedHandler() can only be used in the browser.');\n    });\n  }\n\n  return {\n    name: 'sentry-flag-auditor',\n    type: 'flag-used',\n    synchronous: true,\n    method: () => null,\n  };\n}\n\nexports.buildLaunchDarklyFlagUsedHandlerShim = buildLaunchDarklyFlagUsedHandlerShim;\nexports.launchDarklyIntegrationShim = launchDarklyIntegrationShim;\n//# sourceMappingURL=launchDarkly.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL2ZlYXR1cmVGbGFnU2hpbXMvbGF1bmNoRGFya2x5LmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw0Q0FBNEM7QUFDNUMsbUNBQW1DO0FBQ25DIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXGZlYXR1cmVGbGFnU2hpbXNcXGxhdW5jaERhcmtseS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuXG4vKipcbiAqIFRoaXMgaXMgYSBzaGltIGZvciB0aGUgTGF1bmNoRGFya2x5IGludGVncmF0aW9uLlxuICogV2UgbmVlZCB0aGlzIGluIG9yZGVyIHRvIG5vdCB0aHJvdyBydW50aW1lIGVycm9ycyB3aGVuIGFjY2lkZW50YWxseSBpbXBvcnRpbmcgdGhpcyBvbiB0aGUgc2VydmVyIHRocm91Z2ggYSBtZXRhIGZyYW1ld29yayBsaWtlIE5leHQuanMuXG4gKi9cbmNvbnN0IGxhdW5jaERhcmtseUludGVncmF0aW9uU2hpbSA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oKF9vcHRpb25zKSA9PiB7XG4gIGlmICghY29yZS5pc0Jyb3dzZXIoKSkge1xuICAgIGNvcmUuY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybignVGhlIGxhdW5jaERhcmtseUludGVncmF0aW9uKCkgY2FuIG9ubHkgYmUgdXNlZCBpbiB0aGUgYnJvd3Nlci4nKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbmFtZTogJ0xhdW5jaERhcmtseScsXG4gIH07XG59KTtcblxuLyoqXG4gKiBUaGlzIGlzIGEgc2hpbSBmb3IgdGhlIExhdW5jaERhcmtseSBmbGFnIHVzZWQgaGFuZGxlci5cbiAqL1xuZnVuY3Rpb24gYnVpbGRMYXVuY2hEYXJrbHlGbGFnVXNlZEhhbmRsZXJTaGltKCkge1xuICBpZiAoIWNvcmUuaXNCcm93c2VyKCkpIHtcbiAgICBjb3JlLmNvbnNvbGVTYW5kYm94KCgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4oJ1RoZSBidWlsZExhdW5jaERhcmtseUZsYWdVc2VkSGFuZGxlcigpIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGhlIGJyb3dzZXIuJyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG5hbWU6ICdzZW50cnktZmxhZy1hdWRpdG9yJyxcbiAgICB0eXBlOiAnZmxhZy11c2VkJyxcbiAgICBzeW5jaHJvbm91czogdHJ1ZSxcbiAgICBtZXRob2Q6ICgpID0+IG51bGwsXG4gIH07XG59XG5cbmV4cG9ydHMuYnVpbGRMYXVuY2hEYXJrbHlGbGFnVXNlZEhhbmRsZXJTaGltID0gYnVpbGRMYXVuY2hEYXJrbHlGbGFnVXNlZEhhbmRsZXJTaGltO1xuZXhwb3J0cy5sYXVuY2hEYXJrbHlJbnRlZ3JhdGlvblNoaW0gPSBsYXVuY2hEYXJrbHlJbnRlZ3JhdGlvblNoaW07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sYXVuY2hEYXJrbHkuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/launchDarkly.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/openFeature.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/openFeature.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\n\n/**\n * This is a shim for the OpenFeature integration.\n * We need this in order to not throw runtime errors when accidentally importing this on the server through a meta framework like Next.js.\n */\nconst openFeatureIntegrationShim = core.defineIntegration((_options) => {\n  if (!core.isBrowser()) {\n    core.consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('The openFeatureIntegration() can only be used in the browser.');\n    });\n  }\n\n  return {\n    name: 'OpenFeature',\n  };\n});\n\n/**\n * This is a shim for the OpenFeature integration hook.\n */\nclass OpenFeatureIntegrationHookShim {\n  /**\n   *\n   */\n   constructor() {\n    if (!core.isBrowser()) {\n      core.consoleSandbox(() => {\n        // eslint-disable-next-line no-console\n        console.warn('The OpenFeatureIntegrationHook can only be used in the browser.');\n      });\n    }\n  }\n\n  /**\n   *\n   */\n   after() {\n    // No-op\n  }\n\n  /**\n   *\n   */\n   error() {\n    // No-op\n  }\n}\n\nexports.OpenFeatureIntegrationHookShim = OpenFeatureIntegrationHookShim;\nexports.openFeatureIntegrationShim = openFeatureIntegrationShim;\n//# sourceMappingURL=openFeature.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL2ZlYXR1cmVGbGFnU2hpbXMvb3BlbkZlYXR1cmUuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjOztBQUVuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0NBQXNDO0FBQ3RDLGtDQUFrQztBQUNsQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFxmZWF0dXJlRmxhZ1NoaW1zXFxvcGVuRmVhdHVyZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuXG4vKipcbiAqIFRoaXMgaXMgYSBzaGltIGZvciB0aGUgT3BlbkZlYXR1cmUgaW50ZWdyYXRpb24uXG4gKiBXZSBuZWVkIHRoaXMgaW4gb3JkZXIgdG8gbm90IHRocm93IHJ1bnRpbWUgZXJyb3JzIHdoZW4gYWNjaWRlbnRhbGx5IGltcG9ydGluZyB0aGlzIG9uIHRoZSBzZXJ2ZXIgdGhyb3VnaCBhIG1ldGEgZnJhbWV3b3JrIGxpa2UgTmV4dC5qcy5cbiAqL1xuY29uc3Qgb3BlbkZlYXR1cmVJbnRlZ3JhdGlvblNoaW0gPSBjb3JlLmRlZmluZUludGVncmF0aW9uKChfb3B0aW9ucykgPT4ge1xuICBpZiAoIWNvcmUuaXNCcm93c2VyKCkpIHtcbiAgICBjb3JlLmNvbnNvbGVTYW5kYm94KCgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4oJ1RoZSBvcGVuRmVhdHVyZUludGVncmF0aW9uKCkgY2FuIG9ubHkgYmUgdXNlZCBpbiB0aGUgYnJvd3Nlci4nKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbmFtZTogJ09wZW5GZWF0dXJlJyxcbiAgfTtcbn0pO1xuXG4vKipcbiAqIFRoaXMgaXMgYSBzaGltIGZvciB0aGUgT3BlbkZlYXR1cmUgaW50ZWdyYXRpb24gaG9vay5cbiAqL1xuY2xhc3MgT3BlbkZlYXR1cmVJbnRlZ3JhdGlvbkhvb2tTaGltIHtcbiAgLyoqXG4gICAqXG4gICAqL1xuICAgY29uc3RydWN0b3IoKSB7XG4gICAgaWYgKCFjb3JlLmlzQnJvd3NlcigpKSB7XG4gICAgICBjb3JlLmNvbnNvbGVTYW5kYm94KCgpID0+IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgY29uc29sZS53YXJuKCdUaGUgT3BlbkZlYXR1cmVJbnRlZ3JhdGlvbkhvb2sgY2FuIG9ubHkgYmUgdXNlZCBpbiB0aGUgYnJvd3Nlci4nKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKi9cbiAgIGFmdGVyKCkge1xuICAgIC8vIE5vLW9wXG4gIH1cblxuICAvKipcbiAgICpcbiAgICovXG4gICBlcnJvcigpIHtcbiAgICAvLyBOby1vcFxuICB9XG59XG5cbmV4cG9ydHMuT3BlbkZlYXR1cmVJbnRlZ3JhdGlvbkhvb2tTaGltID0gT3BlbkZlYXR1cmVJbnRlZ3JhdGlvbkhvb2tTaGltO1xuZXhwb3J0cy5vcGVuRmVhdHVyZUludGVncmF0aW9uU2hpbSA9IG9wZW5GZWF0dXJlSW50ZWdyYXRpb25TaGltO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3BlbkZlYXR1cmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/openFeature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/statsig.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/statsig.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\n\n/**\n * This is a shim for the Statsig integration.\n * We need this in order to not throw runtime errors when accidentally importing this on the server through a meta framework like Next.js.\n */\nconst statsigIntegrationShim = core.defineIntegration((_options) => {\n  if (!core.isBrowser()) {\n    core.consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('The statsigIntegration() can only be used in the browser.');\n    });\n  }\n\n  return {\n    name: 'Statsig',\n  };\n});\n\nexports.statsigIntegrationShim = statsigIntegrationShim;\n//# sourceMappingURL=statsig.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL2ZlYXR1cmVGbGFnU2hpbXMvc3RhdHNpZy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSxhQUFhLG1CQUFPLENBQUMsa0hBQWM7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFxmZWF0dXJlRmxhZ1NoaW1zXFxzdGF0c2lnLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5cbi8qKlxuICogVGhpcyBpcyBhIHNoaW0gZm9yIHRoZSBTdGF0c2lnIGludGVncmF0aW9uLlxuICogV2UgbmVlZCB0aGlzIGluIG9yZGVyIHRvIG5vdCB0aHJvdyBydW50aW1lIGVycm9ycyB3aGVuIGFjY2lkZW50YWxseSBpbXBvcnRpbmcgdGhpcyBvbiB0aGUgc2VydmVyIHRocm91Z2ggYSBtZXRhIGZyYW1ld29yayBsaWtlIE5leHQuanMuXG4gKi9cbmNvbnN0IHN0YXRzaWdJbnRlZ3JhdGlvblNoaW0gPSBjb3JlLmRlZmluZUludGVncmF0aW9uKChfb3B0aW9ucykgPT4ge1xuICBpZiAoIWNvcmUuaXNCcm93c2VyKCkpIHtcbiAgICBjb3JlLmNvbnNvbGVTYW5kYm94KCgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4oJ1RoZSBzdGF0c2lnSW50ZWdyYXRpb24oKSBjYW4gb25seSBiZSB1c2VkIGluIHRoZSBicm93c2VyLicpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnU3RhdHNpZycsXG4gIH07XG59KTtcblxuZXhwb3J0cy5zdGF0c2lnSW50ZWdyYXRpb25TaGltID0gc3RhdHNpZ0ludGVncmF0aW9uU2hpbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRzaWcuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/statsig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/unleash.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/unleash.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\n\n/**\n * This is a shim for the Unleash integration.\n * We need this in order to not throw runtime errors when accidentally importing this on the server through a meta framework like Next.js.\n */\nconst unleashIntegrationShim = core.defineIntegration((_options) => {\n  if (!core.isBrowser()) {\n    core.consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('The unleashIntegration() can only be used in the browser.');\n    });\n  }\n\n  return {\n    name: 'Unleash',\n  };\n});\n\nexports.unleashIntegrationShim = unleashIntegrationShim;\n//# sourceMappingURL=unleash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL2ZlYXR1cmVGbGFnU2hpbXMvdW5sZWFzaC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSxhQUFhLG1CQUFPLENBQUMsa0hBQWM7O0FBRW5DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFxmZWF0dXJlRmxhZ1NoaW1zXFx1bmxlYXNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5cbi8qKlxuICogVGhpcyBpcyBhIHNoaW0gZm9yIHRoZSBVbmxlYXNoIGludGVncmF0aW9uLlxuICogV2UgbmVlZCB0aGlzIGluIG9yZGVyIHRvIG5vdCB0aHJvdyBydW50aW1lIGVycm9ycyB3aGVuIGFjY2lkZW50YWxseSBpbXBvcnRpbmcgdGhpcyBvbiB0aGUgc2VydmVyIHRocm91Z2ggYSBtZXRhIGZyYW1ld29yayBsaWtlIE5leHQuanMuXG4gKi9cbmNvbnN0IHVubGVhc2hJbnRlZ3JhdGlvblNoaW0gPSBjb3JlLmRlZmluZUludGVncmF0aW9uKChfb3B0aW9ucykgPT4ge1xuICBpZiAoIWNvcmUuaXNCcm93c2VyKCkpIHtcbiAgICBjb3JlLmNvbnNvbGVTYW5kYm94KCgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4oJ1RoZSB1bmxlYXNoSW50ZWdyYXRpb24oKSBjYW4gb25seSBiZSB1c2VkIGluIHRoZSBicm93c2VyLicpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiAnVW5sZWFzaCcsXG4gIH07XG59KTtcblxuZXhwb3J0cy51bmxlYXNoSW50ZWdyYXRpb25TaGltID0gdW5sZWFzaEludGVncmF0aW9uU2hpbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVubGVhc2guanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/featureFlagShims/unleash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/fs.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/fs.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationFs = __webpack_require__(/*! @opentelemetry/instrumentation-fs */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_cdb526ba89e9cffb1a488205c0f73b5e/node_modules/@opentelemetry/instrumentation-fs/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'FileSystem';\n\n/**\n * This integration will create spans for `fs` API operations, like reading and writing files.\n *\n * **WARNING:** This integration may add significant overhead to your application. Especially in scenarios with a lot of\n * file I/O, like for example when running a framework dev server, including this integration can massively slow down\n * your application.\n *\n * @param options Configuration for this integration.\n */\nconst fsIntegration = core.defineIntegration(\n  (\n    options\n\n = {},\n  ) => {\n    return {\n      name: INTEGRATION_NAME,\n      setupOnce() {\n        nodeCore.generateInstrumentOnce(\n          INTEGRATION_NAME,\n          () =>\n            new instrumentationFs.FsInstrumentation({\n              requireParentSpan: true,\n              endHook(functionName, { args, span, error }) {\n                span.updateName(`fs.${functionName}`);\n\n                span.setAttributes({\n                  [core.SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'file',\n                  [core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.file.fs',\n                });\n\n                if (options.recordErrorMessagesAsSpanAttributes) {\n                  if (typeof args[0] === 'string' && FS_OPERATIONS_WITH_PATH_ARG.includes(functionName)) {\n                    span.setAttribute('path_argument', args[0]);\n                  } else if (\n                    typeof args[0] === 'string' &&\n                    typeof args[1] === 'string' &&\n                    FS_OPERATIONS_WITH_TARGET_PATH.includes(functionName)\n                  ) {\n                    span.setAttribute('target_argument', args[0]);\n                    span.setAttribute('path_argument', args[1]);\n                  } else if (typeof args[0] === 'string' && FS_OPERATIONS_WITH_PREFIX.includes(functionName)) {\n                    span.setAttribute('prefix_argument', args[0]);\n                  } else if (\n                    typeof args[0] === 'string' &&\n                    typeof args[1] === 'string' &&\n                    FS_OPERATIONS_WITH_EXISTING_PATH_NEW_PATH.includes(functionName)\n                  ) {\n                    span.setAttribute('existing_path_argument', args[0]);\n                    span.setAttribute('new_path_argument', args[1]);\n                  } else if (\n                    typeof args[0] === 'string' &&\n                    typeof args[1] === 'string' &&\n                    FS_OPERATIONS_WITH_SRC_DEST.includes(functionName)\n                  ) {\n                    span.setAttribute('src_argument', args[0]);\n                    span.setAttribute('dest_argument', args[1]);\n                  } else if (\n                    typeof args[0] === 'string' &&\n                    typeof args[1] === 'string' &&\n                    FS_OPERATIONS_WITH_OLD_PATH_NEW_PATH.includes(functionName)\n                  ) {\n                    span.setAttribute('old_path_argument', args[0]);\n                    span.setAttribute('new_path_argument', args[1]);\n                  }\n                }\n\n                if (error && options.recordErrorMessagesAsSpanAttributes) {\n                  span.setAttribute('fs_error', error.message);\n                }\n              },\n            }),\n        )();\n      },\n    };\n  },\n);\n\nconst FS_OPERATIONS_WITH_OLD_PATH_NEW_PATH = ['rename', 'renameSync'];\nconst FS_OPERATIONS_WITH_SRC_DEST = ['copyFile', 'cp', 'copyFileSync', 'cpSync'];\nconst FS_OPERATIONS_WITH_EXISTING_PATH_NEW_PATH = ['link', 'linkSync'];\nconst FS_OPERATIONS_WITH_PREFIX = ['mkdtemp', 'mkdtempSync'];\nconst FS_OPERATIONS_WITH_TARGET_PATH = ['symlink', 'symlinkSync'];\nconst FS_OPERATIONS_WITH_PATH_ARG = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'exists',\n  'mkdir',\n  'lchown',\n  'lstat',\n  'lutimes',\n  'open',\n  'opendir',\n  'readdir',\n  'readFile',\n  'readlink',\n  'realpath',\n  'realpath.native',\n  'rm',\n  'rmdir',\n  'stat',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile',\n  'accessSync',\n  'appendFileSync',\n  'chmodSync',\n  'chownSync',\n  'existsSync',\n  'lchownSync',\n  'lstatSync',\n  'lutimesSync',\n  'opendirSync',\n  'mkdirSync',\n  'openSync',\n  'readdirSync',\n  'readFileSync',\n  'readlinkSync',\n  'realpathSync',\n  'realpathSync.native',\n  'rmdirSync',\n  'rmSync',\n  'statSync',\n  'truncateSync',\n  'unlinkSync',\n  'utimesSync',\n  'writeFileSync',\n];\n\nexports.fsIntegration = fsIntegration;\n//# sourceMappingURL=fs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL2ZzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFLDBCQUEwQixtQkFBTyxDQUFDLG9NQUFtQztBQUNyRSxhQUFhLG1CQUFPLENBQUMsa0hBQWM7QUFDbkMsaUJBQWlCLG1CQUFPLENBQUMsb0tBQW1COztBQUU1Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxtQkFBbUI7QUFDekQsc0NBQXNDLGFBQWE7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLGFBQWE7QUFDYjtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFxmcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgaW5zdHJ1bWVudGF0aW9uRnMgPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tZnMnKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdGaWxlU3lzdGVtJztcblxuLyoqXG4gKiBUaGlzIGludGVncmF0aW9uIHdpbGwgY3JlYXRlIHNwYW5zIGZvciBgZnNgIEFQSSBvcGVyYXRpb25zLCBsaWtlIHJlYWRpbmcgYW5kIHdyaXRpbmcgZmlsZXMuXG4gKlxuICogKipXQVJOSU5HOioqIFRoaXMgaW50ZWdyYXRpb24gbWF5IGFkZCBzaWduaWZpY2FudCBvdmVyaGVhZCB0byB5b3VyIGFwcGxpY2F0aW9uLiBFc3BlY2lhbGx5IGluIHNjZW5hcmlvcyB3aXRoIGEgbG90IG9mXG4gKiBmaWxlIEkvTywgbGlrZSBmb3IgZXhhbXBsZSB3aGVuIHJ1bm5pbmcgYSBmcmFtZXdvcmsgZGV2IHNlcnZlciwgaW5jbHVkaW5nIHRoaXMgaW50ZWdyYXRpb24gY2FuIG1hc3NpdmVseSBzbG93IGRvd25cbiAqIHlvdXIgYXBwbGljYXRpb24uXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgQ29uZmlndXJhdGlvbiBmb3IgdGhpcyBpbnRlZ3JhdGlvbi5cbiAqL1xuY29uc3QgZnNJbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oXG4gIChcbiAgICBvcHRpb25zXG5cbiA9IHt9LFxuICApID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICAgIHNldHVwT25jZSgpIHtcbiAgICAgICAgbm9kZUNvcmUuZ2VuZXJhdGVJbnN0cnVtZW50T25jZShcbiAgICAgICAgICBJTlRFR1JBVElPTl9OQU1FLFxuICAgICAgICAgICgpID0+XG4gICAgICAgICAgICBuZXcgaW5zdHJ1bWVudGF0aW9uRnMuRnNJbnN0cnVtZW50YXRpb24oe1xuICAgICAgICAgICAgICByZXF1aXJlUGFyZW50U3BhbjogdHJ1ZSxcbiAgICAgICAgICAgICAgZW5kSG9vayhmdW5jdGlvbk5hbWUsIHsgYXJncywgc3BhbiwgZXJyb3IgfSkge1xuICAgICAgICAgICAgICAgIHNwYW4udXBkYXRlTmFtZShgZnMuJHtmdW5jdGlvbk5hbWV9YCk7XG5cbiAgICAgICAgICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgICAgICAgW2NvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUF06ICdmaWxlJyxcbiAgICAgICAgICAgICAgICAgIFtjb3JlLlNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOXTogJ2F1dG8uZmlsZS5mcycsXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBpZiAob3B0aW9ucy5yZWNvcmRFcnJvck1lc3NhZ2VzQXNTcGFuQXR0cmlidXRlcykge1xuICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJyAmJiBGU19PUEVSQVRJT05TX1dJVEhfUEFUSF9BUkcuaW5jbHVkZXMoZnVuY3Rpb25OYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZSgncGF0aF9hcmd1bWVudCcsIGFyZ3NbMF0pO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgICAgICAgICAgICAgdHlwZW9mIGFyZ3NbMF0gPT09ICdzdHJpbmcnICYmXG4gICAgICAgICAgICAgICAgICAgIHR5cGVvZiBhcmdzWzFdID09PSAnc3RyaW5nJyAmJlxuICAgICAgICAgICAgICAgICAgICBGU19PUEVSQVRJT05TX1dJVEhfVEFSR0VUX1BBVEguaW5jbHVkZXMoZnVuY3Rpb25OYW1lKVxuICAgICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKCd0YXJnZXRfYXJndW1lbnQnLCBhcmdzWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGUoJ3BhdGhfYXJndW1lbnQnLCBhcmdzWzFdKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGFyZ3NbMF0gPT09ICdzdHJpbmcnICYmIEZTX09QRVJBVElPTlNfV0lUSF9QUkVGSVguaW5jbHVkZXMoZnVuY3Rpb25OYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZSgncHJlZml4X2FyZ3VtZW50JywgYXJnc1swXSk7XG4gICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgICAgICAgICAgICB0eXBlb2YgYXJnc1swXSA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgICAgICAgICAgICAgdHlwZW9mIGFyZ3NbMV0gPT09ICdzdHJpbmcnICYmXG4gICAgICAgICAgICAgICAgICAgIEZTX09QRVJBVElPTlNfV0lUSF9FWElTVElOR19QQVRIX05FV19QQVRILmluY2x1ZGVzKGZ1bmN0aW9uTmFtZSlcbiAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZSgnZXhpc3RpbmdfcGF0aF9hcmd1bWVudCcsIGFyZ3NbMF0pO1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZSgnbmV3X3BhdGhfYXJndW1lbnQnLCBhcmdzWzFdKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgICAgICAgICAgIHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJyAmJlxuICAgICAgICAgICAgICAgICAgICB0eXBlb2YgYXJnc1sxXSA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgICAgICAgICAgICAgRlNfT1BFUkFUSU9OU19XSVRIX1NSQ19ERVNULmluY2x1ZGVzKGZ1bmN0aW9uTmFtZSlcbiAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZSgnc3JjX2FyZ3VtZW50JywgYXJnc1swXSk7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKCdkZXN0X2FyZ3VtZW50JywgYXJnc1sxXSk7XG4gICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgICAgICAgICAgICB0eXBlb2YgYXJnc1swXSA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgICAgICAgICAgICAgdHlwZW9mIGFyZ3NbMV0gPT09ICdzdHJpbmcnICYmXG4gICAgICAgICAgICAgICAgICAgIEZTX09QRVJBVElPTlNfV0lUSF9PTERfUEFUSF9ORVdfUEFUSC5pbmNsdWRlcyhmdW5jdGlvbk5hbWUpXG4gICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGUoJ29sZF9wYXRoX2FyZ3VtZW50JywgYXJnc1swXSk7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKCduZXdfcGF0aF9hcmd1bWVudCcsIGFyZ3NbMV0pO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChlcnJvciAmJiBvcHRpb25zLnJlY29yZEVycm9yTWVzc2FnZXNBc1NwYW5BdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZSgnZnNfZXJyb3InLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgKSgpO1xuICAgICAgfSxcbiAgICB9O1xuICB9LFxuKTtcblxuY29uc3QgRlNfT1BFUkFUSU9OU19XSVRIX09MRF9QQVRIX05FV19QQVRIID0gWydyZW5hbWUnLCAncmVuYW1lU3luYyddO1xuY29uc3QgRlNfT1BFUkFUSU9OU19XSVRIX1NSQ19ERVNUID0gWydjb3B5RmlsZScsICdjcCcsICdjb3B5RmlsZVN5bmMnLCAnY3BTeW5jJ107XG5jb25zdCBGU19PUEVSQVRJT05TX1dJVEhfRVhJU1RJTkdfUEFUSF9ORVdfUEFUSCA9IFsnbGluaycsICdsaW5rU3luYyddO1xuY29uc3QgRlNfT1BFUkFUSU9OU19XSVRIX1BSRUZJWCA9IFsnbWtkdGVtcCcsICdta2R0ZW1wU3luYyddO1xuY29uc3QgRlNfT1BFUkFUSU9OU19XSVRIX1RBUkdFVF9QQVRIID0gWydzeW1saW5rJywgJ3N5bWxpbmtTeW5jJ107XG5jb25zdCBGU19PUEVSQVRJT05TX1dJVEhfUEFUSF9BUkcgPSBbXG4gICdhY2Nlc3MnLFxuICAnYXBwZW5kRmlsZScsXG4gICdjaG1vZCcsXG4gICdjaG93bicsXG4gICdleGlzdHMnLFxuICAnbWtkaXInLFxuICAnbGNob3duJyxcbiAgJ2xzdGF0JyxcbiAgJ2x1dGltZXMnLFxuICAnb3BlbicsXG4gICdvcGVuZGlyJyxcbiAgJ3JlYWRkaXInLFxuICAncmVhZEZpbGUnLFxuICAncmVhZGxpbmsnLFxuICAncmVhbHBhdGgnLFxuICAncmVhbHBhdGgubmF0aXZlJyxcbiAgJ3JtJyxcbiAgJ3JtZGlyJyxcbiAgJ3N0YXQnLFxuICAndHJ1bmNhdGUnLFxuICAndW5saW5rJyxcbiAgJ3V0aW1lcycsXG4gICd3cml0ZUZpbGUnLFxuICAnYWNjZXNzU3luYycsXG4gICdhcHBlbmRGaWxlU3luYycsXG4gICdjaG1vZFN5bmMnLFxuICAnY2hvd25TeW5jJyxcbiAgJ2V4aXN0c1N5bmMnLFxuICAnbGNob3duU3luYycsXG4gICdsc3RhdFN5bmMnLFxuICAnbHV0aW1lc1N5bmMnLFxuICAnb3BlbmRpclN5bmMnLFxuICAnbWtkaXJTeW5jJyxcbiAgJ29wZW5TeW5jJyxcbiAgJ3JlYWRkaXJTeW5jJyxcbiAgJ3JlYWRGaWxlU3luYycsXG4gICdyZWFkbGlua1N5bmMnLFxuICAncmVhbHBhdGhTeW5jJyxcbiAgJ3JlYWxwYXRoU3luYy5uYXRpdmUnLFxuICAncm1kaXJTeW5jJyxcbiAgJ3JtU3luYycsXG4gICdzdGF0U3luYycsXG4gICd0cnVuY2F0ZVN5bmMnLFxuICAndW5saW5rU3luYycsXG4gICd1dGltZXNTeW5jJyxcbiAgJ3dyaXRlRmlsZVN5bmMnLFxuXTtcblxuZXhwb3J0cy5mc0ludGVncmF0aW9uID0gZnNJbnRlZ3JhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/fs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/http.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/http.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentationHttp = __webpack_require__(/*! @opentelemetry/instrumentation-http */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_01e9057fd2348d73c0b30addefec9bd9/node_modules/@opentelemetry/instrumentation-http/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst debugBuild = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js\");\n\nconst INTEGRATION_NAME = 'Http';\n\nconst INSTRUMENTATION_NAME = '@opentelemetry_sentry-patched/instrumentation-http';\n\nconst instrumentSentryHttp = nodeCore.generateInstrumentOnce(\n  `${INTEGRATION_NAME}.sentry`,\n  options => {\n    return new nodeCore.SentryHttpInstrumentation(options);\n  },\n);\n\nconst instrumentOtelHttp = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, config => {\n  const instrumentation = new instrumentationHttp.HttpInstrumentation({\n    ...config,\n    // This is hard-coded and can never be overridden by the user\n    disableIncomingRequestInstrumentation: true,\n  });\n\n  // We want to update the logger namespace so we can better identify what is happening here\n  try {\n    instrumentation['_diag'] = api.diag.createComponentLogger({\n      namespace: INSTRUMENTATION_NAME,\n    });\n    // @ts-expect-error We are writing a read-only property here...\n    instrumentation.instrumentationName = INSTRUMENTATION_NAME;\n  } catch {\n    // ignore errors here...\n  }\n\n  return instrumentation;\n});\n\n/** Exported only for tests. */\nfunction _shouldUseOtelHttpInstrumentation(\n  options,\n  clientOptions = {},\n) {\n  // If `spans` is passed in, it takes precedence\n  // Else, we by default emit spans, unless `skipOpenTelemetrySetup` is set to `true` or spans are not enabled\n  if (typeof options.spans === 'boolean') {\n    return options.spans;\n  }\n\n  if (clientOptions.skipOpenTelemetrySetup) {\n    return false;\n  }\n\n  // IMPORTANT: We only disable span instrumentation when spans are not enabled _and_ we are on Node 22+,\n  // as otherwise the necessary diagnostics channel is not available yet\n  if (!core.hasSpansEnabled(clientOptions) && nodeCore.NODE_VERSION.major >= 22) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * The http integration instruments Node's internal http and https modules.\n * It creates breadcrumbs and spans for outgoing HTTP requests which will be attached to the currently active span.\n */\nconst httpIntegration = core.defineIntegration((options = {}) => {\n  const dropSpansForIncomingRequestStatusCodes = options.dropSpansForIncomingRequestStatusCodes ?? [\n    [401, 404],\n    // 300 and 304 are possibly valid status codes we do not want to filter\n    [301, 303],\n    [305, 399],\n  ];\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      const clientOptions = (core.getClient()?.getOptions() || {}) ;\n      const useOtelHttpInstrumentation = _shouldUseOtelHttpInstrumentation(options, clientOptions);\n      const disableIncomingRequestSpans = options.disableIncomingRequestSpans ?? !core.hasSpansEnabled(clientOptions);\n\n      // This is Sentry-specific instrumentation for request isolation and breadcrumbs\n      instrumentSentryHttp({\n        ...options,\n        disableIncomingRequestSpans,\n        ignoreSpansForIncomingRequests: options.ignoreIncomingRequests,\n        // If spans are not instrumented, it means the HttpInstrumentation has not been added\n        // In that case, we want to handle trace propagation ourselves\n        propagateTraceInOutgoingRequests: !useOtelHttpInstrumentation,\n      });\n\n      // This is the \"regular\" OTEL instrumentation that emits spans\n      if (useOtelHttpInstrumentation) {\n        const instrumentationConfig = getConfigWithDefaults(options);\n        instrumentOtelHttp(instrumentationConfig);\n      }\n    },\n    processEvent(event) {\n      // Drop transaction if it has a status code that should be ignored\n      if (event.type === 'transaction') {\n        const statusCode = event.contexts?.trace?.data?.['http.response.status_code'];\n        if (typeof statusCode === 'number') {\n          const shouldDrop = shouldFilterStatusCode(statusCode, dropSpansForIncomingRequestStatusCodes);\n          if (shouldDrop) {\n            debugBuild.DEBUG_BUILD && core.debug.log('Dropping transaction due to status code', statusCode);\n            return null;\n          }\n        }\n      }\n\n      return event;\n    },\n  };\n});\n\nfunction getConfigWithDefaults(options = {}) {\n  const instrumentationConfig = {\n    ignoreOutgoingRequestHook: request => {\n      const url = nodeCore.getRequestUrl(request);\n\n      if (!url) {\n        return false;\n      }\n\n      const _ignoreOutgoingRequests = options.ignoreOutgoingRequests;\n      if (_ignoreOutgoingRequests?.(url, request)) {\n        return true;\n      }\n\n      return false;\n    },\n\n    requireParentforOutgoingSpans: false,\n    requestHook: (span, req) => {\n      nodeCore.addOriginToSpan(span, 'auto.http.otel.http');\n\n      options.instrumentation?.requestHook?.(span, req);\n    },\n    responseHook: (span, res) => {\n      options.instrumentation?.responseHook?.(span, res);\n    },\n    applyCustomAttributesOnSpan: (\n      span,\n      request,\n      response,\n    ) => {\n      options.instrumentation?.applyCustomAttributesOnSpan?.(span, request, response);\n    },\n  } ;\n\n  return instrumentationConfig;\n}\n\n/**\n * If the given status code should be filtered for the given list of status codes/ranges.\n */\nfunction shouldFilterStatusCode(statusCode, dropForStatusCodes) {\n  return dropForStatusCodes.some(code => {\n    if (typeof code === 'number') {\n      return code === statusCode;\n    }\n\n    const [min, max] = code;\n    return statusCode >= min && statusCode <= max;\n  });\n}\n\nexports._shouldUseOtelHttpInstrumentation = _shouldUseOtelHttpInstrumentation;\nexports.httpIntegration = httpIntegration;\nexports.instrumentOtelHttp = instrumentOtelHttp;\nexports.instrumentSentryHttp = instrumentSentryHttp;\n//# sourceMappingURL=http.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL2h0dHAuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsWUFBWSxtQkFBTyxDQUFDLGtJQUFvQjtBQUN4Qyw0QkFBNEIsbUJBQU8sQ0FBQyx3TUFBcUM7QUFDekUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQyw2SEFBbUI7O0FBRTlDOztBQUVBOztBQUVBO0FBQ0EsS0FBSyxpQkFBaUI7QUFDdEI7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RDtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFO0FBQ2pFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVELDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEseUNBQXlDO0FBQ3pDLHVCQUF1QjtBQUN2QiwwQkFBMEI7QUFDMUIsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXGh0dHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbmNvbnN0IGFwaSA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L2FwaScpO1xuY29uc3QgaW5zdHJ1bWVudGF0aW9uSHR0cCA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1odHRwJyk7XG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5jb25zdCBub2RlQ29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZS1jb3JlJyk7XG5jb25zdCBkZWJ1Z0J1aWxkID0gcmVxdWlyZSgnLi4vZGVidWctYnVpbGQuanMnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdIdHRwJztcblxuY29uc3QgSU5TVFJVTUVOVEFUSU9OX05BTUUgPSAnQG9wZW50ZWxlbWV0cnlfc2VudHJ5LXBhdGNoZWQvaW5zdHJ1bWVudGF0aW9uLWh0dHAnO1xuXG5jb25zdCBpbnN0cnVtZW50U2VudHJ5SHR0cCA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoXG4gIGAke0lOVEVHUkFUSU9OX05BTUV9LnNlbnRyeWAsXG4gIG9wdGlvbnMgPT4ge1xuICAgIHJldHVybiBuZXcgbm9kZUNvcmUuU2VudHJ5SHR0cEluc3RydW1lbnRhdGlvbihvcHRpb25zKTtcbiAgfSxcbik7XG5cbmNvbnN0IGluc3RydW1lbnRPdGVsSHR0cCA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoSU5URUdSQVRJT05fTkFNRSwgY29uZmlnID0+IHtcbiAgY29uc3QgaW5zdHJ1bWVudGF0aW9uID0gbmV3IGluc3RydW1lbnRhdGlvbkh0dHAuSHR0cEluc3RydW1lbnRhdGlvbih7XG4gICAgLi4uY29uZmlnLFxuICAgIC8vIFRoaXMgaXMgaGFyZC1jb2RlZCBhbmQgY2FuIG5ldmVyIGJlIG92ZXJyaWRkZW4gYnkgdGhlIHVzZXJcbiAgICBkaXNhYmxlSW5jb21pbmdSZXF1ZXN0SW5zdHJ1bWVudGF0aW9uOiB0cnVlLFxuICB9KTtcblxuICAvLyBXZSB3YW50IHRvIHVwZGF0ZSB0aGUgbG9nZ2VyIG5hbWVzcGFjZSBzbyB3ZSBjYW4gYmV0dGVyIGlkZW50aWZ5IHdoYXQgaXMgaGFwcGVuaW5nIGhlcmVcbiAgdHJ5IHtcbiAgICBpbnN0cnVtZW50YXRpb25bJ19kaWFnJ10gPSBhcGkuZGlhZy5jcmVhdGVDb21wb25lbnRMb2dnZXIoe1xuICAgICAgbmFtZXNwYWNlOiBJTlNUUlVNRU5UQVRJT05fTkFNRSxcbiAgICB9KTtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIFdlIGFyZSB3cml0aW5nIGEgcmVhZC1vbmx5IHByb3BlcnR5IGhlcmUuLi5cbiAgICBpbnN0cnVtZW50YXRpb24uaW5zdHJ1bWVudGF0aW9uTmFtZSA9IElOU1RSVU1FTlRBVElPTl9OQU1FO1xuICB9IGNhdGNoIHtcbiAgICAvLyBpZ25vcmUgZXJyb3JzIGhlcmUuLi5cbiAgfVxuXG4gIHJldHVybiBpbnN0cnVtZW50YXRpb247XG59KTtcblxuLyoqIEV4cG9ydGVkIG9ubHkgZm9yIHRlc3RzLiAqL1xuZnVuY3Rpb24gX3Nob3VsZFVzZU90ZWxIdHRwSW5zdHJ1bWVudGF0aW9uKFxuICBvcHRpb25zLFxuICBjbGllbnRPcHRpb25zID0ge30sXG4pIHtcbiAgLy8gSWYgYHNwYW5zYCBpcyBwYXNzZWQgaW4sIGl0IHRha2VzIHByZWNlZGVuY2VcbiAgLy8gRWxzZSwgd2UgYnkgZGVmYXVsdCBlbWl0IHNwYW5zLCB1bmxlc3MgYHNraXBPcGVuVGVsZW1ldHJ5U2V0dXBgIGlzIHNldCB0byBgdHJ1ZWAgb3Igc3BhbnMgYXJlIG5vdCBlbmFibGVkXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5zcGFucyA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMuc3BhbnM7XG4gIH1cblxuICBpZiAoY2xpZW50T3B0aW9ucy5za2lwT3BlblRlbGVtZXRyeVNldHVwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gSU1QT1JUQU5UOiBXZSBvbmx5IGRpc2FibGUgc3BhbiBpbnN0cnVtZW50YXRpb24gd2hlbiBzcGFucyBhcmUgbm90IGVuYWJsZWQgX2FuZF8gd2UgYXJlIG9uIE5vZGUgMjIrLFxuICAvLyBhcyBvdGhlcndpc2UgdGhlIG5lY2Vzc2FyeSBkaWFnbm9zdGljcyBjaGFubmVsIGlzIG5vdCBhdmFpbGFibGUgeWV0XG4gIGlmICghY29yZS5oYXNTcGFuc0VuYWJsZWQoY2xpZW50T3B0aW9ucykgJiYgbm9kZUNvcmUuTk9ERV9WRVJTSU9OLm1ham9yID49IDIyKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8qKlxuICogVGhlIGh0dHAgaW50ZWdyYXRpb24gaW5zdHJ1bWVudHMgTm9kZSdzIGludGVybmFsIGh0dHAgYW5kIGh0dHBzIG1vZHVsZXMuXG4gKiBJdCBjcmVhdGVzIGJyZWFkY3J1bWJzIGFuZCBzcGFucyBmb3Igb3V0Z29pbmcgSFRUUCByZXF1ZXN0cyB3aGljaCB3aWxsIGJlIGF0dGFjaGVkIHRvIHRoZSBjdXJyZW50bHkgYWN0aXZlIHNwYW4uXG4gKi9cbmNvbnN0IGh0dHBJbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oKG9wdGlvbnMgPSB7fSkgPT4ge1xuICBjb25zdCBkcm9wU3BhbnNGb3JJbmNvbWluZ1JlcXVlc3RTdGF0dXNDb2RlcyA9IG9wdGlvbnMuZHJvcFNwYW5zRm9ySW5jb21pbmdSZXF1ZXN0U3RhdHVzQ29kZXMgPz8gW1xuICAgIFs0MDEsIDQwNF0sXG4gICAgLy8gMzAwIGFuZCAzMDQgYXJlIHBvc3NpYmx5IHZhbGlkIHN0YXR1cyBjb2RlcyB3ZSBkbyBub3Qgd2FudCB0byBmaWx0ZXJcbiAgICBbMzAxLCAzMDNdLFxuICAgIFszMDUsIDM5OV0sXG4gIF07XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIGNvbnN0IGNsaWVudE9wdGlvbnMgPSAoY29yZS5nZXRDbGllbnQoKT8uZ2V0T3B0aW9ucygpIHx8IHt9KSA7XG4gICAgICBjb25zdCB1c2VPdGVsSHR0cEluc3RydW1lbnRhdGlvbiA9IF9zaG91bGRVc2VPdGVsSHR0cEluc3RydW1lbnRhdGlvbihvcHRpb25zLCBjbGllbnRPcHRpb25zKTtcbiAgICAgIGNvbnN0IGRpc2FibGVJbmNvbWluZ1JlcXVlc3RTcGFucyA9IG9wdGlvbnMuZGlzYWJsZUluY29taW5nUmVxdWVzdFNwYW5zID8/ICFjb3JlLmhhc1NwYW5zRW5hYmxlZChjbGllbnRPcHRpb25zKTtcblxuICAgICAgLy8gVGhpcyBpcyBTZW50cnktc3BlY2lmaWMgaW5zdHJ1bWVudGF0aW9uIGZvciByZXF1ZXN0IGlzb2xhdGlvbiBhbmQgYnJlYWRjcnVtYnNcbiAgICAgIGluc3RydW1lbnRTZW50cnlIdHRwKHtcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgZGlzYWJsZUluY29taW5nUmVxdWVzdFNwYW5zLFxuICAgICAgICBpZ25vcmVTcGFuc0ZvckluY29taW5nUmVxdWVzdHM6IG9wdGlvbnMuaWdub3JlSW5jb21pbmdSZXF1ZXN0cyxcbiAgICAgICAgLy8gSWYgc3BhbnMgYXJlIG5vdCBpbnN0cnVtZW50ZWQsIGl0IG1lYW5zIHRoZSBIdHRwSW5zdHJ1bWVudGF0aW9uIGhhcyBub3QgYmVlbiBhZGRlZFxuICAgICAgICAvLyBJbiB0aGF0IGNhc2UsIHdlIHdhbnQgdG8gaGFuZGxlIHRyYWNlIHByb3BhZ2F0aW9uIG91cnNlbHZlc1xuICAgICAgICBwcm9wYWdhdGVUcmFjZUluT3V0Z29pbmdSZXF1ZXN0czogIXVzZU90ZWxIdHRwSW5zdHJ1bWVudGF0aW9uLFxuICAgICAgfSk7XG5cbiAgICAgIC8vIFRoaXMgaXMgdGhlIFwicmVndWxhclwiIE9URUwgaW5zdHJ1bWVudGF0aW9uIHRoYXQgZW1pdHMgc3BhbnNcbiAgICAgIGlmICh1c2VPdGVsSHR0cEluc3RydW1lbnRhdGlvbikge1xuICAgICAgICBjb25zdCBpbnN0cnVtZW50YXRpb25Db25maWcgPSBnZXRDb25maWdXaXRoRGVmYXVsdHMob3B0aW9ucyk7XG4gICAgICAgIGluc3RydW1lbnRPdGVsSHR0cChpbnN0cnVtZW50YXRpb25Db25maWcpO1xuICAgICAgfVxuICAgIH0sXG4gICAgcHJvY2Vzc0V2ZW50KGV2ZW50KSB7XG4gICAgICAvLyBEcm9wIHRyYW5zYWN0aW9uIGlmIGl0IGhhcyBhIHN0YXR1cyBjb2RlIHRoYXQgc2hvdWxkIGJlIGlnbm9yZWRcbiAgICAgIGlmIChldmVudC50eXBlID09PSAndHJhbnNhY3Rpb24nKSB7XG4gICAgICAgIGNvbnN0IHN0YXR1c0NvZGUgPSBldmVudC5jb250ZXh0cz8udHJhY2U/LmRhdGE/LlsnaHR0cC5yZXNwb25zZS5zdGF0dXNfY29kZSddO1xuICAgICAgICBpZiAodHlwZW9mIHN0YXR1c0NvZGUgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgY29uc3Qgc2hvdWxkRHJvcCA9IHNob3VsZEZpbHRlclN0YXR1c0NvZGUoc3RhdHVzQ29kZSwgZHJvcFNwYW5zRm9ySW5jb21pbmdSZXF1ZXN0U3RhdHVzQ29kZXMpO1xuICAgICAgICAgIGlmIChzaG91bGREcm9wKSB7XG4gICAgICAgICAgICBkZWJ1Z0J1aWxkLkRFQlVHX0JVSUxEICYmIGNvcmUuZGVidWcubG9nKCdEcm9wcGluZyB0cmFuc2FjdGlvbiBkdWUgdG8gc3RhdHVzIGNvZGUnLCBzdGF0dXNDb2RlKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZXZlbnQ7XG4gICAgfSxcbiAgfTtcbn0pO1xuXG5mdW5jdGlvbiBnZXRDb25maWdXaXRoRGVmYXVsdHMob3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IGluc3RydW1lbnRhdGlvbkNvbmZpZyA9IHtcbiAgICBpZ25vcmVPdXRnb2luZ1JlcXVlc3RIb29rOiByZXF1ZXN0ID0+IHtcbiAgICAgIGNvbnN0IHVybCA9IG5vZGVDb3JlLmdldFJlcXVlc3RVcmwocmVxdWVzdCk7XG5cbiAgICAgIGlmICghdXJsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgX2lnbm9yZU91dGdvaW5nUmVxdWVzdHMgPSBvcHRpb25zLmlnbm9yZU91dGdvaW5nUmVxdWVzdHM7XG4gICAgICBpZiAoX2lnbm9yZU91dGdvaW5nUmVxdWVzdHM/Lih1cmwsIHJlcXVlc3QpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIHJlcXVpcmVQYXJlbnRmb3JPdXRnb2luZ1NwYW5zOiBmYWxzZSxcbiAgICByZXF1ZXN0SG9vazogKHNwYW4sIHJlcSkgPT4ge1xuICAgICAgbm9kZUNvcmUuYWRkT3JpZ2luVG9TcGFuKHNwYW4sICdhdXRvLmh0dHAub3RlbC5odHRwJyk7XG5cbiAgICAgIG9wdGlvbnMuaW5zdHJ1bWVudGF0aW9uPy5yZXF1ZXN0SG9vaz8uKHNwYW4sIHJlcSk7XG4gICAgfSxcbiAgICByZXNwb25zZUhvb2s6IChzcGFuLCByZXMpID0+IHtcbiAgICAgIG9wdGlvbnMuaW5zdHJ1bWVudGF0aW9uPy5yZXNwb25zZUhvb2s/LihzcGFuLCByZXMpO1xuICAgIH0sXG4gICAgYXBwbHlDdXN0b21BdHRyaWJ1dGVzT25TcGFuOiAoXG4gICAgICBzcGFuLFxuICAgICAgcmVxdWVzdCxcbiAgICAgIHJlc3BvbnNlLFxuICAgICkgPT4ge1xuICAgICAgb3B0aW9ucy5pbnN0cnVtZW50YXRpb24/LmFwcGx5Q3VzdG9tQXR0cmlidXRlc09uU3Bhbj8uKHNwYW4sIHJlcXVlc3QsIHJlc3BvbnNlKTtcbiAgICB9LFxuICB9IDtcblxuICByZXR1cm4gaW5zdHJ1bWVudGF0aW9uQ29uZmlnO1xufVxuXG4vKipcbiAqIElmIHRoZSBnaXZlbiBzdGF0dXMgY29kZSBzaG91bGQgYmUgZmlsdGVyZWQgZm9yIHRoZSBnaXZlbiBsaXN0IG9mIHN0YXR1cyBjb2Rlcy9yYW5nZXMuXG4gKi9cbmZ1bmN0aW9uIHNob3VsZEZpbHRlclN0YXR1c0NvZGUoc3RhdHVzQ29kZSwgZHJvcEZvclN0YXR1c0NvZGVzKSB7XG4gIHJldHVybiBkcm9wRm9yU3RhdHVzQ29kZXMuc29tZShjb2RlID0+IHtcbiAgICBpZiAodHlwZW9mIGNvZGUgPT09ICdudW1iZXInKSB7XG4gICAgICByZXR1cm4gY29kZSA9PT0gc3RhdHVzQ29kZTtcbiAgICB9XG5cbiAgICBjb25zdCBbbWluLCBtYXhdID0gY29kZTtcbiAgICByZXR1cm4gc3RhdHVzQ29kZSA+PSBtaW4gJiYgc3RhdHVzQ29kZSA8PSBtYXg7XG4gIH0pO1xufVxuXG5leHBvcnRzLl9zaG91bGRVc2VPdGVsSHR0cEluc3RydW1lbnRhdGlvbiA9IF9zaG91bGRVc2VPdGVsSHR0cEluc3RydW1lbnRhdGlvbjtcbmV4cG9ydHMuaHR0cEludGVncmF0aW9uID0gaHR0cEludGVncmF0aW9uO1xuZXhwb3J0cy5pbnN0cnVtZW50T3RlbEh0dHAgPSBpbnN0cnVtZW50T3RlbEh0dHA7XG5leHBvcnRzLmluc3RydW1lbnRTZW50cnlIdHRwID0gaW5zdHJ1bWVudFNlbnRyeUh0dHA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/http.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/node-fetch.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/node-fetch.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationUndici = __webpack_require__(/*! @opentelemetry/instrumentation-undici */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_491a3ec047b926585b5472f6873e8aac/node_modules/@opentelemetry/instrumentation-undici/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'NodeFetch';\n\nconst instrumentOtelNodeFetch = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  instrumentationUndici.UndiciInstrumentation,\n  (options) => {\n    return getConfigWithDefaults(options);\n  },\n);\n\nconst instrumentSentryNodeFetch = nodeCore.generateInstrumentOnce(\n  `${INTEGRATION_NAME}.sentry`,\n  nodeCore.SentryNodeFetchInstrumentation,\n  (options) => {\n    return options;\n  },\n);\n\nconst _nativeNodeFetchIntegration = ((options = {}) => {\n  return {\n    name: 'NodeFetch',\n    setupOnce() {\n      const instrumentSpans = _shouldInstrumentSpans(options, core.getClient()?.getOptions());\n\n      // This is the \"regular\" OTEL instrumentation that emits spans\n      if (instrumentSpans) {\n        instrumentOtelNodeFetch(options);\n      }\n\n      // This is the Sentry-specific instrumentation that creates breadcrumbs & propagates traces\n      // This must be registered after the OTEL one, to ensure that the core trace propagation logic takes presedence\n      // Otherwise, the sentry-trace header may be set multiple times\n      instrumentSentryNodeFetch(options);\n    },\n  };\n}) ;\n\nconst nativeNodeFetchIntegration = core.defineIntegration(_nativeNodeFetchIntegration);\n\n// Matching the behavior of the base instrumentation\nfunction getAbsoluteUrl(origin, path = '/') {\n  const url = `${origin}`;\n\n  if (url.endsWith('/') && path.startsWith('/')) {\n    return `${url}${path.slice(1)}`;\n  }\n\n  if (!url.endsWith('/') && !path.startsWith('/')) {\n    return `${url}/${path.slice(1)}`;\n  }\n\n  return `${url}${path}`;\n}\n\nfunction _shouldInstrumentSpans(options, clientOptions = {}) {\n  // If `spans` is passed in, it takes precedence\n  // Else, we by default emit spans, unless `skipOpenTelemetrySetup` is set to `true` or spans are not enabled\n  return typeof options.spans === 'boolean'\n    ? options.spans\n    : !clientOptions.skipOpenTelemetrySetup && core.hasSpansEnabled(clientOptions);\n}\n\nfunction getConfigWithDefaults(options = {}) {\n  const instrumentationConfig = {\n    requireParentforSpans: false,\n    ignoreRequestHook: request => {\n      const url = getAbsoluteUrl(request.origin, request.path);\n      const _ignoreOutgoingRequests = options.ignoreOutgoingRequests;\n      const shouldIgnore = _ignoreOutgoingRequests && url && _ignoreOutgoingRequests(url);\n\n      return !!shouldIgnore;\n    },\n    startSpanHook: () => {\n      return {\n        [core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.node_fetch',\n      };\n    },\n  } ;\n\n  return instrumentationConfig;\n}\n\nexports.nativeNodeFetchIntegration = nativeNodeFetchIntegration;\n//# sourceMappingURL=node-fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL25vZGUtZmV0Y2guanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsOEJBQThCLG1CQUFPLENBQUMsNE1BQXVDO0FBQzdFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7O0FBRTVDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQSxLQUFLLGlCQUFpQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEsa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLE9BQU87O0FBRXhCO0FBQ0EsY0FBYyxJQUFJLEVBQUUsY0FBYztBQUNsQzs7QUFFQTtBQUNBLGNBQWMsSUFBSSxHQUFHLGNBQWM7QUFDbkM7O0FBRUEsWUFBWSxJQUFJLEVBQUUsS0FBSztBQUN2Qjs7QUFFQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQSxrQ0FBa0M7QUFDbEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBzZW50cnkrbm9kZUAxMC4xNi4wXFxub2RlX21vZHVsZXNcXEBzZW50cnlcXG5vZGVcXGJ1aWxkXFxjanNcXGludGVncmF0aW9uc1xcbm9kZS1mZXRjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgaW5zdHJ1bWVudGF0aW9uVW5kaWNpID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLXVuZGljaScpO1xuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3Qgbm9kZUNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUtY29yZScpO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ05vZGVGZXRjaCc7XG5cbmNvbnN0IGluc3RydW1lbnRPdGVsTm9kZUZldGNoID0gbm9kZUNvcmUuZ2VuZXJhdGVJbnN0cnVtZW50T25jZShcbiAgSU5URUdSQVRJT05fTkFNRSxcbiAgaW5zdHJ1bWVudGF0aW9uVW5kaWNpLlVuZGljaUluc3RydW1lbnRhdGlvbixcbiAgKG9wdGlvbnMpID0+IHtcbiAgICByZXR1cm4gZ2V0Q29uZmlnV2l0aERlZmF1bHRzKG9wdGlvbnMpO1xuICB9LFxuKTtcblxuY29uc3QgaW5zdHJ1bWVudFNlbnRyeU5vZGVGZXRjaCA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoXG4gIGAke0lOVEVHUkFUSU9OX05BTUV9LnNlbnRyeWAsXG4gIG5vZGVDb3JlLlNlbnRyeU5vZGVGZXRjaEluc3RydW1lbnRhdGlvbixcbiAgKG9wdGlvbnMpID0+IHtcbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfSxcbik7XG5cbmNvbnN0IF9uYXRpdmVOb2RlRmV0Y2hJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogJ05vZGVGZXRjaCcsXG4gICAgc2V0dXBPbmNlKCkge1xuICAgICAgY29uc3QgaW5zdHJ1bWVudFNwYW5zID0gX3Nob3VsZEluc3RydW1lbnRTcGFucyhvcHRpb25zLCBjb3JlLmdldENsaWVudCgpPy5nZXRPcHRpb25zKCkpO1xuXG4gICAgICAvLyBUaGlzIGlzIHRoZSBcInJlZ3VsYXJcIiBPVEVMIGluc3RydW1lbnRhdGlvbiB0aGF0IGVtaXRzIHNwYW5zXG4gICAgICBpZiAoaW5zdHJ1bWVudFNwYW5zKSB7XG4gICAgICAgIGluc3RydW1lbnRPdGVsTm9kZUZldGNoKG9wdGlvbnMpO1xuICAgICAgfVxuXG4gICAgICAvLyBUaGlzIGlzIHRoZSBTZW50cnktc3BlY2lmaWMgaW5zdHJ1bWVudGF0aW9uIHRoYXQgY3JlYXRlcyBicmVhZGNydW1icyAmIHByb3BhZ2F0ZXMgdHJhY2VzXG4gICAgICAvLyBUaGlzIG11c3QgYmUgcmVnaXN0ZXJlZCBhZnRlciB0aGUgT1RFTCBvbmUsIHRvIGVuc3VyZSB0aGF0IHRoZSBjb3JlIHRyYWNlIHByb3BhZ2F0aW9uIGxvZ2ljIHRha2VzIHByZXNlZGVuY2VcbiAgICAgIC8vIE90aGVyd2lzZSwgdGhlIHNlbnRyeS10cmFjZSBoZWFkZXIgbWF5IGJlIHNldCBtdWx0aXBsZSB0aW1lc1xuICAgICAgaW5zdHJ1bWVudFNlbnRyeU5vZGVGZXRjaChvcHRpb25zKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG5jb25zdCBuYXRpdmVOb2RlRmV0Y2hJbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oX25hdGl2ZU5vZGVGZXRjaEludGVncmF0aW9uKTtcblxuLy8gTWF0Y2hpbmcgdGhlIGJlaGF2aW9yIG9mIHRoZSBiYXNlIGluc3RydW1lbnRhdGlvblxuZnVuY3Rpb24gZ2V0QWJzb2x1dGVVcmwob3JpZ2luLCBwYXRoID0gJy8nKSB7XG4gIGNvbnN0IHVybCA9IGAke29yaWdpbn1gO1xuXG4gIGlmICh1cmwuZW5kc1dpdGgoJy8nKSAmJiBwYXRoLnN0YXJ0c1dpdGgoJy8nKSkge1xuICAgIHJldHVybiBgJHt1cmx9JHtwYXRoLnNsaWNlKDEpfWA7XG4gIH1cblxuICBpZiAoIXVybC5lbmRzV2l0aCgnLycpICYmICFwYXRoLnN0YXJ0c1dpdGgoJy8nKSkge1xuICAgIHJldHVybiBgJHt1cmx9LyR7cGF0aC5zbGljZSgxKX1gO1xuICB9XG5cbiAgcmV0dXJuIGAke3VybH0ke3BhdGh9YDtcbn1cblxuZnVuY3Rpb24gX3Nob3VsZEluc3RydW1lbnRTcGFucyhvcHRpb25zLCBjbGllbnRPcHRpb25zID0ge30pIHtcbiAgLy8gSWYgYHNwYW5zYCBpcyBwYXNzZWQgaW4sIGl0IHRha2VzIHByZWNlZGVuY2VcbiAgLy8gRWxzZSwgd2UgYnkgZGVmYXVsdCBlbWl0IHNwYW5zLCB1bmxlc3MgYHNraXBPcGVuVGVsZW1ldHJ5U2V0dXBgIGlzIHNldCB0byBgdHJ1ZWAgb3Igc3BhbnMgYXJlIG5vdCBlbmFibGVkXG4gIHJldHVybiB0eXBlb2Ygb3B0aW9ucy5zcGFucyA9PT0gJ2Jvb2xlYW4nXG4gICAgPyBvcHRpb25zLnNwYW5zXG4gICAgOiAhY2xpZW50T3B0aW9ucy5za2lwT3BlblRlbGVtZXRyeVNldHVwICYmIGNvcmUuaGFzU3BhbnNFbmFibGVkKGNsaWVudE9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiBnZXRDb25maWdXaXRoRGVmYXVsdHMob3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IGluc3RydW1lbnRhdGlvbkNvbmZpZyA9IHtcbiAgICByZXF1aXJlUGFyZW50Zm9yU3BhbnM6IGZhbHNlLFxuICAgIGlnbm9yZVJlcXVlc3RIb29rOiByZXF1ZXN0ID0+IHtcbiAgICAgIGNvbnN0IHVybCA9IGdldEFic29sdXRlVXJsKHJlcXVlc3Qub3JpZ2luLCByZXF1ZXN0LnBhdGgpO1xuICAgICAgY29uc3QgX2lnbm9yZU91dGdvaW5nUmVxdWVzdHMgPSBvcHRpb25zLmlnbm9yZU91dGdvaW5nUmVxdWVzdHM7XG4gICAgICBjb25zdCBzaG91bGRJZ25vcmUgPSBfaWdub3JlT3V0Z29pbmdSZXF1ZXN0cyAmJiB1cmwgJiYgX2lnbm9yZU91dGdvaW5nUmVxdWVzdHModXJsKTtcblxuICAgICAgcmV0dXJuICEhc2hvdWxkSWdub3JlO1xuICAgIH0sXG4gICAgc3RhcnRTcGFuSG9vazogKCkgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgW2NvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU5dOiAnYXV0by5odHRwLm90ZWwubm9kZV9mZXRjaCcsXG4gICAgICB9O1xuICAgIH0sXG4gIH0gO1xuXG4gIHJldHVybiBpbnN0cnVtZW50YXRpb25Db25maWc7XG59XG5cbmV4cG9ydHMubmF0aXZlTm9kZUZldGNoSW50ZWdyYXRpb24gPSBuYXRpdmVOb2RlRmV0Y2hJbnRlZ3JhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vZGUtZmV0Y2guanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/node-fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/amqplib.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/amqplib.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationAmqplib = __webpack_require__(/*! @opentelemetry/instrumentation-amqplib */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_eb0a9cdf52297ab0e4b6f3c83f6823a7/node_modules/@opentelemetry/instrumentation-amqplib/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Amqplib';\n\nconst config = {\n  consumeEndHook: (span) => {\n    nodeCore.addOriginToSpan(span, 'auto.amqplib.otel.consumer');\n  },\n  publishHook: (span) => {\n    nodeCore.addOriginToSpan(span, 'auto.amqplib.otel.publisher');\n  },\n};\n\nconst instrumentAmqplib = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, () => new instrumentationAmqplib.AmqplibInstrumentation(config));\n\nconst _amqplibIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentAmqplib();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [amqplib](https://www.npmjs.com/package/amqplib) library.\n *\n * For more information, see the [`amqplibIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/amqplib/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.amqplibIntegration()],\n * });\n * ```\n */\nconst amqplibIntegration = core.defineIntegration(_amqplibIntegration);\n\nexports.amqplibIntegration = amqplibIntegration;\nexports.instrumentAmqplib = instrumentAmqplib;\n//# sourceMappingURL=amqplib.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvYW1xcGxpYi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSwrQkFBK0IsbUJBQU8sQ0FBQyw4TUFBd0M7QUFDL0UsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjs7QUFFNUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUEsMEJBQTBCO0FBQzFCLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxhbXFwbGliLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBpbnN0cnVtZW50YXRpb25BbXFwbGliID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWFtcXBsaWInKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdBbXFwbGliJztcblxuY29uc3QgY29uZmlnID0ge1xuICBjb25zdW1lRW5kSG9vazogKHNwYW4pID0+IHtcbiAgICBub2RlQ29yZS5hZGRPcmlnaW5Ub1NwYW4oc3BhbiwgJ2F1dG8uYW1xcGxpYi5vdGVsLmNvbnN1bWVyJyk7XG4gIH0sXG4gIHB1Ymxpc2hIb29rOiAoc3BhbikgPT4ge1xuICAgIG5vZGVDb3JlLmFkZE9yaWdpblRvU3BhbihzcGFuLCAnYXV0by5hbXFwbGliLm90ZWwucHVibGlzaGVyJyk7XG4gIH0sXG59O1xuXG5jb25zdCBpbnN0cnVtZW50QW1xcGxpYiA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoSU5URUdSQVRJT05fTkFNRSwgKCkgPT4gbmV3IGluc3RydW1lbnRhdGlvbkFtcXBsaWIuQW1xcGxpYkluc3RydW1lbnRhdGlvbihjb25maWcpKTtcblxuY29uc3QgX2FtcXBsaWJJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBpbnN0cnVtZW50QW1xcGxpYigpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbi8qKlxuICogQWRkcyBTZW50cnkgdHJhY2luZyBpbnN0cnVtZW50YXRpb24gZm9yIHRoZSBbYW1xcGxpYl0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvYW1xcGxpYikgbGlicmFyeS5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBbYGFtcXBsaWJJbnRlZ3JhdGlvbmAgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvbm9kZS9jb25maWd1cmF0aW9uL2ludGVncmF0aW9ucy9hbXFwbGliLykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGNvbnN0IFNlbnRyeSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZScpO1xuICpcbiAqIFNlbnRyeS5pbml0KHtcbiAqICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkuYW1xcGxpYkludGVncmF0aW9uKCldLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuY29uc3QgYW1xcGxpYkludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfYW1xcGxpYkludGVncmF0aW9uKTtcblxuZXhwb3J0cy5hbXFwbGliSW50ZWdyYXRpb24gPSBhbXFwbGliSW50ZWdyYXRpb247XG5leHBvcnRzLmluc3RydW1lbnRBbXFwbGliID0gaW5zdHJ1bWVudEFtcXBsaWI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbXFwbGliLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/amqplib.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/anthropic-ai/index.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/anthropic-ai/index.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst instrumentation = __webpack_require__(/*! ./instrumentation.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/anthropic-ai/instrumentation.js\");\n\nconst instrumentAnthropicAi = nodeCore.generateInstrumentOnce(\n  core.ANTHROPIC_AI_INTEGRATION_NAME,\n  options => new instrumentation.SentryAnthropicAiInstrumentation(options),\n);\n\nconst _anthropicAIIntegration = ((options = {}) => {\n  return {\n    name: core.ANTHROPIC_AI_INTEGRATION_NAME,\n    options,\n    setupOnce() {\n      instrumentAnthropicAi(options);\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the Anthropic AI SDK.\n *\n * This integration is enabled by default.\n *\n * When configured, this integration automatically instruments Anthropic AI SDK client instances\n * to capture telemetry data following OpenTelemetry Semantic Conventions for Generative AI.\n *\n * @example\n * ```javascript\n * import * as Sentry from '@sentry/node';\n *\n * Sentry.init({\n *   integrations: [Sentry.anthropicAIIntegration()],\n * });\n * ```\n *\n * ## Options\n *\n * - `recordInputs`: Whether to record prompt messages (default: respects `sendDefaultPii` client option)\n * - `recordOutputs`: Whether to record response text (default: respects `sendDefaultPii` client option)\n *\n * ### Default Behavior\n *\n * By default, the integration will:\n * - Record inputs and outputs ONLY if `sendDefaultPii` is set to `true` in your Sentry client options\n * - Otherwise, inputs and outputs are NOT recorded unless explicitly enabled\n *\n * @example\n * ```javascript\n * // Record inputs and outputs when sendDefaultPii is false\n * Sentry.init({\n *   integrations: [\n *     Sentry.anthropicAIIntegration({\n *       recordInputs: true,\n *       recordOutputs: true\n *     })\n *   ],\n * });\n *\n * // Never record inputs/outputs regardless of sendDefaultPii\n * Sentry.init({\n *   sendDefaultPii: true,\n *   integrations: [\n *     Sentry.anthropicAIIntegration({\n *       recordInputs: false,\n *       recordOutputs: false\n *     })\n *   ],\n * });\n * ```\n *\n */\nconst anthropicAIIntegration = core.defineIntegration(_anthropicAIIntegration);\n\nexports.anthropicAIIntegration = anthropicAIIntegration;\nexports.instrumentAnthropicAi = instrumentAnthropicAi;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvYW50aHJvcGljLWFpL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7QUFDNUMsd0JBQXdCLG1CQUFPLENBQUMsc0tBQXNCOztBQUV0RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4QkFBOEI7QUFDOUIsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGFudGhyb3BpYy1haVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcbmNvbnN0IGluc3RydW1lbnRhdGlvbiA9IHJlcXVpcmUoJy4vaW5zdHJ1bWVudGF0aW9uLmpzJyk7XG5cbmNvbnN0IGluc3RydW1lbnRBbnRocm9waWNBaSA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoXG4gIGNvcmUuQU5USFJPUElDX0FJX0lOVEVHUkFUSU9OX05BTUUsXG4gIG9wdGlvbnMgPT4gbmV3IGluc3RydW1lbnRhdGlvbi5TZW50cnlBbnRocm9waWNBaUluc3RydW1lbnRhdGlvbihvcHRpb25zKSxcbik7XG5cbmNvbnN0IF9hbnRocm9waWNBSUludGVncmF0aW9uID0gKChvcHRpb25zID0ge30pID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBjb3JlLkFOVEhST1BJQ19BSV9JTlRFR1JBVElPTl9OQU1FLFxuICAgIG9wdGlvbnMsXG4gICAgc2V0dXBPbmNlKCkge1xuICAgICAgaW5zdHJ1bWVudEFudGhyb3BpY0FpKG9wdGlvbnMpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbi8qKlxuICogQWRkcyBTZW50cnkgdHJhY2luZyBpbnN0cnVtZW50YXRpb24gZm9yIHRoZSBBbnRocm9waWMgQUkgU0RLLlxuICpcbiAqIFRoaXMgaW50ZWdyYXRpb24gaXMgZW5hYmxlZCBieSBkZWZhdWx0LlxuICpcbiAqIFdoZW4gY29uZmlndXJlZCwgdGhpcyBpbnRlZ3JhdGlvbiBhdXRvbWF0aWNhbGx5IGluc3RydW1lbnRzIEFudGhyb3BpYyBBSSBTREsgY2xpZW50IGluc3RhbmNlc1xuICogdG8gY2FwdHVyZSB0ZWxlbWV0cnkgZGF0YSBmb2xsb3dpbmcgT3BlblRlbGVtZXRyeSBTZW1hbnRpYyBDb252ZW50aW9ucyBmb3IgR2VuZXJhdGl2ZSBBSS5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgamF2YXNjcmlwdFxuICogaW1wb3J0ICogYXMgU2VudHJ5IGZyb20gJ0BzZW50cnkvbm9kZSc7XG4gKlxuICogU2VudHJ5LmluaXQoe1xuICogICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkuYW50aHJvcGljQUlJbnRlZ3JhdGlvbigpXSxcbiAqIH0pO1xuICogYGBgXG4gKlxuICogIyMgT3B0aW9uc1xuICpcbiAqIC0gYHJlY29yZElucHV0c2A6IFdoZXRoZXIgdG8gcmVjb3JkIHByb21wdCBtZXNzYWdlcyAoZGVmYXVsdDogcmVzcGVjdHMgYHNlbmREZWZhdWx0UGlpYCBjbGllbnQgb3B0aW9uKVxuICogLSBgcmVjb3JkT3V0cHV0c2A6IFdoZXRoZXIgdG8gcmVjb3JkIHJlc3BvbnNlIHRleHQgKGRlZmF1bHQ6IHJlc3BlY3RzIGBzZW5kRGVmYXVsdFBpaWAgY2xpZW50IG9wdGlvbilcbiAqXG4gKiAjIyMgRGVmYXVsdCBCZWhhdmlvclxuICpcbiAqIEJ5IGRlZmF1bHQsIHRoZSBpbnRlZ3JhdGlvbiB3aWxsOlxuICogLSBSZWNvcmQgaW5wdXRzIGFuZCBvdXRwdXRzIE9OTFkgaWYgYHNlbmREZWZhdWx0UGlpYCBpcyBzZXQgdG8gYHRydWVgIGluIHlvdXIgU2VudHJ5IGNsaWVudCBvcHRpb25zXG4gKiAtIE90aGVyd2lzZSwgaW5wdXRzIGFuZCBvdXRwdXRzIGFyZSBOT1QgcmVjb3JkZWQgdW5sZXNzIGV4cGxpY2l0bHkgZW5hYmxlZFxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiAvLyBSZWNvcmQgaW5wdXRzIGFuZCBvdXRwdXRzIHdoZW4gc2VuZERlZmF1bHRQaWkgaXMgZmFsc2VcbiAqIFNlbnRyeS5pbml0KHtcbiAqICAgaW50ZWdyYXRpb25zOiBbXG4gKiAgICAgU2VudHJ5LmFudGhyb3BpY0FJSW50ZWdyYXRpb24oe1xuICogICAgICAgcmVjb3JkSW5wdXRzOiB0cnVlLFxuICogICAgICAgcmVjb3JkT3V0cHV0czogdHJ1ZVxuICogICAgIH0pXG4gKiAgIF0sXG4gKiB9KTtcbiAqXG4gKiAvLyBOZXZlciByZWNvcmQgaW5wdXRzL291dHB1dHMgcmVnYXJkbGVzcyBvZiBzZW5kRGVmYXVsdFBpaVxuICogU2VudHJ5LmluaXQoe1xuICogICBzZW5kRGVmYXVsdFBpaTogdHJ1ZSxcbiAqICAgaW50ZWdyYXRpb25zOiBbXG4gKiAgICAgU2VudHJ5LmFudGhyb3BpY0FJSW50ZWdyYXRpb24oe1xuICogICAgICAgcmVjb3JkSW5wdXRzOiBmYWxzZSxcbiAqICAgICAgIHJlY29yZE91dHB1dHM6IGZhbHNlXG4gKiAgICAgfSlcbiAqICAgXSxcbiAqIH0pO1xuICogYGBgXG4gKlxuICovXG5jb25zdCBhbnRocm9waWNBSUludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfYW50aHJvcGljQUlJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydHMuYW50aHJvcGljQUlJbnRlZ3JhdGlvbiA9IGFudGhyb3BpY0FJSW50ZWdyYXRpb247XG5leHBvcnRzLmluc3RydW1lbnRBbnRocm9waWNBaSA9IGluc3RydW1lbnRBbnRocm9waWNBaTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/anthropic-ai/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/anthropic-ai/instrumentation.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/anthropic-ai/instrumentation.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\n\nconst supportedVersions = ['>=0.19.2 <1.0.0'];\n\n/**\n * Sentry Anthropic AI instrumentation using OpenTelemetry.\n */\nclass SentryAnthropicAiInstrumentation extends instrumentation.InstrumentationBase {\n   constructor(config = {}) {\n    super('@sentry/instrumentation-anthropic-ai', core.SDK_VERSION, config);\n  }\n\n  /**\n   * Initializes the instrumentation by defining the modules to be patched.\n   */\n   init() {\n    const module = new instrumentation.InstrumentationNodeModuleDefinition(\n      '@anthropic-ai/sdk',\n      supportedVersions,\n      this._patch.bind(this),\n    );\n    return module;\n  }\n\n  /**\n   * Core patch logic applying instrumentation to the Anthropic AI client constructor.\n   */\n   _patch(exports) {\n    const Original = exports.Anthropic;\n\n    const config = this.getConfig();\n\n    const WrappedAnthropic = function ( ...args) {\n      const instance = Reflect.construct(Original, args);\n      const client = core.getClient();\n      const defaultPii = Boolean(client?.getOptions().sendDefaultPii);\n\n      const recordInputs = config.recordInputs ?? defaultPii;\n      const recordOutputs = config.recordOutputs ?? defaultPii;\n\n      return core.instrumentAnthropicAiClient(instance , {\n        recordInputs,\n        recordOutputs,\n      });\n    } ;\n\n    // Preserve static and prototype chains\n    Object.setPrototypeOf(WrappedAnthropic, Original);\n    Object.setPrototypeOf(WrappedAnthropic.prototype, Original.prototype);\n\n    for (const key of Object.getOwnPropertyNames(Original)) {\n      if (!['length', 'name', 'prototype'].includes(key)) {\n        const descriptor = Object.getOwnPropertyDescriptor(Original, key);\n        if (descriptor) {\n          Object.defineProperty(WrappedAnthropic, key, descriptor);\n        }\n      }\n    }\n\n    // Constructor replacement - handle read-only properties\n    // The Anthropic property might have only a getter, so use defineProperty\n    try {\n      exports.Anthropic = WrappedAnthropic;\n    } catch (error) {\n      // If direct assignment fails, override the property descriptor\n      Object.defineProperty(exports, 'Anthropic', {\n        value: WrappedAnthropic,\n        writable: true,\n        configurable: true,\n        enumerable: true,\n      });\n    }\n\n    // Wrap the default export if it points to the original constructor\n    // Constructor replacement - handle read-only properties\n    // The Anthropic property might have only a getter, so use defineProperty\n    if (exports.default === Original) {\n      try {\n        exports.default = WrappedAnthropic;\n      } catch (error) {\n        // If direct assignment fails, override the property descriptor\n        Object.defineProperty(exports, 'default', {\n          value: WrappedAnthropic,\n          writable: true,\n          configurable: true,\n          enumerable: true,\n        });\n      }\n    }\n    return exports;\n  }\n}\n\nexports.SentryAnthropicAiInstrumentation = SentryAnthropicAiInstrumentation;\n//# sourceMappingURL=instrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvYW50aHJvcGljLWFpL2luc3RydW1lbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxDQUFDLG9EQUFvRCx5Q0FBeUMsMENBQTBDLDhDQUE4QyxvREFBb0QscURBQXFELGlCQUFpQjs7QUFFaFQsd0JBQXdCLG1CQUFPLENBQUMsOExBQWdDO0FBQ2hFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYzs7QUFFbkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3Q0FBd0M7QUFDeEMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBzZW50cnkrbm9kZUAxMC4xNi4wXFxub2RlX21vZHVsZXNcXEBzZW50cnlcXG5vZGVcXGJ1aWxkXFxjanNcXGludGVncmF0aW9uc1xcdHJhY2luZ1xcYW50aHJvcGljLWFpXFxpbnN0cnVtZW50YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiO2dsb2JhbFRoaXNbXCJfc2VudHJ5UmV3cml0ZXNUdW5uZWxQYXRoXCJdID0gdW5kZWZpbmVkO2dsb2JhbFRoaXNbXCJTRU5UUllfUkVMRUFTRVwiXSA9IHVuZGVmaW5lZDtnbG9iYWxUaGlzW1wiX3NlbnRyeUJhc2VQYXRoXCJdID0gdW5kZWZpbmVkO2dsb2JhbFRoaXNbXCJfc2VudHJ5TmV4dEpzVmVyc2lvblwiXSA9IFwiMTUuNS40XCI7Z2xvYmFsVGhpc1tcIl9zZW50cnlSZXdyaXRlRnJhbWVzRGlzdERpclwiXSA9IFwiLm5leHRcIjtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgaW5zdHJ1bWVudGF0aW9uID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uJyk7XG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5cbmNvbnN0IHN1cHBvcnRlZFZlcnNpb25zID0gWyc+PTAuMTkuMiA8MS4wLjAnXTtcblxuLyoqXG4gKiBTZW50cnkgQW50aHJvcGljIEFJIGluc3RydW1lbnRhdGlvbiB1c2luZyBPcGVuVGVsZW1ldHJ5LlxuICovXG5jbGFzcyBTZW50cnlBbnRocm9waWNBaUluc3RydW1lbnRhdGlvbiBleHRlbmRzIGluc3RydW1lbnRhdGlvbi5JbnN0cnVtZW50YXRpb25CYXNlIHtcbiAgIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgc3VwZXIoJ0BzZW50cnkvaW5zdHJ1bWVudGF0aW9uLWFudGhyb3BpYy1haScsIGNvcmUuU0RLX1ZFUlNJT04sIGNvbmZpZyk7XG4gIH1cblxuICAvKipcbiAgICogSW5pdGlhbGl6ZXMgdGhlIGluc3RydW1lbnRhdGlvbiBieSBkZWZpbmluZyB0aGUgbW9kdWxlcyB0byBiZSBwYXRjaGVkLlxuICAgKi9cbiAgIGluaXQoKSB7XG4gICAgY29uc3QgbW9kdWxlID0gbmV3IGluc3RydW1lbnRhdGlvbi5JbnN0cnVtZW50YXRpb25Ob2RlTW9kdWxlRGVmaW5pdGlvbihcbiAgICAgICdAYW50aHJvcGljLWFpL3NkaycsXG4gICAgICBzdXBwb3J0ZWRWZXJzaW9ucyxcbiAgICAgIHRoaXMuX3BhdGNoLmJpbmQodGhpcyksXG4gICAgKTtcbiAgICByZXR1cm4gbW9kdWxlO1xuICB9XG5cbiAgLyoqXG4gICAqIENvcmUgcGF0Y2ggbG9naWMgYXBwbHlpbmcgaW5zdHJ1bWVudGF0aW9uIHRvIHRoZSBBbnRocm9waWMgQUkgY2xpZW50IGNvbnN0cnVjdG9yLlxuICAgKi9cbiAgIF9wYXRjaChleHBvcnRzKSB7XG4gICAgY29uc3QgT3JpZ2luYWwgPSBleHBvcnRzLkFudGhyb3BpYztcblxuICAgIGNvbnN0IGNvbmZpZyA9IHRoaXMuZ2V0Q29uZmlnKCk7XG5cbiAgICBjb25zdCBXcmFwcGVkQW50aHJvcGljID0gZnVuY3Rpb24gKCAuLi5hcmdzKSB7XG4gICAgICBjb25zdCBpbnN0YW5jZSA9IFJlZmxlY3QuY29uc3RydWN0KE9yaWdpbmFsLCBhcmdzKTtcbiAgICAgIGNvbnN0IGNsaWVudCA9IGNvcmUuZ2V0Q2xpZW50KCk7XG4gICAgICBjb25zdCBkZWZhdWx0UGlpID0gQm9vbGVhbihjbGllbnQ/LmdldE9wdGlvbnMoKS5zZW5kRGVmYXVsdFBpaSk7XG5cbiAgICAgIGNvbnN0IHJlY29yZElucHV0cyA9IGNvbmZpZy5yZWNvcmRJbnB1dHMgPz8gZGVmYXVsdFBpaTtcbiAgICAgIGNvbnN0IHJlY29yZE91dHB1dHMgPSBjb25maWcucmVjb3JkT3V0cHV0cyA/PyBkZWZhdWx0UGlpO1xuXG4gICAgICByZXR1cm4gY29yZS5pbnN0cnVtZW50QW50aHJvcGljQWlDbGllbnQoaW5zdGFuY2UgLCB7XG4gICAgICAgIHJlY29yZElucHV0cyxcbiAgICAgICAgcmVjb3JkT3V0cHV0cyxcbiAgICAgIH0pO1xuICAgIH0gO1xuXG4gICAgLy8gUHJlc2VydmUgc3RhdGljIGFuZCBwcm90b3R5cGUgY2hhaW5zXG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKFdyYXBwZWRBbnRocm9waWMsIE9yaWdpbmFsKTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoV3JhcHBlZEFudGhyb3BpYy5wcm90b3R5cGUsIE9yaWdpbmFsLnByb3RvdHlwZSk7XG5cbiAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPcmlnaW5hbCkpIHtcbiAgICAgIGlmICghWydsZW5ndGgnLCAnbmFtZScsICdwcm90b3R5cGUnXS5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgIGNvbnN0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE9yaWdpbmFsLCBrZXkpO1xuICAgICAgICBpZiAoZGVzY3JpcHRvcikge1xuICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcmFwcGVkQW50aHJvcGljLCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQ29uc3RydWN0b3IgcmVwbGFjZW1lbnQgLSBoYW5kbGUgcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAvLyBUaGUgQW50aHJvcGljIHByb3BlcnR5IG1pZ2h0IGhhdmUgb25seSBhIGdldHRlciwgc28gdXNlIGRlZmluZVByb3BlcnR5XG4gICAgdHJ5IHtcbiAgICAgIGV4cG9ydHMuQW50aHJvcGljID0gV3JhcHBlZEFudGhyb3BpYztcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gSWYgZGlyZWN0IGFzc2lnbm1lbnQgZmFpbHMsIG92ZXJyaWRlIHRoZSBwcm9wZXJ0eSBkZXNjcmlwdG9yXG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ0FudGhyb3BpYycsIHtcbiAgICAgICAgdmFsdWU6IFdyYXBwZWRBbnRocm9waWMsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBXcmFwIHRoZSBkZWZhdWx0IGV4cG9ydCBpZiBpdCBwb2ludHMgdG8gdGhlIG9yaWdpbmFsIGNvbnN0cnVjdG9yXG4gICAgLy8gQ29uc3RydWN0b3IgcmVwbGFjZW1lbnQgLSBoYW5kbGUgcmVhZC1vbmx5IHByb3BlcnRpZXNcbiAgICAvLyBUaGUgQW50aHJvcGljIHByb3BlcnR5IG1pZ2h0IGhhdmUgb25seSBhIGdldHRlciwgc28gdXNlIGRlZmluZVByb3BlcnR5XG4gICAgaWYgKGV4cG9ydHMuZGVmYXVsdCA9PT0gT3JpZ2luYWwpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGV4cG9ydHMuZGVmYXVsdCA9IFdyYXBwZWRBbnRocm9waWM7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAvLyBJZiBkaXJlY3QgYXNzaWdubWVudCBmYWlscywgb3ZlcnJpZGUgdGhlIHByb3BlcnR5IGRlc2NyaXB0b3JcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdkZWZhdWx0Jywge1xuICAgICAgICAgIHZhbHVlOiBXcmFwcGVkQW50aHJvcGljLFxuICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGV4cG9ydHM7XG4gIH1cbn1cblxuZXhwb3J0cy5TZW50cnlBbnRocm9waWNBaUluc3RydW1lbnRhdGlvbiA9IFNlbnRyeUFudGhyb3BpY0FpSW5zdHJ1bWVudGF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdHJ1bWVudGF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/anthropic-ai/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/connect.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/connect.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationConnect = __webpack_require__(/*! @opentelemetry/instrumentation-connect */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_346cd71c6ac95e300fd89ff83447a73a/node_modules/@opentelemetry/instrumentation-connect/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Connect';\n\nconst instrumentConnect = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, () => new instrumentationConnect.ConnectInstrumentation());\n\nconst _connectIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentConnect();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for [Connect](https://github.com/senchalabs/connect/).\n *\n * If you also want to capture errors, you need to call `setupConnectErrorHandler(app)` after you initialize your connect app.\n *\n * For more information, see the [connect documentation](https://docs.sentry.io/platforms/javascript/guides/connect/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *   integrations: [Sentry.connectIntegration()],\n * })\n * ```\n */\nconst connectIntegration = core.defineIntegration(_connectIntegration);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction connectErrorMiddleware(err, req, res, next) {\n  core.captureException(err, {\n    mechanism: {\n      handled: false,\n      type: 'auto.middleware.connect',\n    },\n  });\n  next(err);\n}\n\n/**\n * Add a Connect middleware to capture errors to Sentry.\n *\n * @param app The Connect app to attach the error handler to\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n * const connect = require(\"connect\");\n *\n * const app = connect();\n *\n * Sentry.setupConnectErrorHandler(app);\n *\n * // Add you connect routes here\n *\n * app.listen(3000);\n * ```\n */\nconst setupConnectErrorHandler = (app) => {\n  app.use(connectErrorMiddleware);\n\n  // Sadly, ConnectInstrumentation has no requestHook, so we need to add the attributes here\n  // We register this hook in this method, because if we register it in the integration `setup`,\n  // it would always run even for users that are not even using connect\n  const client = core.getClient();\n  if (client) {\n    client.on('spanStart', span => {\n      addConnectSpanAttributes(span);\n    });\n  }\n\n  nodeCore.ensureIsWrapped(app.use, 'connect');\n};\n\nfunction addConnectSpanAttributes(span) {\n  const attributes = core.spanToJSON(span).data;\n\n  // this is one of: middleware, request_handler\n  const type = attributes['connect.type'];\n\n  // If this is already set, or we have no connect span, no need to process again...\n  if (attributes[core.SEMANTIC_ATTRIBUTE_SENTRY_OP] || !type) {\n    return;\n  }\n\n  span.setAttributes({\n    [core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.connect',\n    [core.SEMANTIC_ATTRIBUTE_SENTRY_OP]: `${type}.connect`,\n  });\n\n  // Also update the name, we don't need the \"middleware - \" prefix\n  const name = attributes['connect.name'];\n  if (typeof name === 'string') {\n    span.updateName(name);\n  }\n}\n\nexports.connectIntegration = connectIntegration;\nexports.instrumentConnect = instrumentConnect;\nexports.setupConnectErrorHandler = setupConnectErrorHandler;\n//# sourceMappingURL=connect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvY29ubmVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSwrQkFBK0IsbUJBQU8sQ0FBQyw4TUFBd0M7QUFDL0UsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjs7QUFFNUM7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0QyxLQUFLO0FBQ2pELEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBCQUEwQjtBQUMxQix5QkFBeUI7QUFDekIsZ0NBQWdDO0FBQ2hDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGNvbm5lY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbmNvbnN0IGluc3RydW1lbnRhdGlvbkNvbm5lY3QgPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tY29ubmVjdCcpO1xuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3Qgbm9kZUNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUtY29yZScpO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ0Nvbm5lY3QnO1xuXG5jb25zdCBpbnN0cnVtZW50Q29ubmVjdCA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoSU5URUdSQVRJT05fTkFNRSwgKCkgPT4gbmV3IGluc3RydW1lbnRhdGlvbkNvbm5lY3QuQ29ubmVjdEluc3RydW1lbnRhdGlvbigpKTtcblxuY29uc3QgX2Nvbm5lY3RJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBpbnN0cnVtZW50Q29ubmVjdCgpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbi8qKlxuICogQWRkcyBTZW50cnkgdHJhY2luZyBpbnN0cnVtZW50YXRpb24gZm9yIFtDb25uZWN0XShodHRwczovL2dpdGh1Yi5jb20vc2VuY2hhbGFicy9jb25uZWN0LykuXG4gKlxuICogSWYgeW91IGFsc28gd2FudCB0byBjYXB0dXJlIGVycm9ycywgeW91IG5lZWQgdG8gY2FsbCBgc2V0dXBDb25uZWN0RXJyb3JIYW5kbGVyKGFwcClgIGFmdGVyIHlvdSBpbml0aWFsaXplIHlvdXIgY29ubmVjdCBhcHAuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgW2Nvbm5lY3QgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvY29ubmVjdC8pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgIGludGVncmF0aW9uczogW1NlbnRyeS5jb25uZWN0SW50ZWdyYXRpb24oKV0sXG4gKiB9KVxuICogYGBgXG4gKi9cbmNvbnN0IGNvbm5lY3RJbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oX2Nvbm5lY3RJbnRlZ3JhdGlvbik7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBjb25uZWN0RXJyb3JNaWRkbGV3YXJlKGVyciwgcmVxLCByZXMsIG5leHQpIHtcbiAgY29yZS5jYXB0dXJlRXhjZXB0aW9uKGVyciwge1xuICAgIG1lY2hhbmlzbToge1xuICAgICAgaGFuZGxlZDogZmFsc2UsXG4gICAgICB0eXBlOiAnYXV0by5taWRkbGV3YXJlLmNvbm5lY3QnLFxuICAgIH0sXG4gIH0pO1xuICBuZXh0KGVycik7XG59XG5cbi8qKlxuICogQWRkIGEgQ29ubmVjdCBtaWRkbGV3YXJlIHRvIGNhcHR1cmUgZXJyb3JzIHRvIFNlbnRyeS5cbiAqXG4gKiBAcGFyYW0gYXBwIFRoZSBDb25uZWN0IGFwcCB0byBhdHRhY2ggdGhlIGVycm9yIGhhbmRsZXIgdG9cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgamF2YXNjcmlwdFxuICogY29uc3QgU2VudHJ5ID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlJyk7XG4gKiBjb25zdCBjb25uZWN0ID0gcmVxdWlyZShcImNvbm5lY3RcIik7XG4gKlxuICogY29uc3QgYXBwID0gY29ubmVjdCgpO1xuICpcbiAqIFNlbnRyeS5zZXR1cENvbm5lY3RFcnJvckhhbmRsZXIoYXBwKTtcbiAqXG4gKiAvLyBBZGQgeW91IGNvbm5lY3Qgcm91dGVzIGhlcmVcbiAqXG4gKiBhcHAubGlzdGVuKDMwMDApO1xuICogYGBgXG4gKi9cbmNvbnN0IHNldHVwQ29ubmVjdEVycm9ySGFuZGxlciA9IChhcHApID0+IHtcbiAgYXBwLnVzZShjb25uZWN0RXJyb3JNaWRkbGV3YXJlKTtcblxuICAvLyBTYWRseSwgQ29ubmVjdEluc3RydW1lbnRhdGlvbiBoYXMgbm8gcmVxdWVzdEhvb2ssIHNvIHdlIG5lZWQgdG8gYWRkIHRoZSBhdHRyaWJ1dGVzIGhlcmVcbiAgLy8gV2UgcmVnaXN0ZXIgdGhpcyBob29rIGluIHRoaXMgbWV0aG9kLCBiZWNhdXNlIGlmIHdlIHJlZ2lzdGVyIGl0IGluIHRoZSBpbnRlZ3JhdGlvbiBgc2V0dXBgLFxuICAvLyBpdCB3b3VsZCBhbHdheXMgcnVuIGV2ZW4gZm9yIHVzZXJzIHRoYXQgYXJlIG5vdCBldmVuIHVzaW5nIGNvbm5lY3RcbiAgY29uc3QgY2xpZW50ID0gY29yZS5nZXRDbGllbnQoKTtcbiAgaWYgKGNsaWVudCkge1xuICAgIGNsaWVudC5vbignc3BhblN0YXJ0Jywgc3BhbiA9PiB7XG4gICAgICBhZGRDb25uZWN0U3BhbkF0dHJpYnV0ZXMoc3Bhbik7XG4gICAgfSk7XG4gIH1cblxuICBub2RlQ29yZS5lbnN1cmVJc1dyYXBwZWQoYXBwLnVzZSwgJ2Nvbm5lY3QnKTtcbn07XG5cbmZ1bmN0aW9uIGFkZENvbm5lY3RTcGFuQXR0cmlidXRlcyhzcGFuKSB7XG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSBjb3JlLnNwYW5Ub0pTT04oc3BhbikuZGF0YTtcblxuICAvLyB0aGlzIGlzIG9uZSBvZjogbWlkZGxld2FyZSwgcmVxdWVzdF9oYW5kbGVyXG4gIGNvbnN0IHR5cGUgPSBhdHRyaWJ1dGVzWydjb25uZWN0LnR5cGUnXTtcblxuICAvLyBJZiB0aGlzIGlzIGFscmVhZHkgc2V0LCBvciB3ZSBoYXZlIG5vIGNvbm5lY3Qgc3Bhbiwgbm8gbmVlZCB0byBwcm9jZXNzIGFnYWluLi4uXG4gIGlmIChhdHRyaWJ1dGVzW2NvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUF0gfHwgIXR5cGUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBzcGFuLnNldEF0dHJpYnV0ZXMoe1xuICAgIFtjb3JlLlNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOXTogJ2F1dG8uaHR0cC5vdGVsLmNvbm5lY3QnLFxuICAgIFtjb3JlLlNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1BdOiBgJHt0eXBlfS5jb25uZWN0YCxcbiAgfSk7XG5cbiAgLy8gQWxzbyB1cGRhdGUgdGhlIG5hbWUsIHdlIGRvbid0IG5lZWQgdGhlIFwibWlkZGxld2FyZSAtIFwiIHByZWZpeFxuICBjb25zdCBuYW1lID0gYXR0cmlidXRlc1snY29ubmVjdC5uYW1lJ107XG4gIGlmICh0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICBzcGFuLnVwZGF0ZU5hbWUobmFtZSk7XG4gIH1cbn1cblxuZXhwb3J0cy5jb25uZWN0SW50ZWdyYXRpb24gPSBjb25uZWN0SW50ZWdyYXRpb247XG5leHBvcnRzLmluc3RydW1lbnRDb25uZWN0ID0gaW5zdHJ1bWVudENvbm5lY3Q7XG5leHBvcnRzLnNldHVwQ29ubmVjdEVycm9ySGFuZGxlciA9IHNldHVwQ29ubmVjdEVycm9ySGFuZGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbm5lY3QuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/connect.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/dataloader.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/dataloader.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationDataloader = __webpack_require__(/*! @opentelemetry/instrumentation-dataloader */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_a1d50be89cae426345059bb93acae617/node_modules/@opentelemetry/instrumentation-dataloader/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Dataloader';\n\nconst instrumentDataloader = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new instrumentationDataloader.DataloaderInstrumentation({\n      requireParentSpan: true,\n    }),\n);\n\nconst _dataloaderIntegration = (() => {\n  let instrumentationWrappedCallback;\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      const instrumentation = instrumentDataloader();\n      instrumentationWrappedCallback = nodeCore.instrumentWhenWrapped(instrumentation);\n    },\n\n    setup(client) {\n      // This is called either immediately or when the instrumentation is wrapped\n      instrumentationWrappedCallback?.(() => {\n        client.on('spanStart', span => {\n          const spanJSON = core.spanToJSON(span);\n          if (spanJSON.description?.startsWith('dataloader')) {\n            span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, 'auto.db.otel.dataloader');\n          }\n\n          // These are all possible dataloader span descriptions\n          // Still checking for the future versions\n          // in case they add support for `clear` and `prime`\n          if (\n            spanJSON.description === 'dataloader.load' ||\n            spanJSON.description === 'dataloader.loadMany' ||\n            spanJSON.description === 'dataloader.batch'\n          ) {\n            span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_OP, 'cache.get');\n            // TODO: We can try adding `key` to the `data` attribute upstream.\n            // Or alternatively, we can add `requestHook` to the dataloader instrumentation.\n          }\n        });\n      });\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [dataloader](https://www.npmjs.com/package/dataloader) library.\n *\n * For more information, see the [`dataloaderIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/dataloader/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.dataloaderIntegration()],\n * });\n * ```\n */\nconst dataloaderIntegration = core.defineIntegration(_dataloaderIntegration);\n\nexports.dataloaderIntegration = dataloaderIntegration;\nexports.instrumentDataloader = instrumentDataloader;\n//# sourceMappingURL=dataloader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvZGF0YWxvYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSxrQ0FBa0MsbUJBQU8sQ0FBQyxvTkFBMkM7QUFDckYsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjs7QUFFNUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBLDZCQUE2QjtBQUM3Qiw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBzZW50cnkrbm9kZUAxMC4xNi4wXFxub2RlX21vZHVsZXNcXEBzZW50cnlcXG5vZGVcXGJ1aWxkXFxjanNcXGludGVncmF0aW9uc1xcdHJhY2luZ1xcZGF0YWxvYWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgaW5zdHJ1bWVudGF0aW9uRGF0YWxvYWRlciA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1kYXRhbG9hZGVyJyk7XG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5jb25zdCBub2RlQ29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZS1jb3JlJyk7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnRGF0YWxvYWRlcic7XG5cbmNvbnN0IGluc3RydW1lbnREYXRhbG9hZGVyID0gbm9kZUNvcmUuZ2VuZXJhdGVJbnN0cnVtZW50T25jZShcbiAgSU5URUdSQVRJT05fTkFNRSxcbiAgKCkgPT5cbiAgICBuZXcgaW5zdHJ1bWVudGF0aW9uRGF0YWxvYWRlci5EYXRhbG9hZGVySW5zdHJ1bWVudGF0aW9uKHtcbiAgICAgIHJlcXVpcmVQYXJlbnRTcGFuOiB0cnVlLFxuICAgIH0pLFxuKTtcblxuY29uc3QgX2RhdGFsb2FkZXJJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIGxldCBpbnN0cnVtZW50YXRpb25XcmFwcGVkQ2FsbGJhY2s7XG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIGNvbnN0IGluc3RydW1lbnRhdGlvbiA9IGluc3RydW1lbnREYXRhbG9hZGVyKCk7XG4gICAgICBpbnN0cnVtZW50YXRpb25XcmFwcGVkQ2FsbGJhY2sgPSBub2RlQ29yZS5pbnN0cnVtZW50V2hlbldyYXBwZWQoaW5zdHJ1bWVudGF0aW9uKTtcbiAgICB9LFxuXG4gICAgc2V0dXAoY2xpZW50KSB7XG4gICAgICAvLyBUaGlzIGlzIGNhbGxlZCBlaXRoZXIgaW1tZWRpYXRlbHkgb3Igd2hlbiB0aGUgaW5zdHJ1bWVudGF0aW9uIGlzIHdyYXBwZWRcbiAgICAgIGluc3RydW1lbnRhdGlvbldyYXBwZWRDYWxsYmFjaz8uKCgpID0+IHtcbiAgICAgICAgY2xpZW50Lm9uKCdzcGFuU3RhcnQnLCBzcGFuID0+IHtcbiAgICAgICAgICBjb25zdCBzcGFuSlNPTiA9IGNvcmUuc3BhblRvSlNPTihzcGFuKTtcbiAgICAgICAgICBpZiAoc3BhbkpTT04uZGVzY3JpcHRpb24/LnN0YXJ0c1dpdGgoJ2RhdGFsb2FkZXInKSkge1xuICAgICAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGUoY29yZS5TRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTiwgJ2F1dG8uZGIub3RlbC5kYXRhbG9hZGVyJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gVGhlc2UgYXJlIGFsbCBwb3NzaWJsZSBkYXRhbG9hZGVyIHNwYW4gZGVzY3JpcHRpb25zXG4gICAgICAgICAgLy8gU3RpbGwgY2hlY2tpbmcgZm9yIHRoZSBmdXR1cmUgdmVyc2lvbnNcbiAgICAgICAgICAvLyBpbiBjYXNlIHRoZXkgYWRkIHN1cHBvcnQgZm9yIGBjbGVhcmAgYW5kIGBwcmltZWBcbiAgICAgICAgICBpZiAoXG4gICAgICAgICAgICBzcGFuSlNPTi5kZXNjcmlwdGlvbiA9PT0gJ2RhdGFsb2FkZXIubG9hZCcgfHxcbiAgICAgICAgICAgIHNwYW5KU09OLmRlc2NyaXB0aW9uID09PSAnZGF0YWxvYWRlci5sb2FkTWFueScgfHxcbiAgICAgICAgICAgIHNwYW5KU09OLmRlc2NyaXB0aW9uID09PSAnZGF0YWxvYWRlci5iYXRjaCdcbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKGNvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUCwgJ2NhY2hlLmdldCcpO1xuICAgICAgICAgICAgLy8gVE9ETzogV2UgY2FuIHRyeSBhZGRpbmcgYGtleWAgdG8gdGhlIGBkYXRhYCBhdHRyaWJ1dGUgdXBzdHJlYW0uXG4gICAgICAgICAgICAvLyBPciBhbHRlcm5hdGl2ZWx5LCB3ZSBjYW4gYWRkIGByZXF1ZXN0SG9va2AgdG8gdGhlIGRhdGFsb2FkZXIgaW5zdHJ1bWVudGF0aW9uLlxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZHMgU2VudHJ5IHRyYWNpbmcgaW5zdHJ1bWVudGF0aW9uIGZvciB0aGUgW2RhdGFsb2FkZXJdKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2RhdGFsb2FkZXIpIGxpYnJhcnkuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgW2BkYXRhbG9hZGVySW50ZWdyYXRpb25gIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vZG9jcy5zZW50cnkuaW8vcGxhdGZvcm1zL2phdmFzY3JpcHQvZ3VpZGVzL25vZGUvY29uZmlndXJhdGlvbi9pbnRlZ3JhdGlvbnMvZGF0YWxvYWRlci8pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgaW50ZWdyYXRpb25zOiBbU2VudHJ5LmRhdGFsb2FkZXJJbnRlZ3JhdGlvbigpXSxcbiAqIH0pO1xuICogYGBgXG4gKi9cbmNvbnN0IGRhdGFsb2FkZXJJbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oX2RhdGFsb2FkZXJJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydHMuZGF0YWxvYWRlckludGVncmF0aW9uID0gZGF0YWxvYWRlckludGVncmF0aW9uO1xuZXhwb3J0cy5pbnN0cnVtZW50RGF0YWxvYWRlciA9IGluc3RydW1lbnREYXRhbG9hZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YWxvYWRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/dataloader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/express.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/express.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationExpress = __webpack_require__(/*! @opentelemetry/instrumentation-express */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_ed8888b75091c8a0136eb2ebbee5fa2a/node_modules/@opentelemetry/instrumentation-express/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst debugBuild = __webpack_require__(/*! ../../debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js\");\n\nconst INTEGRATION_NAME = 'Express';\n\nfunction requestHook(span) {\n  nodeCore.addOriginToSpan(span, 'auto.http.otel.express');\n\n  const attributes = core.spanToJSON(span).data;\n  // this is one of: middleware, request_handler, router\n  const type = attributes['express.type'];\n\n  if (type) {\n    span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_OP, `${type}.express`);\n  }\n\n  // Also update the name, we don't need to \"middleware - \" prefix\n  const name = attributes['express.name'];\n  if (typeof name === 'string') {\n    span.updateName(name);\n  }\n}\n\nfunction spanNameHook(info, defaultName) {\n  if (core.getIsolationScope() === core.getDefaultIsolationScope()) {\n    debugBuild.DEBUG_BUILD && core.debug.warn('Isolation scope is still default isolation scope - skipping setting transactionName');\n    return defaultName;\n  }\n  if (info.layerType === 'request_handler') {\n    // type cast b/c Otel unfortunately types info.request as any :(\n    const req = info.request ;\n    const method = req.method ? req.method.toUpperCase() : 'GET';\n    core.getIsolationScope().setTransactionName(`${method} ${info.route}`);\n  }\n  return defaultName;\n}\n\nconst instrumentExpress = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new instrumentationExpress.ExpressInstrumentation({\n      requestHook: span => requestHook(span),\n      spanNameHook: (info, defaultName) => spanNameHook(info, defaultName),\n    }),\n);\n\nconst _expressIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentExpress();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for [Express](https://expressjs.com/).\n *\n * If you also want to capture errors, you need to call `setupExpressErrorHandler(app)` after you set up your Express server.\n *\n * For more information, see the [express documentation](https://docs.sentry.io/platforms/javascript/guides/express/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *   integrations: [Sentry.expressIntegration()],\n * })\n * ```\n */\nconst expressIntegration = core.defineIntegration(_expressIntegration);\n\n/**\n * An Express-compatible error handler.\n */\nfunction expressErrorHandler(options) {\n  return function sentryErrorMiddleware(\n    error,\n    request,\n    res,\n    next,\n  ) {\n    const normalizedRequest = core.httpRequestToRequestData(request);\n    // Ensure we use the express-enhanced request here, instead of the plain HTTP one\n    // When an error happens, the `expressRequestHandler` middleware does not run, so we set it here too\n    core.getIsolationScope().setSDKProcessingMetadata({ normalizedRequest });\n\n    const shouldHandleError = options?.shouldHandleError || defaultShouldHandleError;\n\n    if (shouldHandleError(error)) {\n      const eventId = core.captureException(error, { mechanism: { type: 'auto.middleware.express', handled: false } });\n      (res ).sentry = eventId;\n    }\n\n    next(error);\n  };\n}\n\nfunction expressRequestHandler() {\n  return function sentryRequestMiddleware(\n    request,\n    _res,\n    next,\n  ) {\n    const normalizedRequest = core.httpRequestToRequestData(request);\n    // Ensure we use the express-enhanced request here, instead of the plain HTTP one\n    core.getIsolationScope().setSDKProcessingMetadata({ normalizedRequest });\n\n    next();\n  };\n}\n\n/**\n * Add an Express error handler to capture errors to Sentry.\n *\n * The error handler must be before any other middleware and after all controllers.\n *\n * @param app The Express instances\n * @param options {ExpressHandlerOptions} Configuration options for the handler\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n * const express = require(\"express\");\n *\n * const app = express();\n *\n * // Add your routes, etc.\n *\n * // Add this after all routes,\n * // but before any and other error-handling middlewares are defined\n * Sentry.setupExpressErrorHandler(app);\n *\n * app.listen(3000);\n * ```\n */\nfunction setupExpressErrorHandler(\n  app,\n  options,\n) {\n  app.use(expressRequestHandler());\n  app.use(expressErrorHandler(options));\n  nodeCore.ensureIsWrapped(app.use, 'express');\n}\n\nfunction getStatusCodeFromResponse(error) {\n  const statusCode = error.status || error.statusCode || error.status_code || error.output?.statusCode;\n  return statusCode ? parseInt(statusCode , 10) : 500;\n}\n\n/** Returns true if response code is internal server error */\nfunction defaultShouldHandleError(error) {\n  const status = getStatusCodeFromResponse(error);\n  return status >= 500;\n}\n\nexports.expressErrorHandler = expressErrorHandler;\nexports.expressIntegration = expressIntegration;\nexports.instrumentExpress = instrumentExpress;\nexports.setupExpressErrorHandler = setupExpressErrorHandler;\n//# sourceMappingURL=express.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/express.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/fastify-otel/index.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/fastify-otel/index.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst dc = __webpack_require__(/*! node:diagnostics_channel */ \"node:diagnostics_channel\");\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst core = __webpack_require__(/*! @opentelemetry/core */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+core@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/core/build/esm/index.js\");\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semanticConventions = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst minimatch = __webpack_require__(/*! minimatch */ \"(rsc)/./node_modules/.pnpm/minimatch@9.0.5/node_modules/minimatch/dist/commonjs/index.js\");\n\n/*\nVendored in and modified from @fastify/otel version 0.8.0\nhttps://github.com/fastify/otel/releases/tag/v0.8.0\n\nTried not to modify the original code too much keeping it as a JavaScript CJS module to make it easier to update when required\n\nModifications include:\n- Removed reading of package.json to get the version and package name\n\nMIT License\n\nCopyright (c) 2024 Fastify\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n\n// SENTRY VENDOR NOTE\n// Instead of using the package.json file, we hard code the package name and version here.\nconst PACKAGE_NAME = '@fastify/otel';\nconst PACKAGE_VERSION = '0.8.0';\n\n// Constants\nconst SUPPORTED_VERSIONS = '>=4.0.0 <6';\nconst FASTIFY_HOOKS = [\n  'onRequest',\n  'preParsing',\n  'preValidation',\n  'preHandler',\n  'preSerialization',\n  'onSend',\n  'onResponse',\n  'onError',\n];\nconst ATTRIBUTE_NAMES = {\n  HOOK_NAME: 'hook.name',\n  FASTIFY_TYPE: 'fastify.type',\n  HOOK_CALLBACK_NAME: 'hook.callback.name',\n  ROOT: 'fastify.root',\n};\nconst HOOK_TYPES = {\n  ROUTE: 'route-hook',\n  INSTANCE: 'hook',\n  HANDLER: 'request-handler',\n};\nconst ANONYMOUS_FUNCTION_NAME = 'anonymous';\n\n// Symbols\nconst kInstrumentation = Symbol('fastify otel instance');\nconst kRequestSpan = Symbol('fastify otel request spans');\nconst kRequestContext = Symbol('fastify otel request context');\nconst kAddHookOriginal = Symbol('fastify otel addhook original');\nconst kSetNotFoundOriginal = Symbol('fastify otel setnotfound original');\nconst kIgnorePaths = Symbol('fastify otel ignore path');\n\nclass FastifyOtelInstrumentation extends instrumentation.InstrumentationBase {\n  constructor(config) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n    this.servername = config?.servername ?? process.env.OTEL_SERVICE_NAME ?? 'fastify';\n    this[kIgnorePaths] = null;\n    this._logger = api.diag.createComponentLogger({ namespace: PACKAGE_NAME });\n\n    if (config?.ignorePaths != null || process.env.OTEL_FASTIFY_IGNORE_PATHS != null) {\n      const ignorePaths = config?.ignorePaths ?? process.env.OTEL_FASTIFY_IGNORE_PATHS;\n\n      if ((typeof ignorePaths !== 'string' || ignorePaths.length === 0) && typeof ignorePaths !== 'function') {\n        throw new TypeError('ignorePaths must be a string or a function');\n      }\n\n      const globMatcher = minimatch.minimatch;\n\n      this[kIgnorePaths] = routeOptions => {\n        if (typeof ignorePaths === 'function') {\n          return ignorePaths(routeOptions);\n        } else {\n          return globMatcher(routeOptions.url, ignorePaths);\n        }\n      };\n    }\n  }\n\n  enable() {\n    if (this._handleInitialization === undefined && this.getConfig().registerOnInitialization) {\n      const FastifyInstrumentationPlugin = this.plugin();\n      this._handleInitialization = message => {\n        message.fastify.register(FastifyInstrumentationPlugin);\n      };\n      dc.default.subscribe('fastify.initialization', this._handleInitialization);\n    }\n    return super.enable();\n  }\n\n  disable() {\n    if (this._handleInitialization) {\n      dc.default.unsubscribe('fastify.initialization', this._handleInitialization);\n      this._handleInitialization = undefined;\n    }\n    return super.disable();\n  }\n\n  // We do not do patching in this instrumentation\n  init() {\n    return [];\n  }\n\n  plugin() {\n    const instrumentation = this;\n\n    FastifyInstrumentationPlugin[Symbol.for('skip-override')] = true;\n    FastifyInstrumentationPlugin[Symbol.for('fastify.display-name')] = '@fastify/otel';\n    FastifyInstrumentationPlugin[Symbol.for('plugin-meta')] = {\n      fastify: SUPPORTED_VERSIONS,\n      name: '@fastify/otel',\n    };\n\n    return FastifyInstrumentationPlugin;\n\n    function FastifyInstrumentationPlugin(instance, opts, done) {\n      instance.decorate(kInstrumentation, instrumentation);\n      // addHook and notfoundHandler are essentially inherited from the prototype\n      // what is important is to bound it to the right instance\n      instance.decorate(kAddHookOriginal, instance.addHook);\n      instance.decorate(kSetNotFoundOriginal, instance.setNotFoundHandler);\n      instance.decorateRequest('opentelemetry', function openetelemetry() {\n        const ctx = this[kRequestContext];\n        const span = this[kRequestSpan];\n        return {\n          span,\n          tracer: instrumentation.tracer,\n          context: ctx,\n          inject: (carrier, setter) => {\n            return api.propagation.inject(ctx, carrier, setter);\n          },\n          extract: (carrier, getter) => {\n            return api.propagation.extract(ctx, carrier, getter);\n          },\n        };\n      });\n      instance.decorateRequest(kRequestSpan, null);\n      instance.decorateRequest(kRequestContext, null);\n\n      instance.addHook('onRoute', function (routeOptions) {\n        if (instrumentation[kIgnorePaths]?.(routeOptions) === true) {\n          instrumentation._logger.debug(\n            `Ignoring route instrumentation ${routeOptions.method} ${routeOptions.url} because it matches the ignore path`,\n          );\n          return;\n        }\n\n        for (const hook of FASTIFY_HOOKS) {\n          if (routeOptions[hook] != null) {\n            const handlerLike = routeOptions[hook];\n\n            if (typeof handlerLike === 'function') {\n              routeOptions[hook] = handlerWrapper(handlerLike, {\n                [semanticConventions.ATTR_SERVICE_NAME]: instance[kInstrumentation].servername,\n                [ATTRIBUTE_NAMES.HOOK_NAME]: `${this.pluginName} - route -> ${hook}`,\n                [ATTRIBUTE_NAMES.FASTIFY_TYPE]: HOOK_TYPES.ROUTE,\n                [semanticConventions.ATTR_HTTP_ROUTE]: routeOptions.url,\n                [ATTRIBUTE_NAMES.HOOK_CALLBACK_NAME]:\n                  handlerLike.name?.length > 0 ? handlerLike.name : ANONYMOUS_FUNCTION_NAME /* c8 ignore next */,\n              });\n            } else if (Array.isArray(handlerLike)) {\n              const wrappedHandlers = [];\n\n              for (const handler of handlerLike) {\n                wrappedHandlers.push(\n                  handlerWrapper(handler, {\n                    [semanticConventions.ATTR_SERVICE_NAME]: instance[kInstrumentation].servername,\n                    [ATTRIBUTE_NAMES.HOOK_NAME]: `${this.pluginName} - route -> ${hook}`,\n                    [ATTRIBUTE_NAMES.FASTIFY_TYPE]: HOOK_TYPES.ROUTE,\n                    [semanticConventions.ATTR_HTTP_ROUTE]: routeOptions.url,\n                    [ATTRIBUTE_NAMES.HOOK_CALLBACK_NAME]:\n                      handler.name?.length > 0 ? handler.name : ANONYMOUS_FUNCTION_NAME,\n                  }),\n                );\n              }\n\n              routeOptions[hook] = wrappedHandlers;\n            }\n          }\n        }\n\n        // We always want to add the onSend hook to the route to be executed last\n        if (routeOptions.onSend != null) {\n          routeOptions.onSend = Array.isArray(routeOptions.onSend)\n            ? [...routeOptions.onSend, onSendHook]\n            : [routeOptions.onSend, onSendHook];\n        } else {\n          routeOptions.onSend = onSendHook;\n        }\n\n        // We always want to add the onError hook to the route to be executed last\n        if (routeOptions.onError != null) {\n          routeOptions.onError = Array.isArray(routeOptions.onError)\n            ? [...routeOptions.onError, onErrorHook]\n            : [routeOptions.onError, onErrorHook];\n        } else {\n          routeOptions.onError = onErrorHook;\n        }\n\n        routeOptions.handler = handlerWrapper(routeOptions.handler, {\n          [semanticConventions.ATTR_SERVICE_NAME]: instance[kInstrumentation].servername,\n          [ATTRIBUTE_NAMES.HOOK_NAME]: `${this.pluginName} - route-handler`,\n          [ATTRIBUTE_NAMES.FASTIFY_TYPE]: HOOK_TYPES.HANDLER,\n          [semanticConventions.ATTR_HTTP_ROUTE]: routeOptions.url,\n          [ATTRIBUTE_NAMES.HOOK_CALLBACK_NAME]:\n            routeOptions.handler.name.length > 0 ? routeOptions.handler.name : ANONYMOUS_FUNCTION_NAME,\n        });\n      });\n\n      instance.addHook('onRequest', function (request, _reply, hookDone) {\n        if (this[kInstrumentation].isEnabled() === false) {\n          return hookDone();\n        } else if (\n          this[kInstrumentation][kIgnorePaths]?.({\n            url: request.url,\n            method: request.method,\n          }) === true\n        ) {\n          this[kInstrumentation]._logger.debug(\n            `Ignoring request ${request.method} ${request.url} because it matches the ignore path`,\n          );\n          return hookDone();\n        }\n\n        let ctx = api.context.active();\n\n        if (api.trace.getSpan(ctx) == null) {\n          ctx = api.propagation.extract(ctx, request.headers);\n        }\n\n        const rpcMetadata = core.getRPCMetadata(ctx);\n\n        if (request.routeOptions.url != null && rpcMetadata?.type === core.RPCType.HTTP) {\n          rpcMetadata.route = request.routeOptions.url;\n        }\n\n        /** @type {import('@opentelemetry/api').Span} */\n        const span = this[kInstrumentation].tracer.startSpan(\n          'request',\n          {\n            attributes: {\n              [semanticConventions.ATTR_SERVICE_NAME]: instance[kInstrumentation].servername,\n              [ATTRIBUTE_NAMES.ROOT]: '@fastify/otel',\n              [semanticConventions.ATTR_HTTP_ROUTE]: request.url,\n              [semanticConventions.ATTR_HTTP_REQUEST_METHOD]: request.method,\n            },\n          },\n          ctx,\n        );\n\n        request[kRequestContext] = api.trace.setSpan(ctx, span);\n        request[kRequestSpan] = span;\n\n        api.context.with(request[kRequestContext], () => {\n          hookDone();\n        });\n      });\n\n      // onResponse is the last hook to be executed, only added for 404 handlers\n      instance.addHook('onResponse', function (request, reply, hookDone) {\n        const span = request[kRequestSpan];\n\n        if (span != null) {\n          span.setStatus({\n            code: api.SpanStatusCode.OK,\n            message: 'OK',\n          });\n          span.setAttributes({\n            [semanticConventions.ATTR_HTTP_RESPONSE_STATUS_CODE]: 404,\n          });\n          span.end();\n        }\n\n        request[kRequestSpan] = null;\n\n        hookDone();\n      });\n\n      instance.addHook = addHookPatched;\n      instance.setNotFoundHandler = setNotFoundHandlerPatched;\n\n      done();\n\n      function onSendHook(request, reply, payload, hookDone) {\n        /** @type {import('@opentelemetry/api').Span} */\n        const span = request[kRequestSpan];\n\n        if (span != null) {\n          if (reply.statusCode < 500) {\n            span.setStatus({\n              code: api.SpanStatusCode.OK,\n              message: 'OK',\n            });\n          }\n\n          span.setAttributes({\n            [semanticConventions.ATTR_HTTP_RESPONSE_STATUS_CODE]: reply.statusCode,\n          });\n          span.end();\n        }\n\n        request[kRequestSpan] = null;\n\n        hookDone(null, payload);\n      }\n\n      function onErrorHook(request, reply, error, hookDone) {\n        /** @type {Span} */\n        const span = request[kRequestSpan];\n\n        if (span != null) {\n          span.setStatus({\n            code: api.SpanStatusCode.ERROR,\n            message: error.message,\n          });\n          span.recordException(error);\n        }\n\n        hookDone();\n      }\n\n      function addHookPatched(name, hook) {\n        const addHookOriginal = this[kAddHookOriginal];\n\n        if (FASTIFY_HOOKS.includes(name)) {\n          return addHookOriginal.call(\n            this,\n            name,\n            handlerWrapper(hook, {\n              [semanticConventions.ATTR_SERVICE_NAME]: instance[kInstrumentation].servername,\n              [ATTRIBUTE_NAMES.HOOK_NAME]: `${this.pluginName} - ${name}`,\n              [ATTRIBUTE_NAMES.FASTIFY_TYPE]: HOOK_TYPES.INSTANCE,\n              [ATTRIBUTE_NAMES.HOOK_CALLBACK_NAME]:\n                hook.name?.length > 0 ? hook.name : ANONYMOUS_FUNCTION_NAME /* c8 ignore next */,\n            }),\n          );\n        } else {\n          return addHookOriginal.call(this, name, hook);\n        }\n      }\n\n      function setNotFoundHandlerPatched(hooks, handler) {\n        const setNotFoundHandlerOriginal = this[kSetNotFoundOriginal];\n        if (typeof hooks === 'function') {\n          handler = handlerWrapper(hooks, {\n            [semanticConventions.ATTR_SERVICE_NAME]: instance[kInstrumentation].servername,\n            [ATTRIBUTE_NAMES.HOOK_NAME]: `${this.pluginName} - not-found-handler`,\n            [ATTRIBUTE_NAMES.FASTIFY_TYPE]: HOOK_TYPES.INSTANCE,\n            [ATTRIBUTE_NAMES.HOOK_CALLBACK_NAME]:\n              hooks.name?.length > 0 ? hooks.name : ANONYMOUS_FUNCTION_NAME /* c8 ignore next */,\n          });\n          setNotFoundHandlerOriginal.call(this, handler);\n        } else {\n          if (hooks.preValidation != null) {\n            hooks.preValidation = handlerWrapper(hooks.preValidation, {\n              [semanticConventions.ATTR_SERVICE_NAME]: instance[kInstrumentation].servername,\n              [ATTRIBUTE_NAMES.HOOK_NAME]: `${this.pluginName} - not-found-handler - preValidation`,\n              [ATTRIBUTE_NAMES.FASTIFY_TYPE]: HOOK_TYPES.INSTANCE,\n              [ATTRIBUTE_NAMES.HOOK_CALLBACK_NAME]:\n                hooks.preValidation.name?.length > 0\n                  ? hooks.preValidation.name\n                  : ANONYMOUS_FUNCTION_NAME /* c8 ignore next */,\n            });\n          }\n\n          if (hooks.preHandler != null) {\n            hooks.preHandler = handlerWrapper(hooks.preHandler, {\n              [semanticConventions.ATTR_SERVICE_NAME]: instance[kInstrumentation].servername,\n              [ATTRIBUTE_NAMES.HOOK_NAME]: `${this.pluginName} - not-found-handler - preHandler`,\n              [ATTRIBUTE_NAMES.FASTIFY_TYPE]: HOOK_TYPES.INSTANCE,\n              [ATTRIBUTE_NAMES.HOOK_CALLBACK_NAME]:\n                hooks.preHandler.name?.length > 0\n                  ? hooks.preHandler.name\n                  : ANONYMOUS_FUNCTION_NAME /* c8 ignore next */,\n            });\n          }\n\n          handler = handlerWrapper(handler, {\n            [semanticConventions.ATTR_SERVICE_NAME]: instance[kInstrumentation].servername,\n            [ATTRIBUTE_NAMES.HOOK_NAME]: `${this.pluginName} - not-found-handler`,\n            [ATTRIBUTE_NAMES.FASTIFY_TYPE]: HOOK_TYPES.INSTANCE,\n            [ATTRIBUTE_NAMES.HOOK_CALLBACK_NAME]:\n              handler.name?.length > 0 ? handler.name : ANONYMOUS_FUNCTION_NAME /* c8 ignore next */,\n          });\n          setNotFoundHandlerOriginal.call(this, hooks, handler);\n        }\n      }\n\n      function handlerWrapper(handler, spanAttributes = {}) {\n        return function handlerWrapped(...args) {\n          /** @type {FastifyOtelInstrumentation} */\n          const instrumentation = this[kInstrumentation];\n          const [request] = args;\n\n          if (instrumentation.isEnabled() === false) {\n            return handler.call(this, ...args);\n          }\n\n          const ctx = request[kRequestContext] ?? api.context.active();\n          const span = instrumentation.tracer.startSpan(\n            `handler - ${\n              handler.name?.length > 0\n                ? handler.name\n                : (this.pluginName /* c8 ignore next */ ?? ANONYMOUS_FUNCTION_NAME) /* c8 ignore next */\n            }`,\n            {\n              attributes: spanAttributes,\n            },\n            ctx,\n          );\n\n          return api.context.with(\n            api.trace.setSpan(ctx, span),\n            function () {\n              try {\n                const res = handler.call(this, ...args);\n\n                if (typeof res?.then === 'function') {\n                  return res.then(\n                    result => {\n                      span.end();\n                      return result;\n                    },\n                    error => {\n                      span.setStatus({\n                        code: api.SpanStatusCode.ERROR,\n                        message: error.message,\n                      });\n                      span.recordException(error);\n                      span.end();\n                      return Promise.reject(error);\n                    },\n                  );\n                }\n\n                span.end();\n                return res;\n              } catch (error) {\n                span.setStatus({\n                  code: api.SpanStatusCode.ERROR,\n                  message: error.message,\n                });\n                span.recordException(error);\n                span.end();\n                throw error;\n              }\n            },\n            this,\n          );\n        };\n      }\n    }\n  }\n}\n\nexports.FastifyOtelInstrumentation = FastifyOtelInstrumentation;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/fastify-otel/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/index.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/index.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst dc = __webpack_require__(/*! node:diagnostics_channel */ \"node:diagnostics_channel\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst debugBuild = __webpack_require__(/*! ../../../debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js\");\nconst index = __webpack_require__(/*! ./fastify-otel/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/fastify-otel/index.js\");\nconst instrumentation = __webpack_require__(/*! ./v3/instrumentation.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/instrumentation.js\");\n\n/**\n * Options for the Fastify integration.\n *\n * `shouldHandleError` - Callback method deciding whether error should be captured and sent to Sentry\n * This is used on Fastify v5 where Sentry handles errors in the diagnostics channel.\n * Fastify v3 and v4 use `setupFastifyErrorHandler` instead.\n *\n * @example\n *\n * ```javascript\n * Sentry.init({\n *   integrations: [\n *     Sentry.fastifyIntegration({\n *       shouldHandleError(_error, _request, reply) {\n *         return reply.statusCode >= 500;\n *       },\n *     });\n *   },\n * });\n * ```\n *\n */\n\nconst INTEGRATION_NAME = 'Fastify';\n\nconst instrumentFastifyV3 = nodeCore.generateInstrumentOnce(\n  `${INTEGRATION_NAME}.v3`,\n  () => new instrumentation.FastifyInstrumentationV3(),\n);\n\nfunction getFastifyIntegration() {\n  const client = core.getClient();\n  if (!client) {\n    return undefined;\n  } else {\n    return client.getIntegrationByName(INTEGRATION_NAME);\n  }\n}\n\nfunction handleFastifyError(\n\n  error,\n  request,\n  reply,\n  handlerOrigin,\n) {\n  const shouldHandleError = getFastifyIntegration()?.getShouldHandleError() || defaultShouldHandleError;\n  // Diagnostics channel runs before the onError hook, so we can use it to check if the handler was already registered\n  if (handlerOrigin === 'diagnostics-channel') {\n    this.diagnosticsChannelExists = true;\n  }\n\n  if (this.diagnosticsChannelExists && handlerOrigin === 'onError-hook') {\n    debugBuild.DEBUG_BUILD &&\n      core.debug.warn(\n        'Fastify error handler was already registered via diagnostics channel.',\n        'You can safely remove `setupFastifyErrorHandler` call and set `shouldHandleError` on the integration options.',\n      );\n\n    // If the diagnostics channel already exists, we don't need to handle the error again\n    return;\n  }\n\n  if (shouldHandleError(error, request, reply)) {\n    core.captureException(error, { mechanism: { handled: false, type: 'auto.function.fastify' } });\n  }\n}\n\nconst instrumentFastify = nodeCore.generateInstrumentOnce(`${INTEGRATION_NAME}.v5`, () => {\n  const fastifyOtelInstrumentationInstance = new index.FastifyOtelInstrumentation();\n  const plugin = fastifyOtelInstrumentationInstance.plugin();\n\n  // This message handler works for Fastify versions 3, 4 and 5\n  dc.subscribe('fastify.initialization', message => {\n    const fastifyInstance = (message ).fastify;\n\n    fastifyInstance?.register(plugin).after(err => {\n      if (err) {\n        debugBuild.DEBUG_BUILD && core.debug.error('Failed to setup Fastify instrumentation', err);\n      } else {\n        instrumentClient();\n\n        if (fastifyInstance) {\n          instrumentOnRequest(fastifyInstance);\n        }\n      }\n    });\n  });\n\n  // This diagnostics channel only works on Fastify version 5\n  // For versions 3 and 4, we use `setupFastifyErrorHandler` instead\n  dc.subscribe('tracing:fastify.request.handler:error', message => {\n    const { error, request, reply } = message\n\n;\n\n    handleFastifyError.call(handleFastifyError, error, request, reply, 'diagnostics-channel');\n  });\n\n  // Returning this as unknown not to deal with the internal types of the FastifyOtelInstrumentation\n  return fastifyOtelInstrumentationInstance ;\n});\n\nconst _fastifyIntegration = (({ shouldHandleError }) => {\n  let _shouldHandleError;\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      _shouldHandleError = shouldHandleError || defaultShouldHandleError;\n\n      instrumentFastifyV3();\n      instrumentFastify();\n    },\n    getShouldHandleError() {\n      return _shouldHandleError;\n    },\n    setShouldHandleError(fn) {\n      _shouldHandleError = fn;\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for [Fastify](https://fastify.dev/).\n *\n * If you also want to capture errors, you need to call `setupFastifyErrorHandler(app)` after you set up your Fastify server.\n *\n * For more information, see the [fastify documentation](https://docs.sentry.io/platforms/javascript/guides/fastify/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *   integrations: [Sentry.fastifyIntegration()],\n * })\n * ```\n */\nconst fastifyIntegration = core.defineIntegration((options = {}) =>\n  _fastifyIntegration(options),\n);\n\n/**\n * Default function to determine if an error should be sent to Sentry\n *\n * 3xx and 4xx errors are not sent by default.\n */\nfunction defaultShouldHandleError(_error, _request, reply) {\n  const statusCode = reply.statusCode;\n  // 3xx and 4xx errors are not sent by default.\n  return statusCode >= 500 || statusCode <= 299;\n}\n\n/**\n * Add an Fastify error handler to capture errors to Sentry.\n *\n * @param fastify The Fastify instance to which to add the error handler\n * @param options Configuration options for the handler\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n * const Fastify = require(\"fastify\");\n *\n * const app = Fastify();\n *\n * Sentry.setupFastifyErrorHandler(app);\n *\n * // Add your routes, etc.\n *\n * app.listen({ port: 3000 });\n * ```\n */\nfunction setupFastifyErrorHandler(fastify, options) {\n  if (options?.shouldHandleError) {\n    getFastifyIntegration()?.setShouldHandleError(options.shouldHandleError);\n  }\n\n  const plugin = Object.assign(\n    function (fastify, _options, done) {\n      fastify.addHook('onError', async (request, reply, error) => {\n        handleFastifyError.call(handleFastifyError, error, request, reply, 'onError-hook');\n      });\n      done();\n    },\n    {\n      [Symbol.for('skip-override')]: true,\n      [Symbol.for('fastify.display-name')]: 'sentry-fastify-error-handler',\n    },\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  fastify.register(plugin);\n}\n\nfunction addFastifySpanAttributes(span) {\n  const spanJSON = core.spanToJSON(span);\n  const spanName = spanJSON.description;\n  const attributes = spanJSON.data;\n\n  const type = attributes['fastify.type'];\n\n  const isHook = type === 'hook';\n  const isHandler = type === spanName?.startsWith('handler -');\n  // In @fastify/otel `request-handler` is separated by dash, not underscore\n  const isRequestHandler = spanName === 'request' || type === 'request-handler';\n\n  // If this is already set, or we have no fastify span, no need to process again...\n  if (attributes[core.SEMANTIC_ATTRIBUTE_SENTRY_OP] || (!isHandler && !isRequestHandler && !isHook)) {\n    return;\n  }\n\n  const opPrefix = isHook ? 'hook' : isHandler ? 'middleware' : isRequestHandler ? 'request-handler' : '<unknown>';\n\n  span.setAttributes({\n    [core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.fastify',\n    [core.SEMANTIC_ATTRIBUTE_SENTRY_OP]: `${opPrefix}.fastify`,\n  });\n\n  const attrName = attributes['fastify.name'] || attributes['plugin.name'] || attributes['hook.name'];\n  if (typeof attrName === 'string') {\n    // Try removing `fastify -> ` and `@fastify/otel -> ` prefixes\n    // This is a bit of a hack, and not always working for all spans\n    // But it's the best we can do without a proper API\n    const updatedName = attrName.replace(/^fastify -> /, '').replace(/^@fastify\\/otel -> /, '');\n\n    span.updateName(updatedName);\n  }\n}\n\nfunction instrumentClient() {\n  const client = core.getClient();\n  if (client) {\n    client.on('spanStart', (span) => {\n      addFastifySpanAttributes(span);\n    });\n  }\n}\n\nfunction instrumentOnRequest(fastify) {\n  fastify.addHook('onRequest', async (request, _reply) => {\n    if (request.opentelemetry) {\n      const { span } = request.opentelemetry();\n\n      if (span) {\n        addFastifySpanAttributes(span);\n      }\n    }\n\n    const routeName = request.routeOptions?.url;\n    const method = request.method || 'GET';\n\n    core.getIsolationScope().setTransactionName(`${method} ${routeName}`);\n  });\n}\n\nexports.fastifyIntegration = fastifyIntegration;\nexports.instrumentFastify = instrumentFastify;\nexports.instrumentFastifyV3 = instrumentFastifyV3;\nexports.setupFastifyErrorHandler = setupFastifyErrorHandler;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/constants.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/constants.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\n// Vendored from https://github.com/open-telemetry/opentelemetry-js-contrib/blob/407f61591ba69a39a6908264379d4d98a48dbec4/plugins/node/opentelemetry-instrumentation-fastify/src/constants.ts\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst spanRequestSymbol = Symbol('opentelemetry.instrumentation.fastify.request_active_span');\n\nexports.spanRequestSymbol = spanRequestSymbol;\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvZmFzdGlmeS92My9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGZhc3RpZnlcXHYzXFxjb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbi8vIFZlbmRvcmVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL29wZW4tdGVsZW1ldHJ5L29wZW50ZWxlbWV0cnktanMtY29udHJpYi9ibG9iLzQwN2Y2MTU5MWJhNjlhMzlhNjkwODI2NDM3OWQ0ZDk4YTQ4ZGJlYzQvcGx1Z2lucy9ub2RlL29wZW50ZWxlbWV0cnktaW5zdHJ1bWVudGF0aW9uLWZhc3RpZnkvc3JjL2NvbnN0YW50cy50c1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuY29uc3Qgc3BhblJlcXVlc3RTeW1ib2wgPSBTeW1ib2woJ29wZW50ZWxlbWV0cnkuaW5zdHJ1bWVudGF0aW9uLmZhc3RpZnkucmVxdWVzdF9hY3RpdmVfc3BhbicpO1xuXG5leHBvcnRzLnNwYW5SZXF1ZXN0U3ltYm9sID0gc3BhblJlcXVlc3RTeW1ib2w7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/enums/AttributeNames.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/enums/AttributeNames.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\n// Vendored from https://github.com/open-telemetry/opentelemetry-js-contrib/blob/407f61591ba69a39a6908264379d4d98a48dbec4/plugins/node/opentelemetry-instrumentation-fastify/src/enums/AttributeNames.ts\n//\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexports.AttributeNames = void 0; (function (AttributeNames) {\n  const FASTIFY_NAME = 'fastify.name'; AttributeNames[\"FASTIFY_NAME\"] = FASTIFY_NAME;\n  const FASTIFY_TYPE = 'fastify.type'; AttributeNames[\"FASTIFY_TYPE\"] = FASTIFY_TYPE;\n  const HOOK_NAME = 'hook.name'; AttributeNames[\"HOOK_NAME\"] = HOOK_NAME;\n  const PLUGIN_NAME = 'plugin.name'; AttributeNames[\"PLUGIN_NAME\"] = PLUGIN_NAME;\n})(exports.AttributeNames || (exports.AttributeNames = {}));\n\nexports.FastifyTypes = void 0; (function (FastifyTypes) {\n  const MIDDLEWARE = 'middleware'; FastifyTypes[\"MIDDLEWARE\"] = MIDDLEWARE;\n  const REQUEST_HANDLER = 'request_handler'; FastifyTypes[\"REQUEST_HANDLER\"] = REQUEST_HANDLER;\n})(exports.FastifyTypes || (exports.FastifyTypes = {}));\n\nexports.FastifyNames = void 0; (function (FastifyNames) {\n  const MIDDLEWARE = 'middleware'; FastifyNames[\"MIDDLEWARE\"] = MIDDLEWARE;\n  const REQUEST_HANDLER = 'request handler'; FastifyNames[\"REQUEST_HANDLER\"] = REQUEST_HANDLER;\n})(exports.FastifyNames || (exports.FastifyNames = {}));\n//# sourceMappingURL=AttributeNames.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvZmFzdGlmeS92My9lbnVtcy9BdHRyaWJ1dGVOYW1lcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNCQUFzQixXQUFXO0FBQ2pDLHVDQUF1QztBQUN2Qyx1Q0FBdUM7QUFDdkMsaUNBQWlDO0FBQ2pDLHFDQUFxQztBQUNyQyxDQUFDLDZCQUE2QixzQkFBc0IsS0FBSzs7QUFFekQsb0JBQW9CLFdBQVc7QUFDL0IsbUNBQW1DO0FBQ25DLDZDQUE2QztBQUM3QyxDQUFDLDJCQUEyQixvQkFBb0IsS0FBSzs7QUFFckQsb0JBQW9CLFdBQVc7QUFDL0IsbUNBQW1DO0FBQ25DLDZDQUE2QztBQUM3QyxDQUFDLDJCQUEyQixvQkFBb0IsS0FBSztBQUNyRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxmYXN0aWZ5XFx2M1xcZW51bXNcXEF0dHJpYnV0ZU5hbWVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG4vLyBWZW5kb3JlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuLXRlbGVtZXRyeS9vcGVudGVsZW1ldHJ5LWpzLWNvbnRyaWIvYmxvYi80MDdmNjE1OTFiYTY5YTM5YTY5MDgyNjQzNzlkNGQ5OGE0OGRiZWM0L3BsdWdpbnMvbm9kZS9vcGVudGVsZW1ldHJ5LWluc3RydW1lbnRhdGlvbi1mYXN0aWZ5L3NyYy9lbnVtcy9BdHRyaWJ1dGVOYW1lcy50c1xuLy9cbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydHMuQXR0cmlidXRlTmFtZXMgPSB2b2lkIDA7IChmdW5jdGlvbiAoQXR0cmlidXRlTmFtZXMpIHtcbiAgY29uc3QgRkFTVElGWV9OQU1FID0gJ2Zhc3RpZnkubmFtZSc7IEF0dHJpYnV0ZU5hbWVzW1wiRkFTVElGWV9OQU1FXCJdID0gRkFTVElGWV9OQU1FO1xuICBjb25zdCBGQVNUSUZZX1RZUEUgPSAnZmFzdGlmeS50eXBlJzsgQXR0cmlidXRlTmFtZXNbXCJGQVNUSUZZX1RZUEVcIl0gPSBGQVNUSUZZX1RZUEU7XG4gIGNvbnN0IEhPT0tfTkFNRSA9ICdob29rLm5hbWUnOyBBdHRyaWJ1dGVOYW1lc1tcIkhPT0tfTkFNRVwiXSA9IEhPT0tfTkFNRTtcbiAgY29uc3QgUExVR0lOX05BTUUgPSAncGx1Z2luLm5hbWUnOyBBdHRyaWJ1dGVOYW1lc1tcIlBMVUdJTl9OQU1FXCJdID0gUExVR0lOX05BTUU7XG59KShleHBvcnRzLkF0dHJpYnV0ZU5hbWVzIHx8IChleHBvcnRzLkF0dHJpYnV0ZU5hbWVzID0ge30pKTtcblxuZXhwb3J0cy5GYXN0aWZ5VHlwZXMgPSB2b2lkIDA7IChmdW5jdGlvbiAoRmFzdGlmeVR5cGVzKSB7XG4gIGNvbnN0IE1JRERMRVdBUkUgPSAnbWlkZGxld2FyZSc7IEZhc3RpZnlUeXBlc1tcIk1JRERMRVdBUkVcIl0gPSBNSURETEVXQVJFO1xuICBjb25zdCBSRVFVRVNUX0hBTkRMRVIgPSAncmVxdWVzdF9oYW5kbGVyJzsgRmFzdGlmeVR5cGVzW1wiUkVRVUVTVF9IQU5ETEVSXCJdID0gUkVRVUVTVF9IQU5ETEVSO1xufSkoZXhwb3J0cy5GYXN0aWZ5VHlwZXMgfHwgKGV4cG9ydHMuRmFzdGlmeVR5cGVzID0ge30pKTtcblxuZXhwb3J0cy5GYXN0aWZ5TmFtZXMgPSB2b2lkIDA7IChmdW5jdGlvbiAoRmFzdGlmeU5hbWVzKSB7XG4gIGNvbnN0IE1JRERMRVdBUkUgPSAnbWlkZGxld2FyZSc7IEZhc3RpZnlOYW1lc1tcIk1JRERMRVdBUkVcIl0gPSBNSURETEVXQVJFO1xuICBjb25zdCBSRVFVRVNUX0hBTkRMRVIgPSAncmVxdWVzdCBoYW5kbGVyJzsgRmFzdGlmeU5hbWVzW1wiUkVRVUVTVF9IQU5ETEVSXCJdID0gUkVRVUVTVF9IQU5ETEVSO1xufSkoZXhwb3J0cy5GYXN0aWZ5TmFtZXMgfHwgKGV4cG9ydHMuRmFzdGlmeU5hbWVzID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF0dHJpYnV0ZU5hbWVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/enums/AttributeNames.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/instrumentation.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/instrumentation.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst core = __webpack_require__(/*! @opentelemetry/core */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+core@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/core/build/esm/index.js\");\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semanticConventions = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst core$1 = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst AttributeNames = __webpack_require__(/*! ./enums/AttributeNames.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/enums/AttributeNames.js\");\nconst utils = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/utils.js\");\n\n// Vendored from: https://github.com/open-telemetry/opentelemetry-js-contrib/blob/407f61591ba69a39a6908264379d4d98a48dbec4/plugins/node/opentelemetry-instrumentation-fastify/src/instrumentation.ts\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** @knipignore */\n\nconst PACKAGE_VERSION = '0.1.0';\n\nconst PACKAGE_NAME = '@sentry/instrumentation-fastify-v3';\nconst ANONYMOUS_NAME = 'anonymous';\n\n// The instrumentation creates a span for invocations of lifecycle hook handlers\n// that take `(request, reply, ...[, done])` arguments. Currently this is all\n// lifecycle hooks except `onRequestAbort`.\n// https://fastify.dev/docs/latest/Reference/Hooks\nconst hooksNamesToWrap = new Set([\n  'onTimeout',\n  'onRequest',\n  'preParsing',\n  'preValidation',\n  'preSerialization',\n  'preHandler',\n  'onSend',\n  'onResponse',\n  'onError',\n]);\n\n/**\n * Fastify instrumentation for OpenTelemetry\n */\nclass FastifyInstrumentationV3 extends instrumentation.InstrumentationBase {\n   constructor(config = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n   init() {\n    return [\n      new instrumentation.InstrumentationNodeModuleDefinition('fastify', ['>=3.0.0 <4'], moduleExports => {\n        return this._patchConstructor(moduleExports);\n      }),\n    ];\n  }\n\n   _hookOnRequest() {\n    const instrumentation = this;\n\n    return function onRequest(request, reply, done) {\n      if (!instrumentation.isEnabled()) {\n        return done();\n      }\n      instrumentation._wrap(reply, 'send', instrumentation._patchSend());\n\n      const anyRequest = request ;\n\n      const rpcMetadata = core.getRPCMetadata(api.context.active());\n      const routeName = anyRequest.routeOptions\n        ? anyRequest.routeOptions.url // since fastify@4.10.0\n        : request.routerPath;\n      if (routeName && rpcMetadata?.type === core.RPCType.HTTP) {\n        rpcMetadata.route = routeName;\n      }\n\n      const method = request.method || 'GET';\n\n      core$1.getIsolationScope().setTransactionName(`${method} ${routeName}`);\n      done();\n    };\n  }\n\n   _wrapHandler(\n    pluginName,\n    hookName,\n    original,\n    syncFunctionWithDone,\n  ) {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify route.handler function');\n\n    return function ( ...args) {\n      if (!instrumentation.isEnabled()) {\n        return original.apply(this, args);\n      }\n\n      const name = original.name || pluginName || ANONYMOUS_NAME;\n      const spanName = `${AttributeNames.FastifyNames.MIDDLEWARE} - ${name}`;\n\n      const reply = args[1] ;\n\n      const span = utils.startSpan(reply, instrumentation.tracer, spanName, {\n        [AttributeNames.AttributeNames.FASTIFY_TYPE]: AttributeNames.FastifyTypes.MIDDLEWARE,\n        [AttributeNames.AttributeNames.PLUGIN_NAME]: pluginName,\n        [AttributeNames.AttributeNames.HOOK_NAME]: hookName,\n      });\n\n      const origDone = syncFunctionWithDone && (args[args.length - 1] );\n      if (origDone) {\n        args[args.length - 1] = function (...doneArgs) {\n          utils.endSpan(reply);\n          origDone.apply(this, doneArgs);\n        };\n      }\n\n      return api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n        return utils.safeExecuteInTheMiddleMaybePromise(\n          () => {\n            return original.apply(this, args);\n          },\n          err => {\n            if (err instanceof Error) {\n              span.setStatus({\n                code: api.SpanStatusCode.ERROR,\n                message: err.message,\n              });\n              span.recordException(err);\n            }\n            // async hooks should end the span as soon as the promise is resolved\n            if (!syncFunctionWithDone) {\n              utils.endSpan(reply);\n            }\n          },\n        );\n      });\n    };\n  }\n\n   _wrapAddHook() {\n    const instrumentation = this;\n    this._diag.debug('Patching fastify server.addHook function');\n\n    // biome-ignore lint/complexity/useArrowFunction: <explanation>\n    return function (original) {\n      return function wrappedAddHook( ...args) {\n        const name = args[0] ;\n        const handler = args[1] ;\n        const pluginName = this.pluginName;\n        if (!hooksNamesToWrap.has(name)) {\n          return original.apply(this, args);\n        }\n\n        const syncFunctionWithDone =\n          typeof args[args.length - 1] === 'function' && handler.constructor.name !== 'AsyncFunction';\n\n        return original.apply(this, [\n          name,\n          instrumentation._wrapHandler(pluginName, name, handler, syncFunctionWithDone),\n        ] );\n      };\n    };\n  }\n\n   _patchConstructor(moduleExports\n\n) {\n    const instrumentation = this;\n\n    function fastify( ...args) {\n      const app = moduleExports.fastify.apply(this, args);\n      app.addHook('onRequest', instrumentation._hookOnRequest());\n      app.addHook('preHandler', instrumentation._hookPreHandler());\n\n      instrumentClient();\n\n      instrumentation._wrap(app, 'addHook', instrumentation._wrapAddHook());\n\n      return app;\n    }\n\n    if (moduleExports.errorCodes !== undefined) {\n      fastify.errorCodes = moduleExports.errorCodes;\n    }\n    fastify.fastify = fastify;\n    fastify.default = fastify;\n    return fastify;\n  }\n\n   _patchSend() {\n    const instrumentation$1 = this;\n    this._diag.debug('Patching fastify reply.send function');\n\n    return function patchSend(original) {\n      return function send( ...args) {\n        const maybeError = args[0];\n\n        if (!instrumentation$1.isEnabled()) {\n          return original.apply(this, args);\n        }\n\n        return instrumentation.safeExecuteInTheMiddle(\n          () => {\n            return original.apply(this, args);\n          },\n          err => {\n            if (!err && maybeError instanceof Error) {\n              // eslint-disable-next-line no-param-reassign\n              err = maybeError;\n            }\n            utils.endSpan(this, err);\n          },\n        );\n      };\n    };\n  }\n\n   _hookPreHandler() {\n    const instrumentation$1 = this;\n    this._diag.debug('Patching fastify preHandler function');\n\n    return function preHandler( request, reply, done) {\n      if (!instrumentation$1.isEnabled()) {\n        return done();\n      }\n      const anyRequest = request ;\n\n      const handler = anyRequest.routeOptions?.handler || anyRequest.context?.handler;\n      const handlerName = handler?.name.startsWith('bound ') ? handler.name.substring(6) : handler?.name;\n      const spanName = `${AttributeNames.FastifyNames.REQUEST_HANDLER} - ${handlerName || this.pluginName || ANONYMOUS_NAME}`;\n\n      const spanAttributes = {\n        [AttributeNames.AttributeNames.PLUGIN_NAME]: this.pluginName,\n        [AttributeNames.AttributeNames.FASTIFY_TYPE]: AttributeNames.FastifyTypes.REQUEST_HANDLER,\n        // eslint-disable-next-line deprecation/deprecation\n        [semanticConventions.SEMATTRS_HTTP_ROUTE]: anyRequest.routeOptions\n          ? anyRequest.routeOptions.url // since fastify@4.10.0\n          : request.routerPath,\n      };\n      if (handlerName) {\n        spanAttributes[AttributeNames.AttributeNames.FASTIFY_NAME] = handlerName;\n      }\n      const span = utils.startSpan(reply, instrumentation$1.tracer, spanName, spanAttributes);\n\n      addFastifyV3SpanAttributes(span);\n\n      const { requestHook } = instrumentation$1.getConfig();\n      if (requestHook) {\n        instrumentation.safeExecuteInTheMiddle(\n          () => requestHook(span, { request }),\n          e => {\n            if (e) {\n              instrumentation$1._diag.error('request hook failed', e);\n            }\n          },\n          true,\n        );\n      }\n\n      return api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n        done();\n      });\n    };\n  }\n}\n\nfunction instrumentClient() {\n  const client = core$1.getClient();\n  if (client) {\n    client.on('spanStart', (span) => {\n      addFastifyV3SpanAttributes(span);\n    });\n  }\n}\n\nfunction addFastifyV3SpanAttributes(span) {\n  const attributes = core$1.spanToJSON(span).data;\n\n  // this is one of: middleware, request_handler\n  const type = attributes['fastify.type'];\n\n  // If this is already set, or we have no fastify span, no need to process again...\n  if (attributes[core$1.SEMANTIC_ATTRIBUTE_SENTRY_OP] || !type) {\n    return;\n  }\n\n  span.setAttributes({\n    [core$1.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.fastify',\n    [core$1.SEMANTIC_ATTRIBUTE_SENTRY_OP]: `${type}.fastify`,\n  });\n\n  // Also update the name, we don't need to \"middleware - \" prefix\n  const name = attributes['fastify.name'] || attributes['plugin.name'] || attributes['hook.name'];\n  if (typeof name === 'string') {\n    // Try removing `fastify -> ` and `@fastify/otel -> ` prefixes\n    // This is a bit of a hack, and not always working for all spans\n    // But it's the best we can do without a proper API\n    const updatedName = name.replace(/^fastify -> /, '').replace(/^@fastify\\/otel -> /, '');\n\n    span.updateName(updatedName);\n  }\n}\n\nexports.FastifyInstrumentationV3 = FastifyInstrumentationV3;\n//# sourceMappingURL=instrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/utils.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/utils.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst constants = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/constants.js\");\n\n// Vendored from: https://github.com/open-telemetry/opentelemetry-js-contrib/blob/407f61591ba69a39a6908264379d4d98a48dbec4/plugins/node/opentelemetry-instrumentation-fastify/src/utils.ts\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable @typescript-eslint/no-dynamic-delete */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Starts Span\n * @param reply - reply function\n * @param tracer - tracer\n * @param spanName - span name\n * @param spanAttributes - span attributes\n */\nfunction startSpan(\n  reply,\n  tracer,\n  spanName,\n  spanAttributes = {},\n) {\n  const span = tracer.startSpan(spanName, { attributes: spanAttributes });\n\n  const spans = reply[constants.spanRequestSymbol] || [];\n  spans.push(span);\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  Object.defineProperty(reply, constants.spanRequestSymbol, {\n    enumerable: false,\n    configurable: true,\n    value: spans,\n  });\n\n  return span;\n}\n\n/**\n * Ends span\n * @param reply - reply function\n * @param err - error\n */\nfunction endSpan(reply, err) {\n  const spans = reply[constants.spanRequestSymbol] || [];\n  // there is no active span, or it has already ended\n  if (!spans.length) {\n    return;\n  }\n  // biome-ignore lint/complexity/noForEach: <explanation>\n  spans.forEach((span) => {\n    if (err) {\n      span.setStatus({\n        code: api.SpanStatusCode.ERROR,\n        message: err.message,\n      });\n      span.recordException(err);\n    }\n    span.end();\n  });\n  delete reply[constants.spanRequestSymbol];\n}\n\n// @TODO after approve add this to instrumentation package and replace usage\n// when it will be released\n\n/**\n * This function handles the missing case from instrumentation package when\n * execute can either return a promise or void. And using async is not an\n * option as it is producing unwanted side effects.\n * @param execute - function to be executed\n * @param onFinish - function called when function executed\n * @param preventThrowingError - prevent to throw error when execute\n * function fails\n */\n\nfunction safeExecuteInTheMiddleMaybePromise(\n  execute,\n  onFinish,\n  preventThrowingError,\n) {\n  let error;\n  let result = undefined;\n  try {\n    result = execute();\n\n    if (isPromise(result)) {\n      result.then(\n        res => onFinish(undefined, res),\n        err => onFinish(err),\n      );\n    }\n  } catch (e) {\n    error = e;\n  } finally {\n    if (!isPromise(result)) {\n      onFinish(error, result);\n      if (error && true) {\n        // eslint-disable-next-line no-unsafe-finally\n        throw error;\n      }\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result;\n  }\n}\n\nfunction isPromise(val) {\n  return (\n    (typeof val === 'object' && val && typeof Object.getOwnPropertyDescriptor(val, 'then')?.value === 'function') ||\n    false\n  );\n}\n\nexports.endSpan = endSpan;\nexports.safeExecuteInTheMiddleMaybePromise = safeExecuteInTheMiddleMaybePromise;\nexports.startSpan = startSpan;\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvZmFzdGlmeS92My91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSxZQUFZLG1CQUFPLENBQUMsa0lBQW9CO0FBQ3hDLGtCQUFrQixtQkFBTyxDQUFDLHdKQUFnQjs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLDRDQUE0Qyw0QkFBNEI7O0FBRXhFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZTtBQUNmLDBDQUEwQztBQUMxQyxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBzZW50cnkrbm9kZUAxMC4xNi4wXFxub2RlX21vZHVsZXNcXEBzZW50cnlcXG5vZGVcXGJ1aWxkXFxjanNcXGludGVncmF0aW9uc1xcdHJhY2luZ1xcZmFzdGlmeVxcdjNcXHV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBhcGkgPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9hcGknKTtcbmNvbnN0IGNvbnN0YW50cyA9IHJlcXVpcmUoJy4vY29uc3RhbnRzLmpzJyk7XG5cbi8vIFZlbmRvcmVkIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuLXRlbGVtZXRyeS9vcGVudGVsZW1ldHJ5LWpzLWNvbnRyaWIvYmxvYi80MDdmNjE1OTFiYTY5YTM5YTY5MDgyNjQzNzlkNGQ5OGE0OGRiZWM0L3BsdWdpbnMvbm9kZS9vcGVudGVsZW1ldHJ5LWluc3RydW1lbnRhdGlvbi1mYXN0aWZ5L3NyYy91dGlscy50c1xuLyogZXNsaW50LWRpc2FibGUganNkb2MvcmVxdWlyZS1qc2RvYyAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWR5bmFtaWMtZGVsZXRlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1mdW5jdGlvbi1yZXR1cm4tdHlwZSAqL1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuXG4vKipcbiAqIFN0YXJ0cyBTcGFuXG4gKiBAcGFyYW0gcmVwbHkgLSByZXBseSBmdW5jdGlvblxuICogQHBhcmFtIHRyYWNlciAtIHRyYWNlclxuICogQHBhcmFtIHNwYW5OYW1lIC0gc3BhbiBuYW1lXG4gKiBAcGFyYW0gc3BhbkF0dHJpYnV0ZXMgLSBzcGFuIGF0dHJpYnV0ZXNcbiAqL1xuZnVuY3Rpb24gc3RhcnRTcGFuKFxuICByZXBseSxcbiAgdHJhY2VyLFxuICBzcGFuTmFtZSxcbiAgc3BhbkF0dHJpYnV0ZXMgPSB7fSxcbikge1xuICBjb25zdCBzcGFuID0gdHJhY2VyLnN0YXJ0U3BhbihzcGFuTmFtZSwgeyBhdHRyaWJ1dGVzOiBzcGFuQXR0cmlidXRlcyB9KTtcblxuICBjb25zdCBzcGFucyA9IHJlcGx5W2NvbnN0YW50cy5zcGFuUmVxdWVzdFN5bWJvbF0gfHwgW107XG4gIHNwYW5zLnB1c2goc3Bhbik7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1mbG9hdGluZy1wcm9taXNlc1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVwbHksIGNvbnN0YW50cy5zcGFuUmVxdWVzdFN5bWJvbCwge1xuICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICB2YWx1ZTogc3BhbnMsXG4gIH0pO1xuXG4gIHJldHVybiBzcGFuO1xufVxuXG4vKipcbiAqIEVuZHMgc3BhblxuICogQHBhcmFtIHJlcGx5IC0gcmVwbHkgZnVuY3Rpb25cbiAqIEBwYXJhbSBlcnIgLSBlcnJvclxuICovXG5mdW5jdGlvbiBlbmRTcGFuKHJlcGx5LCBlcnIpIHtcbiAgY29uc3Qgc3BhbnMgPSByZXBseVtjb25zdGFudHMuc3BhblJlcXVlc3RTeW1ib2xdIHx8IFtdO1xuICAvLyB0aGVyZSBpcyBubyBhY3RpdmUgc3Bhbiwgb3IgaXQgaGFzIGFscmVhZHkgZW5kZWRcbiAgaWYgKCFzcGFucy5sZW5ndGgpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gYmlvbWUtaWdub3JlIGxpbnQvY29tcGxleGl0eS9ub0ZvckVhY2g6IDxleHBsYW5hdGlvbj5cbiAgc3BhbnMuZm9yRWFjaCgoc3BhbikgPT4ge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIHNwYW4uc2V0U3RhdHVzKHtcbiAgICAgICAgY29kZTogYXBpLlNwYW5TdGF0dXNDb2RlLkVSUk9SLFxuICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZSxcbiAgICAgIH0pO1xuICAgICAgc3Bhbi5yZWNvcmRFeGNlcHRpb24oZXJyKTtcbiAgICB9XG4gICAgc3Bhbi5lbmQoKTtcbiAgfSk7XG4gIGRlbGV0ZSByZXBseVtjb25zdGFudHMuc3BhblJlcXVlc3RTeW1ib2xdO1xufVxuXG4vLyBAVE9ETyBhZnRlciBhcHByb3ZlIGFkZCB0aGlzIHRvIGluc3RydW1lbnRhdGlvbiBwYWNrYWdlIGFuZCByZXBsYWNlIHVzYWdlXG4vLyB3aGVuIGl0IHdpbGwgYmUgcmVsZWFzZWRcblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXMgdGhlIG1pc3NpbmcgY2FzZSBmcm9tIGluc3RydW1lbnRhdGlvbiBwYWNrYWdlIHdoZW5cbiAqIGV4ZWN1dGUgY2FuIGVpdGhlciByZXR1cm4gYSBwcm9taXNlIG9yIHZvaWQuIEFuZCB1c2luZyBhc3luYyBpcyBub3QgYW5cbiAqIG9wdGlvbiBhcyBpdCBpcyBwcm9kdWNpbmcgdW53YW50ZWQgc2lkZSBlZmZlY3RzLlxuICogQHBhcmFtIGV4ZWN1dGUgLSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZFxuICogQHBhcmFtIG9uRmluaXNoIC0gZnVuY3Rpb24gY2FsbGVkIHdoZW4gZnVuY3Rpb24gZXhlY3V0ZWRcbiAqIEBwYXJhbSBwcmV2ZW50VGhyb3dpbmdFcnJvciAtIHByZXZlbnQgdG8gdGhyb3cgZXJyb3Igd2hlbiBleGVjdXRlXG4gKiBmdW5jdGlvbiBmYWlsc1xuICovXG5cbmZ1bmN0aW9uIHNhZmVFeGVjdXRlSW5UaGVNaWRkbGVNYXliZVByb21pc2UoXG4gIGV4ZWN1dGUsXG4gIG9uRmluaXNoLFxuICBwcmV2ZW50VGhyb3dpbmdFcnJvcixcbikge1xuICBsZXQgZXJyb3I7XG4gIGxldCByZXN1bHQgPSB1bmRlZmluZWQ7XG4gIHRyeSB7XG4gICAgcmVzdWx0ID0gZXhlY3V0ZSgpO1xuXG4gICAgaWYgKGlzUHJvbWlzZShyZXN1bHQpKSB7XG4gICAgICByZXN1bHQudGhlbihcbiAgICAgICAgcmVzID0+IG9uRmluaXNoKHVuZGVmaW5lZCwgcmVzKSxcbiAgICAgICAgZXJyID0+IG9uRmluaXNoKGVyciksXG4gICAgICApO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIGVycm9yID0gZTtcbiAgfSBmaW5hbGx5IHtcbiAgICBpZiAoIWlzUHJvbWlzZShyZXN1bHQpKSB7XG4gICAgICBvbkZpbmlzaChlcnJvciwgcmVzdWx0KTtcbiAgICAgIGlmIChlcnJvciAmJiB0cnVlKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnNhZmUtZmluYWxseVxuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuc2FmZS1maW5hbGx5XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc1Byb21pc2UodmFsKSB7XG4gIHJldHVybiAoXG4gICAgKHR5cGVvZiB2YWwgPT09ICdvYmplY3QnICYmIHZhbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih2YWwsICd0aGVuJyk/LnZhbHVlID09PSAnZnVuY3Rpb24nKSB8fFxuICAgIGZhbHNlXG4gICk7XG59XG5cbmV4cG9ydHMuZW5kU3BhbiA9IGVuZFNwYW47XG5leHBvcnRzLnNhZmVFeGVjdXRlSW5UaGVNaWRkbGVNYXliZVByb21pc2UgPSBzYWZlRXhlY3V0ZUluVGhlTWlkZGxlTWF5YmVQcm9taXNlO1xuZXhwb3J0cy5zdGFydFNwYW4gPSBzdGFydFNwYW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/v3/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/firebase.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/firebase.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst firebaseInstrumentation = __webpack_require__(/*! ./otel/firebaseInstrumentation.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/otel/firebaseInstrumentation.js\");\n\nconst INTEGRATION_NAME = 'Firebase';\n\nconst config = {\n  firestoreSpanCreationHook: span => {\n    nodeCore.addOriginToSpan(span, 'auto.firebase.otel.firestore');\n\n    span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_OP, 'db.query');\n  },\n};\n\nconst instrumentFirebase = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, () => new firebaseInstrumentation.FirebaseInstrumentation(config));\n\nconst _firebaseIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentFirebase();\n    },\n  };\n}) ;\n\nconst firebaseIntegration = core.defineIntegration(_firebaseIntegration);\n\nexports.firebaseIntegration = firebaseIntegration;\nexports.instrumentFirebase = instrumentFirebase;\n//# sourceMappingURL=firebase.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvZmlyZWJhc2UvZmlyZWJhc2UuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjtBQUM1QyxnQ0FBZ0MsbUJBQU8sQ0FBQyw0TEFBbUM7O0FBRTNFOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQSwyQkFBMkI7QUFDM0IsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGZpcmViYXNlXFxmaXJlYmFzZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3Qgbm9kZUNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUtY29yZScpO1xuY29uc3QgZmlyZWJhc2VJbnN0cnVtZW50YXRpb24gPSByZXF1aXJlKCcuL290ZWwvZmlyZWJhc2VJbnN0cnVtZW50YXRpb24uanMnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdGaXJlYmFzZSc7XG5cbmNvbnN0IGNvbmZpZyA9IHtcbiAgZmlyZXN0b3JlU3BhbkNyZWF0aW9uSG9vazogc3BhbiA9PiB7XG4gICAgbm9kZUNvcmUuYWRkT3JpZ2luVG9TcGFuKHNwYW4sICdhdXRvLmZpcmViYXNlLm90ZWwuZmlyZXN0b3JlJyk7XG5cbiAgICBzcGFuLnNldEF0dHJpYnV0ZShjb3JlLlNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1AsICdkYi5xdWVyeScpO1xuICB9LFxufTtcblxuY29uc3QgaW5zdHJ1bWVudEZpcmViYXNlID0gbm9kZUNvcmUuZ2VuZXJhdGVJbnN0cnVtZW50T25jZShJTlRFR1JBVElPTl9OQU1FLCAoKSA9PiBuZXcgZmlyZWJhc2VJbnN0cnVtZW50YXRpb24uRmlyZWJhc2VJbnN0cnVtZW50YXRpb24oY29uZmlnKSk7XG5cbmNvbnN0IF9maXJlYmFzZUludGVncmF0aW9uID0gKCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIGluc3RydW1lbnRGaXJlYmFzZSgpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbmNvbnN0IGZpcmViYXNlSW50ZWdyYXRpb24gPSBjb3JlLmRlZmluZUludGVncmF0aW9uKF9maXJlYmFzZUludGVncmF0aW9uKTtcblxuZXhwb3J0cy5maXJlYmFzZUludGVncmF0aW9uID0gZmlyZWJhc2VJbnRlZ3JhdGlvbjtcbmV4cG9ydHMuaW5zdHJ1bWVudEZpcmViYXNlID0gaW5zdHJ1bWVudEZpcmViYXNlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlyZWJhc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/firebase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/otel/firebaseInstrumentation.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/otel/firebaseInstrumentation.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst firestore = __webpack_require__(/*! ./patches/firestore.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/otel/patches/firestore.js\");\n\nconst DefaultFirebaseInstrumentationConfig = {};\nconst firestoreSupportedVersions = ['>=3.0.0 <5']; // firebase 9+\n\n/**\n * Instrumentation for Firebase services, specifically Firestore.\n */\nclass FirebaseInstrumentation extends instrumentation.InstrumentationBase {\n   constructor(config = DefaultFirebaseInstrumentationConfig) {\n    super('@sentry/instrumentation-firebase', core.SDK_VERSION, config);\n  }\n\n  /**\n   * sets config\n   * @param config\n   */\n    setConfig(config = {}) {\n    super.setConfig({ ...DefaultFirebaseInstrumentationConfig, ...config });\n  }\n\n  /**\n   *\n   * @protected\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n   init() {\n    const modules = [];\n\n    modules.push(firestore.patchFirestore(this.tracer, firestoreSupportedVersions, this._wrap, this._unwrap, this.getConfig()));\n\n    return modules;\n  }\n}\n\nexports.FirebaseInstrumentation = FirebaseInstrumentation;\n//# sourceMappingURL=firebaseInstrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvZmlyZWJhc2Uvb3RlbC9maXJlYmFzZUluc3RydW1lbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSx3QkFBd0IsbUJBQU8sQ0FBQyw4TEFBZ0M7QUFDaEUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGtCQUFrQixtQkFBTyxDQUFDLDJLQUF3Qjs7QUFFbEQ7QUFDQSxtREFBbUQ7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLHNCQUFzQixvREFBb0Q7QUFDMUU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLCtCQUErQjtBQUMvQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxmaXJlYmFzZVxcb3RlbFxcZmlyZWJhc2VJbnN0cnVtZW50YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbmNvbnN0IGluc3RydW1lbnRhdGlvbiA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbicpO1xuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3QgZmlyZXN0b3JlID0gcmVxdWlyZSgnLi9wYXRjaGVzL2ZpcmVzdG9yZS5qcycpO1xuXG5jb25zdCBEZWZhdWx0RmlyZWJhc2VJbnN0cnVtZW50YXRpb25Db25maWcgPSB7fTtcbmNvbnN0IGZpcmVzdG9yZVN1cHBvcnRlZFZlcnNpb25zID0gWyc+PTMuMC4wIDw1J107IC8vIGZpcmViYXNlIDkrXG5cbi8qKlxuICogSW5zdHJ1bWVudGF0aW9uIGZvciBGaXJlYmFzZSBzZXJ2aWNlcywgc3BlY2lmaWNhbGx5IEZpcmVzdG9yZS5cbiAqL1xuY2xhc3MgRmlyZWJhc2VJbnN0cnVtZW50YXRpb24gZXh0ZW5kcyBpbnN0cnVtZW50YXRpb24uSW5zdHJ1bWVudGF0aW9uQmFzZSB7XG4gICBjb25zdHJ1Y3Rvcihjb25maWcgPSBEZWZhdWx0RmlyZWJhc2VJbnN0cnVtZW50YXRpb25Db25maWcpIHtcbiAgICBzdXBlcignQHNlbnRyeS9pbnN0cnVtZW50YXRpb24tZmlyZWJhc2UnLCBjb3JlLlNES19WRVJTSU9OLCBjb25maWcpO1xuICB9XG5cbiAgLyoqXG4gICAqIHNldHMgY29uZmlnXG4gICAqIEBwYXJhbSBjb25maWdcbiAgICovXG4gICAgc2V0Q29uZmlnKGNvbmZpZyA9IHt9KSB7XG4gICAgc3VwZXIuc2V0Q29uZmlnKHsgLi4uRGVmYXVsdEZpcmViYXNlSW5zdHJ1bWVudGF0aW9uQ29uZmlnLCAuLi5jb25maWcgfSk7XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuICAgaW5pdCgpIHtcbiAgICBjb25zdCBtb2R1bGVzID0gW107XG5cbiAgICBtb2R1bGVzLnB1c2goZmlyZXN0b3JlLnBhdGNoRmlyZXN0b3JlKHRoaXMudHJhY2VyLCBmaXJlc3RvcmVTdXBwb3J0ZWRWZXJzaW9ucywgdGhpcy5fd3JhcCwgdGhpcy5fdW53cmFwLCB0aGlzLmdldENvbmZpZygpKSk7XG5cbiAgICByZXR1cm4gbW9kdWxlcztcbiAgfVxufVxuXG5leHBvcnRzLkZpcmViYXNlSW5zdHJ1bWVudGF0aW9uID0gRmlyZWJhc2VJbnN0cnVtZW50YXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maXJlYmFzZUluc3RydW1lbnRhdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/otel/firebaseInstrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/otel/patches/firestore.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/otel/patches/firestore.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst net = __webpack_require__(/*! node:net */ \"node:net\");\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semanticConventions = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\n\n// Inline minimal types used from `shimmer` to avoid importing shimmer's types directly.\n// We only need the shape for `wrap` and `unwrap` used in this file.\n\n/**\n *\n * @param tracer - Opentelemetry Tracer\n * @param firestoreSupportedVersions - supported version of firebase/firestore\n * @param wrap - reference to native instrumentation wrap function\n * @param unwrap - reference to native instrumentation wrap function\n */\nfunction patchFirestore(\n  tracer,\n  firestoreSupportedVersions,\n  wrap,\n  unwrap,\n  config,\n) {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  const defaultFirestoreSpanCreationHook = () => {};\n\n  let firestoreSpanCreationHook = defaultFirestoreSpanCreationHook;\n  const configFirestoreSpanCreationHook = config.firestoreSpanCreationHook;\n\n  if (typeof configFirestoreSpanCreationHook === 'function') {\n    firestoreSpanCreationHook = (span) => {\n      instrumentation.safeExecuteInTheMiddle(\n        () => configFirestoreSpanCreationHook(span),\n        error => {\n          if (!error) {\n            return;\n          }\n          api.diag.error(error?.message);\n        },\n        true,\n      );\n    };\n  }\n\n  const moduleFirestoreCJS = new instrumentation.InstrumentationNodeModuleDefinition(\n    '@firebase/firestore',\n    firestoreSupportedVersions,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (moduleExports) => wrapMethods(moduleExports, wrap, unwrap, tracer, firestoreSpanCreationHook),\n  );\n  const files = [\n    '@firebase/firestore/dist/lite/index.node.cjs.js',\n    '@firebase/firestore/dist/lite/index.node.mjs.js',\n    '@firebase/firestore/dist/lite/index.rn.esm2017.js',\n    '@firebase/firestore/dist/lite/index.cjs.js',\n  ];\n\n  for (const file of files) {\n    moduleFirestoreCJS.files.push(\n      new instrumentation.InstrumentationNodeModuleFile(\n        file,\n        firestoreSupportedVersions,\n        moduleExports => wrapMethods(moduleExports, wrap, unwrap, tracer, firestoreSpanCreationHook),\n        moduleExports => unwrapMethods(moduleExports, unwrap),\n      ),\n    );\n  }\n\n  return moduleFirestoreCJS;\n}\n\nfunction wrapMethods(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  moduleExports,\n  wrap,\n  unwrap,\n  tracer,\n  firestoreSpanCreationHook,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  unwrapMethods(moduleExports, unwrap);\n\n  wrap(moduleExports, 'addDoc', patchAddDoc(tracer, firestoreSpanCreationHook));\n  wrap(moduleExports, 'getDocs', patchGetDocs(tracer, firestoreSpanCreationHook));\n  wrap(moduleExports, 'setDoc', patchSetDoc(tracer, firestoreSpanCreationHook));\n  wrap(moduleExports, 'deleteDoc', patchDeleteDoc(tracer, firestoreSpanCreationHook));\n\n  return moduleExports;\n}\n\nfunction unwrapMethods(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  moduleExports,\n  unwrap,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  for (const method of ['addDoc', 'getDocs', 'setDoc', 'deleteDoc']) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (instrumentation.isWrapped(moduleExports[method])) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      unwrap(moduleExports, method);\n    }\n  }\n  return moduleExports;\n}\n\nfunction patchAddDoc(\n  tracer,\n  firestoreSpanCreationHook,\n)\n\n {\n  return function addDoc(original) {\n    return function (\n      reference,\n      data,\n    ) {\n      const span = startDBSpan(tracer, 'addDoc', reference);\n      firestoreSpanCreationHook(span);\n      return executeContextWithSpan(span, () => {\n        return original(reference, data);\n      });\n    };\n  };\n}\n\nfunction patchDeleteDoc(\n  tracer,\n  firestoreSpanCreationHook,\n)\n\n {\n  return function deleteDoc(original) {\n    return function (reference) {\n      const span = startDBSpan(tracer, 'deleteDoc', reference.parent || reference);\n      firestoreSpanCreationHook(span);\n      return executeContextWithSpan(span, () => {\n        return original(reference);\n      });\n    };\n  };\n}\n\nfunction patchGetDocs(\n  tracer,\n  firestoreSpanCreationHook,\n)\n\n {\n  return function getDocs(original) {\n    return function (\n      reference,\n    ) {\n      const span = startDBSpan(tracer, 'getDocs', reference);\n      firestoreSpanCreationHook(span);\n      return executeContextWithSpan(span, () => {\n        return original(reference);\n      });\n    };\n  };\n}\n\nfunction patchSetDoc(\n  tracer,\n  firestoreSpanCreationHook,\n)\n\n {\n  return function setDoc(original) {\n    return function (\n      reference,\n      data,\n      options,\n    ) {\n      const span = startDBSpan(tracer, 'setDoc', reference.parent || reference);\n      firestoreSpanCreationHook(span);\n\n      return executeContextWithSpan(span, () => {\n        return typeof options !== 'undefined' ? original(reference, data, options) : original(reference, data);\n      });\n    };\n  };\n}\n\nfunction executeContextWithSpan(span, callback) {\n  return api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n    return instrumentation.safeExecuteInTheMiddle(\n      () => {\n        return callback();\n      },\n      err => {\n        if (err) {\n          span.recordException(err);\n        }\n        span.end();\n      },\n      true,\n    );\n  });\n}\n\nfunction startDBSpan(\n  tracer,\n  spanName,\n  reference,\n) {\n  const span = tracer.startSpan(`${spanName} ${reference.path}`, { kind: api.SpanKind.CLIENT });\n  addAttributes(span, reference);\n  span.setAttribute(semanticConventions.ATTR_DB_OPERATION_NAME, spanName);\n  return span;\n}\n\n/**\n * Gets the server address and port attributes from the Firestore settings.\n * It's best effort to extract the address and port from the settings, especially for IPv6.\n * @param span - The span to set attributes on.\n * @param settings - The Firestore settings containing host information.\n */\nfunction getPortAndAddress(settings)\n\n {\n  let address;\n  let port;\n\n  if (typeof settings.host === 'string') {\n    if (settings.host.startsWith('[')) {\n      // IPv6 addresses can be enclosed in square brackets, e.g., [2001:db8::1]:8080\n      if (settings.host.endsWith(']')) {\n        // IPv6 with square brackets without port\n        address = settings.host.replace(/^\\[|\\]$/g, '');\n      } else if (settings.host.includes(']:')) {\n        // IPv6 with square brackets with port\n        const lastColonIndex = settings.host.lastIndexOf(':');\n        if (lastColonIndex !== -1) {\n          address = settings.host.slice(1, lastColonIndex).replace(/^\\[|\\]$/g, '');\n          port = settings.host.slice(lastColonIndex + 1);\n        }\n      }\n    } else {\n      // IPv4 or IPv6 without square brackets\n      // If it's an IPv6 address without square brackets, we assume it does not have a port.\n      if (net.isIPv6(settings.host)) {\n        address = settings.host;\n      }\n      // If it's an IPv4 address, we can extract the port if it exists.\n      else {\n        const lastColonIndex = settings.host.lastIndexOf(':');\n        if (lastColonIndex !== -1) {\n          address = settings.host.slice(0, lastColonIndex);\n          port = settings.host.slice(lastColonIndex + 1);\n        } else {\n          address = settings.host;\n        }\n      }\n    }\n  }\n  return {\n    address: address,\n    port: port ? parseInt(port, 10) : undefined,\n  };\n}\n\nfunction addAttributes(\n  span,\n  reference,\n) {\n  const firestoreApp = reference.firestore.app;\n  const firestoreOptions = firestoreApp.options;\n  const json = reference.firestore.toJSON() || {};\n  const settings = json.settings || {};\n\n  const attributes = {\n    [semanticConventions.ATTR_DB_COLLECTION_NAME]: reference.path,\n    [semanticConventions.ATTR_DB_NAMESPACE]: firestoreApp.name,\n    [semanticConventions.ATTR_DB_SYSTEM_NAME]: 'firebase.firestore',\n    'firebase.firestore.type': reference.type,\n    'firebase.firestore.options.projectId': firestoreOptions.projectId,\n    'firebase.firestore.options.appId': firestoreOptions.appId,\n    'firebase.firestore.options.messagingSenderId': firestoreOptions.messagingSenderId,\n    'firebase.firestore.options.storageBucket': firestoreOptions.storageBucket,\n  };\n\n  const { address, port } = getPortAndAddress(settings);\n\n  if (address) {\n    attributes[semanticConventions.ATTR_SERVER_ADDRESS] = address;\n  }\n  if (port) {\n    attributes[semanticConventions.ATTR_SERVER_PORT] = port;\n  }\n\n  span.setAttributes(attributes);\n}\n\nexports.getPortAndAddress = getPortAndAddress;\nexports.patchFirestore = patchFirestore;\n//# sourceMappingURL=firestore.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/otel/patches/firestore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/genericPool.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/genericPool.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationGenericPool = __webpack_require__(/*! @opentelemetry/instrumentation-generic-pool */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_4b218768f7644d2d1f6d7b21ad191dda/node_modules/@opentelemetry/instrumentation-generic-pool/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'GenericPool';\n\nconst instrumentGenericPool = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, () => new instrumentationGenericPool.GenericPoolInstrumentation({}));\n\nconst _genericPoolIntegration = (() => {\n  let instrumentationWrappedCallback;\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      const instrumentation = instrumentGenericPool();\n      instrumentationWrappedCallback = nodeCore.instrumentWhenWrapped(instrumentation);\n    },\n\n    setup(client) {\n      instrumentationWrappedCallback?.(() =>\n        client.on('spanStart', span => {\n          const spanJSON = core.spanToJSON(span);\n\n          const spanDescription = spanJSON.description;\n\n          // typo in emitted span for version <= 0.38.0 of @opentelemetry/instrumentation-generic-pool\n          const isGenericPoolSpan =\n            spanDescription === 'generic-pool.aquire' || spanDescription === 'generic-pool.acquire';\n\n          if (isGenericPoolSpan) {\n            span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, 'auto.db.otel.generic_pool');\n          }\n        }),\n      );\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [generic-pool](https://www.npmjs.com/package/generic-pool) library.\n *\n * For more information, see the [`genericPoolIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/genericpool/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.genericPoolIntegration()],\n * });\n * ```\n */\nconst genericPoolIntegration = core.defineIntegration(_genericPoolIntegration);\n\nexports.genericPoolIntegration = genericPoolIntegration;\nexports.instrumentGenericPool = instrumentGenericPool;\n//# sourceMappingURL=genericPool.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvZ2VuZXJpY1Bvb2wuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsbUNBQW1DLG1CQUFPLENBQUMsd05BQTZDO0FBQ3hGLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7O0FBRTVDOztBQUVBLGtKQUFrSjs7QUFFbEo7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQSw4QkFBOEI7QUFDOUIsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGdlbmVyaWNQb29sLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBpbnN0cnVtZW50YXRpb25HZW5lcmljUG9vbCA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1nZW5lcmljLXBvb2wnKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdHZW5lcmljUG9vbCc7XG5cbmNvbnN0IGluc3RydW1lbnRHZW5lcmljUG9vbCA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoSU5URUdSQVRJT05fTkFNRSwgKCkgPT4gbmV3IGluc3RydW1lbnRhdGlvbkdlbmVyaWNQb29sLkdlbmVyaWNQb29sSW5zdHJ1bWVudGF0aW9uKHt9KSk7XG5cbmNvbnN0IF9nZW5lcmljUG9vbEludGVncmF0aW9uID0gKCgpID0+IHtcbiAgbGV0IGluc3RydW1lbnRhdGlvbldyYXBwZWRDYWxsYmFjaztcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgc2V0dXBPbmNlKCkge1xuICAgICAgY29uc3QgaW5zdHJ1bWVudGF0aW9uID0gaW5zdHJ1bWVudEdlbmVyaWNQb29sKCk7XG4gICAgICBpbnN0cnVtZW50YXRpb25XcmFwcGVkQ2FsbGJhY2sgPSBub2RlQ29yZS5pbnN0cnVtZW50V2hlbldyYXBwZWQoaW5zdHJ1bWVudGF0aW9uKTtcbiAgICB9LFxuXG4gICAgc2V0dXAoY2xpZW50KSB7XG4gICAgICBpbnN0cnVtZW50YXRpb25XcmFwcGVkQ2FsbGJhY2s/LigoKSA9PlxuICAgICAgICBjbGllbnQub24oJ3NwYW5TdGFydCcsIHNwYW4gPT4ge1xuICAgICAgICAgIGNvbnN0IHNwYW5KU09OID0gY29yZS5zcGFuVG9KU09OKHNwYW4pO1xuXG4gICAgICAgICAgY29uc3Qgc3BhbkRlc2NyaXB0aW9uID0gc3BhbkpTT04uZGVzY3JpcHRpb247XG5cbiAgICAgICAgICAvLyB0eXBvIGluIGVtaXR0ZWQgc3BhbiBmb3IgdmVyc2lvbiA8PSAwLjM4LjAgb2YgQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWdlbmVyaWMtcG9vbFxuICAgICAgICAgIGNvbnN0IGlzR2VuZXJpY1Bvb2xTcGFuID1cbiAgICAgICAgICAgIHNwYW5EZXNjcmlwdGlvbiA9PT0gJ2dlbmVyaWMtcG9vbC5hcXVpcmUnIHx8IHNwYW5EZXNjcmlwdGlvbiA9PT0gJ2dlbmVyaWMtcG9vbC5hY3F1aXJlJztcblxuICAgICAgICAgIGlmIChpc0dlbmVyaWNQb29sU3Bhbikge1xuICAgICAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGUoY29yZS5TRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09SSUdJTiwgJ2F1dG8uZGIub3RlbC5nZW5lcmljX3Bvb2wnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pLFxuICAgICAgKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZHMgU2VudHJ5IHRyYWNpbmcgaW5zdHJ1bWVudGF0aW9uIGZvciB0aGUgW2dlbmVyaWMtcG9vbF0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZ2VuZXJpYy1wb29sKSBsaWJyYXJ5LlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIFtgZ2VuZXJpY1Bvb2xJbnRlZ3JhdGlvbmAgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvbm9kZS9jb25maWd1cmF0aW9uL2ludGVncmF0aW9ucy9nZW5lcmljcG9vbC8pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgaW50ZWdyYXRpb25zOiBbU2VudHJ5LmdlbmVyaWNQb29sSW50ZWdyYXRpb24oKV0sXG4gKiB9KTtcbiAqIGBgYFxuICovXG5jb25zdCBnZW5lcmljUG9vbEludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfZ2VuZXJpY1Bvb2xJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydHMuZ2VuZXJpY1Bvb2xJbnRlZ3JhdGlvbiA9IGdlbmVyaWNQb29sSW50ZWdyYXRpb247XG5leHBvcnRzLmluc3RydW1lbnRHZW5lcmljUG9vbCA9IGluc3RydW1lbnRHZW5lcmljUG9vbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdlbmVyaWNQb29sLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/genericPool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/google-genai/index.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/google-genai/index.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst instrumentation = __webpack_require__(/*! ./instrumentation.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/google-genai/instrumentation.js\");\n\nconst instrumentGoogleGenAI = nodeCore.generateInstrumentOnce(\n  core.GOOGLE_GENAI_INTEGRATION_NAME,\n  options => new instrumentation.SentryGoogleGenAiInstrumentation(options),\n);\n\nconst _googleGenAIIntegration = ((options = {}) => {\n  return {\n    name: core.GOOGLE_GENAI_INTEGRATION_NAME,\n    setupOnce() {\n      instrumentGoogleGenAI(options);\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the Google Generative AI SDK.\n *\n * This integration is enabled by default.\n *\n * When configured, this integration automatically instruments Google GenAI SDK client instances\n * to capture telemetry data following OpenTelemetry Semantic Conventions for Generative AI.\n *\n * @example\n * ```javascript\n * import * as Sentry from '@sentry/node';\n *\n * Sentry.init({\n *   integrations: [Sentry.googleGenAiIntegration()],\n * });\n * ```\n *\n * ## Options\n *\n * - `recordInputs`: Whether to record prompt messages (default: respects `sendDefaultPii` client option)\n * - `recordOutputs`: Whether to record response text (default: respects `sendDefaultPii` client option)\n *\n * ### Default Behavior\n *\n * By default, the integration will:\n * - Record inputs and outputs ONLY if `sendDefaultPii` is set to `true` in your Sentry client options\n * - Otherwise, inputs and outputs are NOT recorded unless explicitly enabled\n *\n * @example\n * ```javascript\n * // Record inputs and outputs when sendDefaultPii is false\n * Sentry.init({\n *   integrations: [\n *     Sentry.googleGenAiIntegration({\n *       recordInputs: true,\n *       recordOutputs: true\n *     })\n *   ],\n * });\n *\n * // Never record inputs/outputs regardless of sendDefaultPii\n * Sentry.init({\n *   sendDefaultPii: true,\n *   integrations: [\n *     Sentry.googleGenAiIntegration({\n *       recordInputs: false,\n *       recordOutputs: false\n *     })\n *   ],\n * });\n * ```\n *\n */\nconst googleGenAIIntegration = core.defineIntegration(_googleGenAIIntegration);\n\nexports.googleGenAIIntegration = googleGenAIIntegration;\nexports.instrumentGoogleGenAI = instrumentGoogleGenAI;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvZ29vZ2xlLWdlbmFpL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7QUFDNUMsd0JBQXdCLG1CQUFPLENBQUMsc0tBQXNCOztBQUV0RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsOEJBQThCO0FBQzlCLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxnb29nbGUtZ2VuYWlcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5jb25zdCBub2RlQ29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZS1jb3JlJyk7XG5jb25zdCBpbnN0cnVtZW50YXRpb24gPSByZXF1aXJlKCcuL2luc3RydW1lbnRhdGlvbi5qcycpO1xuXG5jb25zdCBpbnN0cnVtZW50R29vZ2xlR2VuQUkgPSBub2RlQ29yZS5nZW5lcmF0ZUluc3RydW1lbnRPbmNlKFxuICBjb3JlLkdPT0dMRV9HRU5BSV9JTlRFR1JBVElPTl9OQU1FLFxuICBvcHRpb25zID0+IG5ldyBpbnN0cnVtZW50YXRpb24uU2VudHJ5R29vZ2xlR2VuQWlJbnN0cnVtZW50YXRpb24ob3B0aW9ucyksXG4pO1xuXG5jb25zdCBfZ29vZ2xlR2VuQUlJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogY29yZS5HT09HTEVfR0VOQUlfSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBpbnN0cnVtZW50R29vZ2xlR2VuQUkob3B0aW9ucyk7XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuLyoqXG4gKiBBZGRzIFNlbnRyeSB0cmFjaW5nIGluc3RydW1lbnRhdGlvbiBmb3IgdGhlIEdvb2dsZSBHZW5lcmF0aXZlIEFJIFNESy5cbiAqXG4gKiBUaGlzIGludGVncmF0aW9uIGlzIGVuYWJsZWQgYnkgZGVmYXVsdC5cbiAqXG4gKiBXaGVuIGNvbmZpZ3VyZWQsIHRoaXMgaW50ZWdyYXRpb24gYXV0b21hdGljYWxseSBpbnN0cnVtZW50cyBHb29nbGUgR2VuQUkgU0RLIGNsaWVudCBpbnN0YW5jZXNcbiAqIHRvIGNhcHR1cmUgdGVsZW1ldHJ5IGRhdGEgZm9sbG93aW5nIE9wZW5UZWxlbWV0cnkgU2VtYW50aWMgQ29udmVudGlvbnMgZm9yIEdlbmVyYXRpdmUgQUkuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCAqIGFzIFNlbnRyeSBmcm9tICdAc2VudHJ5L25vZGUnO1xuICpcbiAqIFNlbnRyeS5pbml0KHtcbiAqICAgaW50ZWdyYXRpb25zOiBbU2VudHJ5Lmdvb2dsZUdlbkFpSW50ZWdyYXRpb24oKV0sXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqICMjIE9wdGlvbnNcbiAqXG4gKiAtIGByZWNvcmRJbnB1dHNgOiBXaGV0aGVyIHRvIHJlY29yZCBwcm9tcHQgbWVzc2FnZXMgKGRlZmF1bHQ6IHJlc3BlY3RzIGBzZW5kRGVmYXVsdFBpaWAgY2xpZW50IG9wdGlvbilcbiAqIC0gYHJlY29yZE91dHB1dHNgOiBXaGV0aGVyIHRvIHJlY29yZCByZXNwb25zZSB0ZXh0IChkZWZhdWx0OiByZXNwZWN0cyBgc2VuZERlZmF1bHRQaWlgIGNsaWVudCBvcHRpb24pXG4gKlxuICogIyMjIERlZmF1bHQgQmVoYXZpb3JcbiAqXG4gKiBCeSBkZWZhdWx0LCB0aGUgaW50ZWdyYXRpb24gd2lsbDpcbiAqIC0gUmVjb3JkIGlucHV0cyBhbmQgb3V0cHV0cyBPTkxZIGlmIGBzZW5kRGVmYXVsdFBpaWAgaXMgc2V0IHRvIGB0cnVlYCBpbiB5b3VyIFNlbnRyeSBjbGllbnQgb3B0aW9uc1xuICogLSBPdGhlcndpc2UsIGlucHV0cyBhbmQgb3V0cHV0cyBhcmUgTk9UIHJlY29yZGVkIHVubGVzcyBleHBsaWNpdGx5IGVuYWJsZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgamF2YXNjcmlwdFxuICogLy8gUmVjb3JkIGlucHV0cyBhbmQgb3V0cHV0cyB3aGVuIHNlbmREZWZhdWx0UGlpIGlzIGZhbHNlXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgIGludGVncmF0aW9uczogW1xuICogICAgIFNlbnRyeS5nb29nbGVHZW5BaUludGVncmF0aW9uKHtcbiAqICAgICAgIHJlY29yZElucHV0czogdHJ1ZSxcbiAqICAgICAgIHJlY29yZE91dHB1dHM6IHRydWVcbiAqICAgICB9KVxuICogICBdLFxuICogfSk7XG4gKlxuICogLy8gTmV2ZXIgcmVjb3JkIGlucHV0cy9vdXRwdXRzIHJlZ2FyZGxlc3Mgb2Ygc2VuZERlZmF1bHRQaWlcbiAqIFNlbnRyeS5pbml0KHtcbiAqICAgc2VuZERlZmF1bHRQaWk6IHRydWUsXG4gKiAgIGludGVncmF0aW9uczogW1xuICogICAgIFNlbnRyeS5nb29nbGVHZW5BaUludGVncmF0aW9uKHtcbiAqICAgICAgIHJlY29yZElucHV0czogZmFsc2UsXG4gKiAgICAgICByZWNvcmRPdXRwdXRzOiBmYWxzZVxuICogICAgIH0pXG4gKiAgIF0sXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqL1xuY29uc3QgZ29vZ2xlR2VuQUlJbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oX2dvb2dsZUdlbkFJSW50ZWdyYXRpb24pO1xuXG5leHBvcnRzLmdvb2dsZUdlbkFJSW50ZWdyYXRpb24gPSBnb29nbGVHZW5BSUludGVncmF0aW9uO1xuZXhwb3J0cy5pbnN0cnVtZW50R29vZ2xlR2VuQUkgPSBpbnN0cnVtZW50R29vZ2xlR2VuQUk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/google-genai/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/google-genai/instrumentation.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/google-genai/instrumentation.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\n\nconst supportedVersions = ['>=0.10.0 <2'];\n\n/**\n * Represents the patched shape of the Google GenAI module export.\n */\n\n/**\n * Sentry Google GenAI instrumentation using OpenTelemetry.\n */\nclass SentryGoogleGenAiInstrumentation extends instrumentation.InstrumentationBase {\n   constructor(config = {}) {\n    super('@sentry/instrumentation-google-genai', core.SDK_VERSION, config);\n  }\n\n  /**\n   * Initializes the instrumentation by defining the modules to be patched.\n   */\n   init() {\n    const module = new instrumentation.InstrumentationNodeModuleDefinition(\n      '@google/genai',\n      supportedVersions,\n      exports => this._patch(exports),\n      exports => exports,\n      // In CJS, @google/genai re-exports from (dist/node/index.cjs) file.\n      // Patching only the root module sometimes misses the real implementation or\n      // gets overwritten when that file is loaded. We add a file-level patch so that\n      // _patch runs again on the concrete implementation\n      [\n        new instrumentation.InstrumentationNodeModuleFile(\n          '@google/genai/dist/node/index.cjs',\n          supportedVersions,\n          exports => this._patch(exports),\n          exports => exports,\n        ),\n      ],\n    );\n    return module;\n  }\n\n  /**\n   * Core patch logic applying instrumentation to the Google GenAI client constructor.\n   */\n   _patch(exports) {\n    const Original = exports.GoogleGenAI;\n    const config = this.getConfig();\n\n    if (typeof Original !== 'function') {\n      return exports;\n    }\n\n    const WrappedGoogleGenAI = function ( ...args) {\n      const instance = Reflect.construct(Original, args);\n      const client = core.getClient();\n      const defaultPii = Boolean(client?.getOptions().sendDefaultPii);\n\n      const typedConfig = config;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      const recordInputs = typedConfig?.recordInputs ?? defaultPii;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      const recordOutputs = typedConfig?.recordOutputs ?? defaultPii;\n\n      return core.instrumentGoogleGenAIClient(instance, {\n        recordInputs,\n        recordOutputs,\n      });\n    };\n\n    // Preserve static and prototype chains\n    Object.setPrototypeOf(WrappedGoogleGenAI, Original);\n    Object.setPrototypeOf(WrappedGoogleGenAI.prototype, Original.prototype);\n\n    for (const key of Object.getOwnPropertyNames(Original)) {\n      if (!['length', 'name', 'prototype'].includes(key)) {\n        const descriptor = Object.getOwnPropertyDescriptor(Original, key);\n        if (descriptor) {\n          Object.defineProperty(WrappedGoogleGenAI, key, descriptor);\n        }\n      }\n    }\n\n    // Replace google genai exports with the wrapped constructor\n    core.replaceExports(exports, 'GoogleGenAI', WrappedGoogleGenAI);\n\n    return exports;\n  }\n}\n\nexports.SentryGoogleGenAiInstrumentation = SentryGoogleGenAiInstrumentation;\n//# sourceMappingURL=instrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvZ29vZ2xlLWdlbmFpL2luc3RydW1lbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxDQUFDLG9EQUFvRCx5Q0FBeUMsMENBQTBDLDhDQUE4QyxvREFBb0QscURBQXFELGlCQUFpQjs7QUFFaFQsd0JBQXdCLG1CQUFPLENBQUMsOExBQWdDO0FBQ2hFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYzs7QUFFbkM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsd0NBQXdDO0FBQ3hDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGdvb2dsZS1nZW5haVxcaW5zdHJ1bWVudGF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIjtnbG9iYWxUaGlzW1wiX3NlbnRyeVJld3JpdGVzVHVubmVsUGF0aFwiXSA9IHVuZGVmaW5lZDtnbG9iYWxUaGlzW1wiU0VOVFJZX1JFTEVBU0VcIl0gPSB1bmRlZmluZWQ7Z2xvYmFsVGhpc1tcIl9zZW50cnlCYXNlUGF0aFwiXSA9IHVuZGVmaW5lZDtnbG9iYWxUaGlzW1wiX3NlbnRyeU5leHRKc1ZlcnNpb25cIl0gPSBcIjE1LjUuNFwiO2dsb2JhbFRoaXNbXCJfc2VudHJ5UmV3cml0ZUZyYW1lc0Rpc3REaXJcIl0gPSBcIi5uZXh0XCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbmNvbnN0IGluc3RydW1lbnRhdGlvbiA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbicpO1xuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuXG5jb25zdCBzdXBwb3J0ZWRWZXJzaW9ucyA9IFsnPj0wLjEwLjAgPDInXTtcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBwYXRjaGVkIHNoYXBlIG9mIHRoZSBHb29nbGUgR2VuQUkgbW9kdWxlIGV4cG9ydC5cbiAqL1xuXG4vKipcbiAqIFNlbnRyeSBHb29nbGUgR2VuQUkgaW5zdHJ1bWVudGF0aW9uIHVzaW5nIE9wZW5UZWxlbWV0cnkuXG4gKi9cbmNsYXNzIFNlbnRyeUdvb2dsZUdlbkFpSW5zdHJ1bWVudGF0aW9uIGV4dGVuZHMgaW5zdHJ1bWVudGF0aW9uLkluc3RydW1lbnRhdGlvbkJhc2Uge1xuICAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICBzdXBlcignQHNlbnRyeS9pbnN0cnVtZW50YXRpb24tZ29vZ2xlLWdlbmFpJywgY29yZS5TREtfVkVSU0lPTiwgY29uZmlnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbml0aWFsaXplcyB0aGUgaW5zdHJ1bWVudGF0aW9uIGJ5IGRlZmluaW5nIHRoZSBtb2R1bGVzIHRvIGJlIHBhdGNoZWQuXG4gICAqL1xuICAgaW5pdCgpIHtcbiAgICBjb25zdCBtb2R1bGUgPSBuZXcgaW5zdHJ1bWVudGF0aW9uLkluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVEZWZpbml0aW9uKFxuICAgICAgJ0Bnb29nbGUvZ2VuYWknLFxuICAgICAgc3VwcG9ydGVkVmVyc2lvbnMsXG4gICAgICBleHBvcnRzID0+IHRoaXMuX3BhdGNoKGV4cG9ydHMpLFxuICAgICAgZXhwb3J0cyA9PiBleHBvcnRzLFxuICAgICAgLy8gSW4gQ0pTLCBAZ29vZ2xlL2dlbmFpIHJlLWV4cG9ydHMgZnJvbSAoZGlzdC9ub2RlL2luZGV4LmNqcykgZmlsZS5cbiAgICAgIC8vIFBhdGNoaW5nIG9ubHkgdGhlIHJvb3QgbW9kdWxlIHNvbWV0aW1lcyBtaXNzZXMgdGhlIHJlYWwgaW1wbGVtZW50YXRpb24gb3JcbiAgICAgIC8vIGdldHMgb3ZlcndyaXR0ZW4gd2hlbiB0aGF0IGZpbGUgaXMgbG9hZGVkLiBXZSBhZGQgYSBmaWxlLWxldmVsIHBhdGNoIHNvIHRoYXRcbiAgICAgIC8vIF9wYXRjaCBydW5zIGFnYWluIG9uIHRoZSBjb25jcmV0ZSBpbXBsZW1lbnRhdGlvblxuICAgICAgW1xuICAgICAgICBuZXcgaW5zdHJ1bWVudGF0aW9uLkluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVGaWxlKFxuICAgICAgICAgICdAZ29vZ2xlL2dlbmFpL2Rpc3Qvbm9kZS9pbmRleC5janMnLFxuICAgICAgICAgIHN1cHBvcnRlZFZlcnNpb25zLFxuICAgICAgICAgIGV4cG9ydHMgPT4gdGhpcy5fcGF0Y2goZXhwb3J0cyksXG4gICAgICAgICAgZXhwb3J0cyA9PiBleHBvcnRzLFxuICAgICAgICApLFxuICAgICAgXSxcbiAgICApO1xuICAgIHJldHVybiBtb2R1bGU7XG4gIH1cblxuICAvKipcbiAgICogQ29yZSBwYXRjaCBsb2dpYyBhcHBseWluZyBpbnN0cnVtZW50YXRpb24gdG8gdGhlIEdvb2dsZSBHZW5BSSBjbGllbnQgY29uc3RydWN0b3IuXG4gICAqL1xuICAgX3BhdGNoKGV4cG9ydHMpIHtcbiAgICBjb25zdCBPcmlnaW5hbCA9IGV4cG9ydHMuR29vZ2xlR2VuQUk7XG4gICAgY29uc3QgY29uZmlnID0gdGhpcy5nZXRDb25maWcoKTtcblxuICAgIGlmICh0eXBlb2YgT3JpZ2luYWwgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiBleHBvcnRzO1xuICAgIH1cblxuICAgIGNvbnN0IFdyYXBwZWRHb29nbGVHZW5BSSA9IGZ1bmN0aW9uICggLi4uYXJncykge1xuICAgICAgY29uc3QgaW5zdGFuY2UgPSBSZWZsZWN0LmNvbnN0cnVjdChPcmlnaW5hbCwgYXJncyk7XG4gICAgICBjb25zdCBjbGllbnQgPSBjb3JlLmdldENsaWVudCgpO1xuICAgICAgY29uc3QgZGVmYXVsdFBpaSA9IEJvb2xlYW4oY2xpZW50Py5nZXRPcHRpb25zKCkuc2VuZERlZmF1bHRQaWkpO1xuXG4gICAgICBjb25zdCB0eXBlZENvbmZpZyA9IGNvbmZpZztcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICAgIGNvbnN0IHJlY29yZElucHV0cyA9IHR5cGVkQ29uZmlnPy5yZWNvcmRJbnB1dHMgPz8gZGVmYXVsdFBpaTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICAgIGNvbnN0IHJlY29yZE91dHB1dHMgPSB0eXBlZENvbmZpZz8ucmVjb3JkT3V0cHV0cyA/PyBkZWZhdWx0UGlpO1xuXG4gICAgICByZXR1cm4gY29yZS5pbnN0cnVtZW50R29vZ2xlR2VuQUlDbGllbnQoaW5zdGFuY2UsIHtcbiAgICAgICAgcmVjb3JkSW5wdXRzLFxuICAgICAgICByZWNvcmRPdXRwdXRzLFxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIFByZXNlcnZlIHN0YXRpYyBhbmQgcHJvdG90eXBlIGNoYWluc1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihXcmFwcGVkR29vZ2xlR2VuQUksIE9yaWdpbmFsKTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoV3JhcHBlZEdvb2dsZUdlbkFJLnByb3RvdHlwZSwgT3JpZ2luYWwucHJvdG90eXBlKTtcblxuICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE9yaWdpbmFsKSkge1xuICAgICAgaWYgKCFbJ2xlbmd0aCcsICduYW1lJywgJ3Byb3RvdHlwZSddLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT3JpZ2luYWwsIGtleSk7XG4gICAgICAgIGlmIChkZXNjcmlwdG9yKSB7XG4gICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyYXBwZWRHb29nbGVHZW5BSSwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJlcGxhY2UgZ29vZ2xlIGdlbmFpIGV4cG9ydHMgd2l0aCB0aGUgd3JhcHBlZCBjb25zdHJ1Y3RvclxuICAgIGNvcmUucmVwbGFjZUV4cG9ydHMoZXhwb3J0cywgJ0dvb2dsZUdlbkFJJywgV3JhcHBlZEdvb2dsZUdlbkFJKTtcblxuICAgIHJldHVybiBleHBvcnRzO1xuICB9XG59XG5cbmV4cG9ydHMuU2VudHJ5R29vZ2xlR2VuQWlJbnN0cnVtZW50YXRpb24gPSBTZW50cnlHb29nbGVHZW5BaUluc3RydW1lbnRhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydW1lbnRhdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/google-genai/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/graphql.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/graphql.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentationGraphql = __webpack_require__(/*! @opentelemetry/instrumentation-graphql */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f0d63e255d082b0dc39e7f38a5f177a4/node_modules/@opentelemetry/instrumentation-graphql/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst opentelemetry = __webpack_require__(/*! @sentry/opentelemetry */ \"(rsc)/./node_modules/.pnpm/@sentry+opentelemetry@10.16_6ab421456e2f0bf04c66c14f54985fe1/node_modules/@sentry/opentelemetry/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Graphql';\n\nconst instrumentGraphql = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  instrumentationGraphql.GraphQLInstrumentation,\n  (_options) => {\n    const options = getOptionsWithDefaults(_options);\n\n    return {\n      ...options,\n      responseHook(span, result) {\n        nodeCore.addOriginToSpan(span, 'auto.graphql.otel.graphql');\n\n        // We want to ensure spans are marked as errored if there are errors in the result\n        // We only do that if the span is not already marked with a status\n        const resultWithMaybeError = result ;\n        if (resultWithMaybeError.errors?.length && !core.spanToJSON(span).status) {\n          span.setStatus({ code: api.SpanStatusCode.ERROR });\n        }\n\n        const attributes = core.spanToJSON(span).data;\n\n        // If operation.name is not set, we fall back to use operation.type only\n        const operationType = attributes['graphql.operation.type'];\n        const operationName = attributes['graphql.operation.name'];\n\n        if (options.useOperationNameForRootSpan && operationType) {\n          const rootSpan = core.getRootSpan(span);\n          const rootSpanAttributes = core.spanToJSON(rootSpan).data;\n\n          const existingOperations = rootSpanAttributes[opentelemetry.SEMANTIC_ATTRIBUTE_SENTRY_GRAPHQL_OPERATION] || [];\n\n          const newOperation = operationName ? `${operationType} ${operationName}` : `${operationType}`;\n\n          // We keep track of each operation on the root span\n          // This can either be a string, or an array of strings (if there are multiple operations)\n          if (Array.isArray(existingOperations)) {\n            (existingOperations ).push(newOperation);\n            rootSpan.setAttribute(opentelemetry.SEMANTIC_ATTRIBUTE_SENTRY_GRAPHQL_OPERATION, existingOperations);\n          } else if (typeof existingOperations === 'string') {\n            rootSpan.setAttribute(opentelemetry.SEMANTIC_ATTRIBUTE_SENTRY_GRAPHQL_OPERATION, [existingOperations, newOperation]);\n          } else {\n            rootSpan.setAttribute(opentelemetry.SEMANTIC_ATTRIBUTE_SENTRY_GRAPHQL_OPERATION, newOperation);\n          }\n\n          if (!core.spanToJSON(rootSpan).data['original-description']) {\n            rootSpan.setAttribute('original-description', core.spanToJSON(rootSpan).description);\n          }\n          // Important for e.g. @sentry/aws-serverless because this would otherwise overwrite the name again\n          rootSpan.updateName(\n            `${core.spanToJSON(rootSpan).data['original-description']} (${getGraphqlOperationNamesFromAttribute(\n              existingOperations,\n            )})`,\n          );\n        }\n      },\n    };\n  },\n);\n\nconst _graphqlIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // We set defaults here, too, because otherwise we'd update the instrumentation config\n      // to the config without defaults, as `generateInstrumentOnce` automatically calls `setConfig(options)`\n      // when being called the second time\n      instrumentGraphql(getOptionsWithDefaults(options));\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [graphql](https://www.npmjs.com/package/graphql) library.\n *\n * For more information, see the [`graphqlIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/graphql/).\n *\n * @param {GraphqlOptions} options Configuration options for the GraphQL integration.\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.graphqlIntegration()],\n * });\n */\nconst graphqlIntegration = core.defineIntegration(_graphqlIntegration);\n\nfunction getOptionsWithDefaults(options) {\n  return {\n    ignoreResolveSpans: true,\n    ignoreTrivialResolveSpans: true,\n    useOperationNameForRootSpan: true,\n    ...options,\n  };\n}\n\n// copy from packages/opentelemetry/utils\nfunction getGraphqlOperationNamesFromAttribute(attr) {\n  if (Array.isArray(attr)) {\n    const sorted = attr.slice().sort();\n\n    // Up to 5 items, we just add all of them\n    if (sorted.length <= 5) {\n      return sorted.join(', ');\n    } else {\n      // Else, we add the first 5 and the diff of other operations\n      return `${sorted.slice(0, 5).join(', ')}, +${sorted.length - 5}`;\n    }\n  }\n\n  return `${attr}`;\n}\n\nexports.graphqlIntegration = graphqlIntegration;\nexports.instrumentGraphql = instrumentGraphql;\n//# sourceMappingURL=graphql.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/graphql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hapi/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hapi/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationHapi = __webpack_require__(/*! @opentelemetry/instrumentation-hapi */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_6b397dc3e3311301ccc171abf4cf88bb/node_modules/@opentelemetry/instrumentation-hapi/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst debugBuild = __webpack_require__(/*! ../../../debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js\");\n\nconst INTEGRATION_NAME = 'Hapi';\n\nconst instrumentHapi = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, () => new instrumentationHapi.HapiInstrumentation());\n\nconst _hapiIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentHapi();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for [Hapi](https://hapi.dev/).\n *\n * If you also want to capture errors, you need to call `setupHapiErrorHandler(server)` after you set up your server.\n *\n * For more information, see the [hapi documentation](https://docs.sentry.io/platforms/javascript/guides/hapi/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *   integrations: [Sentry.hapiIntegration()],\n * })\n * ```\n */\nconst hapiIntegration = core.defineIntegration(_hapiIntegration);\n\nfunction isErrorEvent(event) {\n  return !!(event && typeof event === 'object' && 'error' in event && event.error);\n}\n\nfunction sendErrorToSentry(errorData) {\n  core.captureException(errorData, {\n    mechanism: {\n      type: 'auto.function.hapi',\n      handled: false,\n    },\n  });\n}\n\nconst hapiErrorPlugin = {\n  name: 'SentryHapiErrorPlugin',\n  version: core.SDK_VERSION,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register: async function (serverArg) {\n    const server = serverArg ;\n\n    server.events.on({ name: 'request', channels: ['error'] }, (request, event) => {\n      if (core.getIsolationScope() !== core.getDefaultIsolationScope()) {\n        const route = request.route;\n        if (route.path) {\n          core.getIsolationScope().setTransactionName(`${route.method.toUpperCase()} ${route.path}`);\n        }\n      } else {\n        debugBuild.DEBUG_BUILD &&\n          core.debug.warn('Isolation scope is still the default isolation scope - skipping setting transactionName');\n      }\n\n      if (isErrorEvent(event)) {\n        sendErrorToSentry(event.error);\n      }\n    });\n  },\n};\n\n/**\n * Add a Hapi plugin to capture errors to Sentry.\n *\n * @param server The Hapi server to attach the error handler to\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n * const Hapi = require('@hapi/hapi');\n *\n * const init = async () => {\n *   const server = Hapi.server();\n *\n *   // all your routes here\n *\n *   await Sentry.setupHapiErrorHandler(server);\n *\n *   await server.start();\n * };\n * ```\n */\nasync function setupHapiErrorHandler(server) {\n  await server.register(hapiErrorPlugin);\n\n  // Sadly, middleware spans do not go through `requestHook`, so we handle those here\n  // We register this hook in this method, because if we register it in the integration `setup`,\n  // it would always run even for users that are not even using hapi\n  const client = core.getClient();\n  if (client) {\n    client.on('spanStart', span => {\n      addHapiSpanAttributes(span);\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  nodeCore.ensureIsWrapped(server.register, 'hapi');\n}\n\nfunction addHapiSpanAttributes(span) {\n  const attributes = core.spanToJSON(span).data;\n\n  // this is one of: router, plugin, server.ext\n  const type = attributes['hapi.type'];\n\n  // If this is already set, or we have no Hapi span, no need to process again...\n  if (attributes[core.SEMANTIC_ATTRIBUTE_SENTRY_OP] || !type) {\n    return;\n  }\n\n  span.setAttributes({\n    [core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.hapi',\n    [core.SEMANTIC_ATTRIBUTE_SENTRY_OP]: `${type}.hapi`,\n  });\n}\n\nexports.hapiErrorPlugin = hapiErrorPlugin;\nexports.hapiIntegration = hapiIntegration;\nexports.instrumentHapi = instrumentHapi;\nexports.setupHapiErrorHandler = setupHapiErrorHandler;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvaGFwaS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSw0QkFBNEIsbUJBQU8sQ0FBQyx3TUFBcUM7QUFDekUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQyxtSUFBeUI7O0FBRXBEOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixzQ0FBc0M7QUFDN0Q7QUFDQTtBQUNBO0FBQ0EseURBQXlELDRCQUE0QixFQUFFLFdBQVc7QUFDbEc7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEMsS0FBSztBQUNqRCxHQUFHO0FBQ0g7O0FBRUEsdUJBQXVCO0FBQ3ZCLHVCQUF1QjtBQUN2QixzQkFBc0I7QUFDdEIsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGhhcGlcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBpbnN0cnVtZW50YXRpb25IYXBpID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWhhcGknKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcbmNvbnN0IGRlYnVnQnVpbGQgPSByZXF1aXJlKCcuLi8uLi8uLi9kZWJ1Zy1idWlsZC5qcycpO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ0hhcGknO1xuXG5jb25zdCBpbnN0cnVtZW50SGFwaSA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoSU5URUdSQVRJT05fTkFNRSwgKCkgPT4gbmV3IGluc3RydW1lbnRhdGlvbkhhcGkuSGFwaUluc3RydW1lbnRhdGlvbigpKTtcblxuY29uc3QgX2hhcGlJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBpbnN0cnVtZW50SGFwaSgpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbi8qKlxuICogQWRkcyBTZW50cnkgdHJhY2luZyBpbnN0cnVtZW50YXRpb24gZm9yIFtIYXBpXShodHRwczovL2hhcGkuZGV2LykuXG4gKlxuICogSWYgeW91IGFsc28gd2FudCB0byBjYXB0dXJlIGVycm9ycywgeW91IG5lZWQgdG8gY2FsbCBgc2V0dXBIYXBpRXJyb3JIYW5kbGVyKHNlcnZlcilgIGFmdGVyIHlvdSBzZXQgdXAgeW91ciBzZXJ2ZXIuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgW2hhcGkgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvaGFwaS8pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgIGludGVncmF0aW9uczogW1NlbnRyeS5oYXBpSW50ZWdyYXRpb24oKV0sXG4gKiB9KVxuICogYGBgXG4gKi9cbmNvbnN0IGhhcGlJbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oX2hhcGlJbnRlZ3JhdGlvbik7XG5cbmZ1bmN0aW9uIGlzRXJyb3JFdmVudChldmVudCkge1xuICByZXR1cm4gISEoZXZlbnQgJiYgdHlwZW9mIGV2ZW50ID09PSAnb2JqZWN0JyAmJiAnZXJyb3InIGluIGV2ZW50ICYmIGV2ZW50LmVycm9yKTtcbn1cblxuZnVuY3Rpb24gc2VuZEVycm9yVG9TZW50cnkoZXJyb3JEYXRhKSB7XG4gIGNvcmUuY2FwdHVyZUV4Y2VwdGlvbihlcnJvckRhdGEsIHtcbiAgICBtZWNoYW5pc206IHtcbiAgICAgIHR5cGU6ICdhdXRvLmZ1bmN0aW9uLmhhcGknLFxuICAgICAgaGFuZGxlZDogZmFsc2UsXG4gICAgfSxcbiAgfSk7XG59XG5cbmNvbnN0IGhhcGlFcnJvclBsdWdpbiA9IHtcbiAgbmFtZTogJ1NlbnRyeUhhcGlFcnJvclBsdWdpbicsXG4gIHZlcnNpb246IGNvcmUuU0RLX1ZFUlNJT04sXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gIHJlZ2lzdGVyOiBhc3luYyBmdW5jdGlvbiAoc2VydmVyQXJnKSB7XG4gICAgY29uc3Qgc2VydmVyID0gc2VydmVyQXJnIDtcblxuICAgIHNlcnZlci5ldmVudHMub24oeyBuYW1lOiAncmVxdWVzdCcsIGNoYW5uZWxzOiBbJ2Vycm9yJ10gfSwgKHJlcXVlc3QsIGV2ZW50KSA9PiB7XG4gICAgICBpZiAoY29yZS5nZXRJc29sYXRpb25TY29wZSgpICE9PSBjb3JlLmdldERlZmF1bHRJc29sYXRpb25TY29wZSgpKSB7XG4gICAgICAgIGNvbnN0IHJvdXRlID0gcmVxdWVzdC5yb3V0ZTtcbiAgICAgICAgaWYgKHJvdXRlLnBhdGgpIHtcbiAgICAgICAgICBjb3JlLmdldElzb2xhdGlvblNjb3BlKCkuc2V0VHJhbnNhY3Rpb25OYW1lKGAke3JvdXRlLm1ldGhvZC50b1VwcGVyQ2FzZSgpfSAke3JvdXRlLnBhdGh9YCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRlYnVnQnVpbGQuREVCVUdfQlVJTEQgJiZcbiAgICAgICAgICBjb3JlLmRlYnVnLndhcm4oJ0lzb2xhdGlvbiBzY29wZSBpcyBzdGlsbCB0aGUgZGVmYXVsdCBpc29sYXRpb24gc2NvcGUgLSBza2lwcGluZyBzZXR0aW5nIHRyYW5zYWN0aW9uTmFtZScpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNFcnJvckV2ZW50KGV2ZW50KSkge1xuICAgICAgICBzZW5kRXJyb3JUb1NlbnRyeShldmVudC5lcnJvcik7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG59O1xuXG4vKipcbiAqIEFkZCBhIEhhcGkgcGx1Z2luIHRvIGNhcHR1cmUgZXJyb3JzIHRvIFNlbnRyeS5cbiAqXG4gKiBAcGFyYW0gc2VydmVyIFRoZSBIYXBpIHNlcnZlciB0byBhdHRhY2ggdGhlIGVycm9yIGhhbmRsZXIgdG9cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgamF2YXNjcmlwdFxuICogY29uc3QgU2VudHJ5ID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlJyk7XG4gKiBjb25zdCBIYXBpID0gcmVxdWlyZSgnQGhhcGkvaGFwaScpO1xuICpcbiAqIGNvbnN0IGluaXQgPSBhc3luYyAoKSA9PiB7XG4gKiAgIGNvbnN0IHNlcnZlciA9IEhhcGkuc2VydmVyKCk7XG4gKlxuICogICAvLyBhbGwgeW91ciByb3V0ZXMgaGVyZVxuICpcbiAqICAgYXdhaXQgU2VudHJ5LnNldHVwSGFwaUVycm9ySGFuZGxlcihzZXJ2ZXIpO1xuICpcbiAqICAgYXdhaXQgc2VydmVyLnN0YXJ0KCk7XG4gKiB9O1xuICogYGBgXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHNldHVwSGFwaUVycm9ySGFuZGxlcihzZXJ2ZXIpIHtcbiAgYXdhaXQgc2VydmVyLnJlZ2lzdGVyKGhhcGlFcnJvclBsdWdpbik7XG5cbiAgLy8gU2FkbHksIG1pZGRsZXdhcmUgc3BhbnMgZG8gbm90IGdvIHRocm91Z2ggYHJlcXVlc3RIb29rYCwgc28gd2UgaGFuZGxlIHRob3NlIGhlcmVcbiAgLy8gV2UgcmVnaXN0ZXIgdGhpcyBob29rIGluIHRoaXMgbWV0aG9kLCBiZWNhdXNlIGlmIHdlIHJlZ2lzdGVyIGl0IGluIHRoZSBpbnRlZ3JhdGlvbiBgc2V0dXBgLFxuICAvLyBpdCB3b3VsZCBhbHdheXMgcnVuIGV2ZW4gZm9yIHVzZXJzIHRoYXQgYXJlIG5vdCBldmVuIHVzaW5nIGhhcGlcbiAgY29uc3QgY2xpZW50ID0gY29yZS5nZXRDbGllbnQoKTtcbiAgaWYgKGNsaWVudCkge1xuICAgIGNsaWVudC5vbignc3BhblN0YXJ0Jywgc3BhbiA9PiB7XG4gICAgICBhZGRIYXBpU3BhbkF0dHJpYnV0ZXMoc3Bhbik7XG4gICAgfSk7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3VuYm91bmQtbWV0aG9kXG4gIG5vZGVDb3JlLmVuc3VyZUlzV3JhcHBlZChzZXJ2ZXIucmVnaXN0ZXIsICdoYXBpJyk7XG59XG5cbmZ1bmN0aW9uIGFkZEhhcGlTcGFuQXR0cmlidXRlcyhzcGFuKSB7XG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSBjb3JlLnNwYW5Ub0pTT04oc3BhbikuZGF0YTtcblxuICAvLyB0aGlzIGlzIG9uZSBvZjogcm91dGVyLCBwbHVnaW4sIHNlcnZlci5leHRcbiAgY29uc3QgdHlwZSA9IGF0dHJpYnV0ZXNbJ2hhcGkudHlwZSddO1xuXG4gIC8vIElmIHRoaXMgaXMgYWxyZWFkeSBzZXQsIG9yIHdlIGhhdmUgbm8gSGFwaSBzcGFuLCBubyBuZWVkIHRvIHByb2Nlc3MgYWdhaW4uLi5cbiAgaWYgKGF0dHJpYnV0ZXNbY29yZS5TRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09QXSB8fCAhdHlwZSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHNwYW4uc2V0QXR0cmlidXRlcyh7XG4gICAgW2NvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU5dOiAnYXV0by5odHRwLm90ZWwuaGFwaScsXG4gICAgW2NvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUF06IGAke3R5cGV9LmhhcGlgLFxuICB9KTtcbn1cblxuZXhwb3J0cy5oYXBpRXJyb3JQbHVnaW4gPSBoYXBpRXJyb3JQbHVnaW47XG5leHBvcnRzLmhhcGlJbnRlZ3JhdGlvbiA9IGhhcGlJbnRlZ3JhdGlvbjtcbmV4cG9ydHMuaW5zdHJ1bWVudEhhcGkgPSBpbnN0cnVtZW50SGFwaTtcbmV4cG9ydHMuc2V0dXBIYXBpRXJyb3JIYW5kbGVyID0gc2V0dXBIYXBpRXJyb3JIYW5kbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hapi/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/constants.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/constants.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst AttributeNames = {\n  HONO_TYPE: 'hono.type',\n  HONO_NAME: 'hono.name',\n} ;\n\nconst HonoTypes = {\n  MIDDLEWARE: 'middleware',\n  REQUEST_HANDLER: 'request_handler',\n} ;\n\nexports.AttributeNames = AttributeNames;\nexports.HonoTypes = HonoTypes;\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvaG9uby9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCO0FBQ3RCLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxob25vXFxjb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbmNvbnN0IEF0dHJpYnV0ZU5hbWVzID0ge1xuICBIT05PX1RZUEU6ICdob25vLnR5cGUnLFxuICBIT05PX05BTUU6ICdob25vLm5hbWUnLFxufSA7XG5cbmNvbnN0IEhvbm9UeXBlcyA9IHtcbiAgTUlERExFV0FSRTogJ21pZGRsZXdhcmUnLFxuICBSRVFVRVNUX0hBTkRMRVI6ICdyZXF1ZXN0X2hhbmRsZXInLFxufSA7XG5cbmV4cG9ydHMuQXR0cmlidXRlTmFtZXMgPSBBdHRyaWJ1dGVOYW1lcztcbmV4cG9ydHMuSG9ub1R5cGVzID0gSG9ub1R5cGVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst semanticConventions = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst debugBuild = __webpack_require__(/*! ../../../debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js\");\nconst constants = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/constants.js\");\nconst instrumentation = __webpack_require__(/*! ./instrumentation.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/instrumentation.js\");\n\nconst INTEGRATION_NAME = 'Hono';\n\nfunction addHonoSpanAttributes(span) {\n  const attributes = core.spanToJSON(span).data;\n  const type = attributes[constants.AttributeNames.HONO_TYPE];\n  if (attributes[core.SEMANTIC_ATTRIBUTE_SENTRY_OP] || !type) {\n    return;\n  }\n\n  span.setAttributes({\n    [core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.otel.hono',\n    [core.SEMANTIC_ATTRIBUTE_SENTRY_OP]: `${type}.hono`,\n  });\n\n  const name = attributes[constants.AttributeNames.HONO_NAME];\n  if (typeof name === 'string') {\n    span.updateName(name);\n  }\n\n  if (core.getIsolationScope() === core.getDefaultIsolationScope()) {\n    debugBuild.DEBUG_BUILD && core.debug.warn('Isolation scope is default isolation scope - skipping setting transactionName');\n    return;\n  }\n\n  const route = attributes[semanticConventions.ATTR_HTTP_ROUTE];\n  const method = attributes[semanticConventions.ATTR_HTTP_REQUEST_METHOD];\n  if (typeof route === 'string' && typeof method === 'string') {\n    core.getIsolationScope().setTransactionName(`${method} ${route}`);\n  }\n}\n\nconst instrumentHono = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new instrumentation.HonoInstrumentation({\n      responseHook: span => {\n        addHonoSpanAttributes(span);\n      },\n    }),\n);\n\nconst _honoIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentHono();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for [Hono](https://hono.dev/).\n *\n * If you also want to capture errors, you need to call `setupHonoErrorHandler(app)` after you set up your Hono server.\n *\n * For more information, see the [hono documentation](https://docs.sentry.io/platforms/javascript/guides/hono/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *   integrations: [Sentry.honoIntegration()],\n * })\n * ```\n */\nconst honoIntegration = core.defineIntegration(_honoIntegration);\n\nfunction honoRequestHandler() {\n  return async function sentryRequestMiddleware(context, next) {\n    const normalizedRequest = core.httpRequestToRequestData(context.req);\n    core.getIsolationScope().setSDKProcessingMetadata({ normalizedRequest });\n    await next();\n  };\n}\n\nfunction defaultShouldHandleError(context) {\n  const statusCode = context.res.status;\n  return statusCode >= 500;\n}\n\nfunction honoErrorHandler(options) {\n  return async function sentryErrorMiddleware(context, next) {\n    await next();\n\n    const shouldHandleError = options?.shouldHandleError || defaultShouldHandleError;\n    if (shouldHandleError(context)) {\n      (context.res ).sentry = core.captureException(context.error, {\n        mechanism: {\n          type: 'auto.middleware.hono',\n          handled: false,\n        },\n      });\n    }\n  };\n}\n\n/**\n * Add a Hono error handler to capture errors to Sentry.\n *\n * @param app The Hono instances\n * @param options Configuration options for the handler\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n * const { Hono } = require(\"hono\");\n *\n * const app = new Hono();\n *\n * Sentry.setupHonoErrorHandler(app);\n *\n * // Add your routes, etc.\n * ```\n */\nfunction setupHonoErrorHandler(\n  app,\n  options,\n) {\n  app.use(honoRequestHandler());\n  app.use(honoErrorHandler(options));\n  nodeCore.ensureIsWrapped(app.use, 'hono');\n}\n\nexports.honoIntegration = honoIntegration;\nexports.instrumentHono = instrumentHono;\nexports.setupHonoErrorHandler = setupHonoErrorHandler;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvaG9uby9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSw0QkFBNEIsbUJBQU8sQ0FBQyxzTEFBcUM7QUFDekUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQyxtSUFBeUI7QUFDcEQsa0JBQWtCLG1CQUFPLENBQUMsa0pBQWdCO0FBQzFDLHdCQUF3QixtQkFBTyxDQUFDLDhKQUFzQjs7QUFFdEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEMsS0FBSztBQUNqRCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxRQUFRLEVBQUUsTUFBTTtBQUNuRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxtQkFBbUI7QUFDM0U7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCLHNCQUFzQjtBQUN0Qiw2QkFBNkI7QUFDN0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBzZW50cnkrbm9kZUAxMC4xNi4wXFxub2RlX21vZHVsZXNcXEBzZW50cnlcXG5vZGVcXGJ1aWxkXFxjanNcXGludGVncmF0aW9uc1xcdHJhY2luZ1xcaG9ub1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbmNvbnN0IHNlbWFudGljQ29udmVudGlvbnMgPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9zZW1hbnRpYy1jb252ZW50aW9ucycpO1xuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3Qgbm9kZUNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUtY29yZScpO1xuY29uc3QgZGVidWdCdWlsZCA9IHJlcXVpcmUoJy4uLy4uLy4uL2RlYnVnLWJ1aWxkLmpzJyk7XG5jb25zdCBjb25zdGFudHMgPSByZXF1aXJlKCcuL2NvbnN0YW50cy5qcycpO1xuY29uc3QgaW5zdHJ1bWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbnN0cnVtZW50YXRpb24uanMnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdIb25vJztcblxuZnVuY3Rpb24gYWRkSG9ub1NwYW5BdHRyaWJ1dGVzKHNwYW4pIHtcbiAgY29uc3QgYXR0cmlidXRlcyA9IGNvcmUuc3BhblRvSlNPTihzcGFuKS5kYXRhO1xuICBjb25zdCB0eXBlID0gYXR0cmlidXRlc1tjb25zdGFudHMuQXR0cmlidXRlTmFtZXMuSE9OT19UWVBFXTtcbiAgaWYgKGF0dHJpYnV0ZXNbY29yZS5TRU1BTlRJQ19BVFRSSUJVVEVfU0VOVFJZX09QXSB8fCAhdHlwZSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHNwYW4uc2V0QXR0cmlidXRlcyh7XG4gICAgW2NvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU5dOiAnYXV0by5odHRwLm90ZWwuaG9ubycsXG4gICAgW2NvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUF06IGAke3R5cGV9Lmhvbm9gLFxuICB9KTtcblxuICBjb25zdCBuYW1lID0gYXR0cmlidXRlc1tjb25zdGFudHMuQXR0cmlidXRlTmFtZXMuSE9OT19OQU1FXTtcbiAgaWYgKHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJykge1xuICAgIHNwYW4udXBkYXRlTmFtZShuYW1lKTtcbiAgfVxuXG4gIGlmIChjb3JlLmdldElzb2xhdGlvblNjb3BlKCkgPT09IGNvcmUuZ2V0RGVmYXVsdElzb2xhdGlvblNjb3BlKCkpIHtcbiAgICBkZWJ1Z0J1aWxkLkRFQlVHX0JVSUxEICYmIGNvcmUuZGVidWcud2FybignSXNvbGF0aW9uIHNjb3BlIGlzIGRlZmF1bHQgaXNvbGF0aW9uIHNjb3BlIC0gc2tpcHBpbmcgc2V0dGluZyB0cmFuc2FjdGlvbk5hbWUnKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCByb3V0ZSA9IGF0dHJpYnV0ZXNbc2VtYW50aWNDb252ZW50aW9ucy5BVFRSX0hUVFBfUk9VVEVdO1xuICBjb25zdCBtZXRob2QgPSBhdHRyaWJ1dGVzW3NlbWFudGljQ29udmVudGlvbnMuQVRUUl9IVFRQX1JFUVVFU1RfTUVUSE9EXTtcbiAgaWYgKHR5cGVvZiByb3V0ZSA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIG1ldGhvZCA9PT0gJ3N0cmluZycpIHtcbiAgICBjb3JlLmdldElzb2xhdGlvblNjb3BlKCkuc2V0VHJhbnNhY3Rpb25OYW1lKGAke21ldGhvZH0gJHtyb3V0ZX1gKTtcbiAgfVxufVxuXG5jb25zdCBpbnN0cnVtZW50SG9ubyA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoXG4gIElOVEVHUkFUSU9OX05BTUUsXG4gICgpID0+XG4gICAgbmV3IGluc3RydW1lbnRhdGlvbi5Ib25vSW5zdHJ1bWVudGF0aW9uKHtcbiAgICAgIHJlc3BvbnNlSG9vazogc3BhbiA9PiB7XG4gICAgICAgIGFkZEhvbm9TcGFuQXR0cmlidXRlcyhzcGFuKTtcbiAgICAgIH0sXG4gICAgfSksXG4pO1xuXG5jb25zdCBfaG9ub0ludGVncmF0aW9uID0gKCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIGluc3RydW1lbnRIb25vKCk7XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuLyoqXG4gKiBBZGRzIFNlbnRyeSB0cmFjaW5nIGluc3RydW1lbnRhdGlvbiBmb3IgW0hvbm9dKGh0dHBzOi8vaG9uby5kZXYvKS5cbiAqXG4gKiBJZiB5b3UgYWxzbyB3YW50IHRvIGNhcHR1cmUgZXJyb3JzLCB5b3UgbmVlZCB0byBjYWxsIGBzZXR1cEhvbm9FcnJvckhhbmRsZXIoYXBwKWAgYWZ0ZXIgeW91IHNldCB1cCB5b3VyIEhvbm8gc2VydmVyLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIFtob25vIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vZG9jcy5zZW50cnkuaW8vcGxhdGZvcm1zL2phdmFzY3JpcHQvZ3VpZGVzL2hvbm8vKS5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgamF2YXNjcmlwdFxuICogY29uc3QgU2VudHJ5ID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlJyk7XG4gKlxuICogU2VudHJ5LmluaXQoe1xuICogICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkuaG9ub0ludGVncmF0aW9uKCldLFxuICogfSlcbiAqIGBgYFxuICovXG5jb25zdCBob25vSW50ZWdyYXRpb24gPSBjb3JlLmRlZmluZUludGVncmF0aW9uKF9ob25vSW50ZWdyYXRpb24pO1xuXG5mdW5jdGlvbiBob25vUmVxdWVzdEhhbmRsZXIoKSB7XG4gIHJldHVybiBhc3luYyBmdW5jdGlvbiBzZW50cnlSZXF1ZXN0TWlkZGxld2FyZShjb250ZXh0LCBuZXh0KSB7XG4gICAgY29uc3Qgbm9ybWFsaXplZFJlcXVlc3QgPSBjb3JlLmh0dHBSZXF1ZXN0VG9SZXF1ZXN0RGF0YShjb250ZXh0LnJlcSk7XG4gICAgY29yZS5nZXRJc29sYXRpb25TY29wZSgpLnNldFNES1Byb2Nlc3NpbmdNZXRhZGF0YSh7IG5vcm1hbGl6ZWRSZXF1ZXN0IH0pO1xuICAgIGF3YWl0IG5leHQoKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFNob3VsZEhhbmRsZUVycm9yKGNvbnRleHQpIHtcbiAgY29uc3Qgc3RhdHVzQ29kZSA9IGNvbnRleHQucmVzLnN0YXR1cztcbiAgcmV0dXJuIHN0YXR1c0NvZGUgPj0gNTAwO1xufVxuXG5mdW5jdGlvbiBob25vRXJyb3JIYW5kbGVyKG9wdGlvbnMpIHtcbiAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uIHNlbnRyeUVycm9yTWlkZGxld2FyZShjb250ZXh0LCBuZXh0KSB7XG4gICAgYXdhaXQgbmV4dCgpO1xuXG4gICAgY29uc3Qgc2hvdWxkSGFuZGxlRXJyb3IgPSBvcHRpb25zPy5zaG91bGRIYW5kbGVFcnJvciB8fCBkZWZhdWx0U2hvdWxkSGFuZGxlRXJyb3I7XG4gICAgaWYgKHNob3VsZEhhbmRsZUVycm9yKGNvbnRleHQpKSB7XG4gICAgICAoY29udGV4dC5yZXMgKS5zZW50cnkgPSBjb3JlLmNhcHR1cmVFeGNlcHRpb24oY29udGV4dC5lcnJvciwge1xuICAgICAgICBtZWNoYW5pc206IHtcbiAgICAgICAgICB0eXBlOiAnYXV0by5taWRkbGV3YXJlLmhvbm8nLFxuICAgICAgICAgIGhhbmRsZWQ6IGZhbHNlLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgfVxuICB9O1xufVxuXG4vKipcbiAqIEFkZCBhIEhvbm8gZXJyb3IgaGFuZGxlciB0byBjYXB0dXJlIGVycm9ycyB0byBTZW50cnkuXG4gKlxuICogQHBhcmFtIGFwcCBUaGUgSG9ubyBpbnN0YW5jZXNcbiAqIEBwYXJhbSBvcHRpb25zIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIGhhbmRsZXJcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgamF2YXNjcmlwdFxuICogY29uc3QgU2VudHJ5ID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlJyk7XG4gKiBjb25zdCB7IEhvbm8gfSA9IHJlcXVpcmUoXCJob25vXCIpO1xuICpcbiAqIGNvbnN0IGFwcCA9IG5ldyBIb25vKCk7XG4gKlxuICogU2VudHJ5LnNldHVwSG9ub0Vycm9ySGFuZGxlcihhcHApO1xuICpcbiAqIC8vIEFkZCB5b3VyIHJvdXRlcywgZXRjLlxuICogYGBgXG4gKi9cbmZ1bmN0aW9uIHNldHVwSG9ub0Vycm9ySGFuZGxlcihcbiAgYXBwLFxuICBvcHRpb25zLFxuKSB7XG4gIGFwcC51c2UoaG9ub1JlcXVlc3RIYW5kbGVyKCkpO1xuICBhcHAudXNlKGhvbm9FcnJvckhhbmRsZXIob3B0aW9ucykpO1xuICBub2RlQ29yZS5lbnN1cmVJc1dyYXBwZWQoYXBwLnVzZSwgJ2hvbm8nKTtcbn1cblxuZXhwb3J0cy5ob25vSW50ZWdyYXRpb24gPSBob25vSW50ZWdyYXRpb247XG5leHBvcnRzLmluc3RydW1lbnRIb25vID0gaW5zdHJ1bWVudEhvbm87XG5leHBvcnRzLnNldHVwSG9ub0Vycm9ySGFuZGxlciA9IHNldHVwSG9ub0Vycm9ySGFuZGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/instrumentation.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/instrumentation.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst constants = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/constants.js\");\n\nconst PACKAGE_NAME = '@sentry/instrumentation-hono';\nconst PACKAGE_VERSION = '0.0.1';\n\n/**\n * Hono instrumentation for OpenTelemetry\n */\nclass HonoInstrumentation extends instrumentation.InstrumentationBase {\n   constructor(config = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  /**\n   * Initialize the instrumentation.\n   */\n   init() {\n    return [\n      new instrumentation.InstrumentationNodeModuleDefinition('hono', ['>=4.0.0 <5'], moduleExports => this._patch(moduleExports)),\n    ];\n  }\n\n  /**\n   * Patches the module exports to instrument Hono.\n   */\n   _patch(moduleExports) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const instrumentation = this;\n\n    class WrappedHono extends moduleExports.Hono {\n       constructor(...args) {\n        super(...args);\n\n        instrumentation._wrap(this, 'get', instrumentation._patchHandler());\n        instrumentation._wrap(this, 'post', instrumentation._patchHandler());\n        instrumentation._wrap(this, 'put', instrumentation._patchHandler());\n        instrumentation._wrap(this, 'delete', instrumentation._patchHandler());\n        instrumentation._wrap(this, 'options', instrumentation._patchHandler());\n        instrumentation._wrap(this, 'patch', instrumentation._patchHandler());\n        instrumentation._wrap(this, 'all', instrumentation._patchHandler());\n        instrumentation._wrap(this, 'on', instrumentation._patchOnHandler());\n        instrumentation._wrap(this, 'use', instrumentation._patchMiddlewareHandler());\n      }\n    }\n\n    try {\n      moduleExports.Hono = WrappedHono;\n    } catch {\n      // This is a workaround for environments where direct assignment is not allowed.\n      return { ...moduleExports, Hono: WrappedHono };\n    }\n\n    return moduleExports;\n  }\n\n  /**\n   * Patches the route handler to instrument it.\n   */\n   _patchHandler() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const instrumentation = this;\n\n    return function (original) {\n      return function wrappedHandler( ...args) {\n        if (typeof args[0] === 'string') {\n          const path = args[0];\n          if (args.length === 1) {\n            return original.apply(this, [path]);\n          }\n\n          const handlers = args.slice(1);\n          return original.apply(this, [\n            path,\n            ...handlers.map(handler => instrumentation._wrapHandler(handler )),\n          ]);\n        }\n\n        return original.apply(\n          this,\n          args.map(handler => instrumentation._wrapHandler(handler )),\n        );\n      };\n    };\n  }\n\n  /**\n   * Patches the 'on' handler to instrument it.\n   */\n   _patchOnHandler() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const instrumentation = this;\n\n    return function (original) {\n      return function wrappedHandler( ...args) {\n        const handlers = args.slice(2);\n        return original.apply(this, [\n          ...args.slice(0, 2),\n          ...handlers.map(handler => instrumentation._wrapHandler(handler )),\n        ]);\n      };\n    };\n  }\n\n  /**\n   * Patches the middleware handler to instrument it.\n   */\n   _patchMiddlewareHandler() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const instrumentation = this;\n\n    return function (original) {\n      return function wrappedHandler( ...args) {\n        if (typeof args[0] === 'string') {\n          const path = args[0];\n          if (args.length === 1) {\n            return original.apply(this, [path]);\n          }\n\n          const handlers = args.slice(1);\n          return original.apply(this, [\n            path,\n            ...handlers.map(handler => instrumentation._wrapHandler(handler )),\n          ]);\n        }\n\n        return original.apply(\n          this,\n          args.map(handler => instrumentation._wrapHandler(handler )),\n        );\n      };\n    };\n  }\n\n  /**\n   * Wraps a handler or middleware handler to apply instrumentation.\n   */\n   _wrapHandler(handler) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const instrumentation = this;\n\n    return function ( c, next) {\n      if (!instrumentation.isEnabled()) {\n        return handler.apply(this, [c, next]);\n      }\n\n      const path = c.req.path;\n      const span = instrumentation.tracer.startSpan(path);\n\n      return api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n        return instrumentation._safeExecute(\n          () => {\n            const result = handler.apply(this, [c, next]);\n            if (core.isThenable(result)) {\n              return result.then(result => {\n                const type = instrumentation._determineHandlerType(result);\n                span.setAttributes({\n                  [constants.AttributeNames.HONO_TYPE]: type,\n                  [constants.AttributeNames.HONO_NAME]: type === constants.HonoTypes.REQUEST_HANDLER ? path : handler.name || 'anonymous',\n                });\n                instrumentation.getConfig().responseHook?.(span);\n                return result;\n              });\n            } else {\n              const type = instrumentation._determineHandlerType(result);\n              span.setAttributes({\n                [constants.AttributeNames.HONO_TYPE]: type,\n                [constants.AttributeNames.HONO_NAME]: type === constants.HonoTypes.REQUEST_HANDLER ? path : handler.name || 'anonymous',\n              });\n              instrumentation.getConfig().responseHook?.(span);\n              return result;\n            }\n          },\n          () => span.end(),\n          error => {\n            instrumentation._handleError(span, error);\n            span.end();\n          },\n        );\n      });\n    };\n  }\n\n  /**\n   * Safely executes a function and handles errors.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _safeExecute(execute, onSuccess, onFailure) {\n    try {\n      const result = execute();\n\n      if (core.isThenable(result)) {\n        result.then(\n          () => onSuccess(),\n          (error) => onFailure(error),\n        );\n      } else {\n        onSuccess();\n      }\n\n      return result;\n    } catch (error) {\n      onFailure(error);\n      throw error;\n    }\n  }\n\n  /**\n   * Determines the handler type based on the result.\n   * @param result\n   * @private\n   */\n   _determineHandlerType(result) {\n    return result === undefined ? constants.HonoTypes.MIDDLEWARE : constants.HonoTypes.REQUEST_HANDLER;\n  }\n\n  /**\n   * Handles errors by setting the span status and recording the exception.\n   */\n   _handleError(span, error) {\n    if (error instanceof Error) {\n      span.setStatus({\n        code: api.SpanStatusCode.ERROR,\n        message: error.message,\n      });\n      span.recordException(error);\n    }\n  }\n}\n\nexports.HonoInstrumentation = HonoInstrumentation;\n//# sourceMappingURL=instrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/index.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/index.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst http = __webpack_require__(/*! ../http.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/http.js\");\nconst amqplib = __webpack_require__(/*! ./amqplib.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/amqplib.js\");\nconst index$5 = __webpack_require__(/*! ./anthropic-ai/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/anthropic-ai/index.js\");\nconst connect = __webpack_require__(/*! ./connect.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/connect.js\");\nconst express = __webpack_require__(/*! ./express.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/express.js\");\nconst index = __webpack_require__(/*! ./fastify/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/fastify/index.js\");\nconst firebase = __webpack_require__(/*! ./firebase/firebase.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/firebase/firebase.js\");\nconst genericPool = __webpack_require__(/*! ./genericPool.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/genericPool.js\");\nconst index$6 = __webpack_require__(/*! ./google-genai/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/google-genai/index.js\");\nconst graphql = __webpack_require__(/*! ./graphql.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/graphql.js\");\nconst index$1 = __webpack_require__(/*! ./hapi/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hapi/index.js\");\nconst index$2 = __webpack_require__(/*! ./hono/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/hono/index.js\");\nconst kafka = __webpack_require__(/*! ./kafka.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/kafka.js\");\nconst koa = __webpack_require__(/*! ./koa.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/koa.js\");\nconst lrumemoizer = __webpack_require__(/*! ./lrumemoizer.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/lrumemoizer.js\");\nconst mongo = __webpack_require__(/*! ./mongo.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongo.js\");\nconst mongoose = __webpack_require__(/*! ./mongoose.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongoose.js\");\nconst mysql = __webpack_require__(/*! ./mysql.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql.js\");\nconst mysql2 = __webpack_require__(/*! ./mysql2.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql2.js\");\nconst index$4 = __webpack_require__(/*! ./openai/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/openai/index.js\");\nconst postgres = __webpack_require__(/*! ./postgres.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgres.js\");\nconst postgresjs = __webpack_require__(/*! ./postgresjs.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgresjs.js\");\nconst prisma = __webpack_require__(/*! ./prisma.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js\");\nconst redis = __webpack_require__(/*! ./redis.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/redis.js\");\nconst tedious = __webpack_require__(/*! ./tedious.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/tedious.js\");\nconst index$3 = __webpack_require__(/*! ./vercelai/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/index.js\");\n\n/**\n * With OTEL, all performance integrations will be added, as OTEL only initializes them when the patched package is actually required.\n */\nfunction getAutoPerformanceIntegrations() {\n  return [\n    express.expressIntegration(),\n    index.fastifyIntegration(),\n    graphql.graphqlIntegration(),\n    index$2.honoIntegration(),\n    mongo.mongoIntegration(),\n    mongoose.mongooseIntegration(),\n    mysql.mysqlIntegration(),\n    mysql2.mysql2Integration(),\n    redis.redisIntegration(),\n    postgres.postgresIntegration(),\n    prisma.prismaIntegration(),\n    index$1.hapiIntegration(),\n    koa.koaIntegration(),\n    connect.connectIntegration(),\n    tedious.tediousIntegration(),\n    genericPool.genericPoolIntegration(),\n    kafka.kafkaIntegration(),\n    amqplib.amqplibIntegration(),\n    lrumemoizer.lruMemoizerIntegration(),\n    index$3.vercelAIIntegration(),\n    index$4.openAIIntegration(),\n    postgresjs.postgresJsIntegration(),\n    firebase.firebaseIntegration(),\n    index$5.anthropicAIIntegration(),\n    index$6.googleGenAIIntegration(),\n  ];\n}\n\n/**\n * Get a list of methods to instrument OTEL, when preload instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getOpenTelemetryInstrumentationToPreload() {\n  return [\n    http.instrumentSentryHttp,\n    http.instrumentOtelHttp,\n    express.instrumentExpress,\n    connect.instrumentConnect,\n    index.instrumentFastify,\n    index.instrumentFastifyV3,\n    index$1.instrumentHapi,\n    index$2.instrumentHono,\n    kafka.instrumentKafka,\n    koa.instrumentKoa,\n    lrumemoizer.instrumentLruMemoizer,\n    mongo.instrumentMongo,\n    mongoose.instrumentMongoose,\n    mysql.instrumentMysql,\n    mysql2.instrumentMysql2,\n    postgres.instrumentPostgres,\n    index$1.instrumentHapi,\n    graphql.instrumentGraphql,\n    redis.instrumentRedis,\n    tedious.instrumentTedious,\n    genericPool.instrumentGenericPool,\n    amqplib.instrumentAmqplib,\n    index$3.instrumentVercelAi,\n    index$4.instrumentOpenAi,\n    postgresjs.instrumentPostgresJs,\n    firebase.instrumentFirebase,\n    index$5.instrumentAnthropicAi,\n    index$6.instrumentGoogleGenAI,\n  ];\n}\n\nexports.getAutoPerformanceIntegrations = getAutoPerformanceIntegrations;\nexports.getOpenTelemetryInstrumentationToPreload = getOpenTelemetryInstrumentationToPreload;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsYUFBYSxtQkFBTyxDQUFDLDRIQUFZO0FBQ2pDLGdCQUFnQixtQkFBTyxDQUFDLHlJQUFjO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLCtKQUF5QjtBQUNqRCxnQkFBZ0IsbUJBQU8sQ0FBQyx5SUFBYztBQUN0QyxnQkFBZ0IsbUJBQU8sQ0FBQyx5SUFBYztBQUN0QyxjQUFjLG1CQUFPLENBQUMscUpBQW9CO0FBQzFDLGlCQUFpQixtQkFBTyxDQUFDLDZKQUF3QjtBQUNqRCxvQkFBb0IsbUJBQU8sQ0FBQyxpSkFBa0I7QUFDOUMsZ0JBQWdCLG1CQUFPLENBQUMsK0pBQXlCO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLHlJQUFjO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLCtJQUFpQjtBQUN6QyxnQkFBZ0IsbUJBQU8sQ0FBQywrSUFBaUI7QUFDekMsY0FBYyxtQkFBTyxDQUFDLHFJQUFZO0FBQ2xDLFlBQVksbUJBQU8sQ0FBQyxpSUFBVTtBQUM5QixvQkFBb0IsbUJBQU8sQ0FBQyxpSkFBa0I7QUFDOUMsY0FBYyxtQkFBTyxDQUFDLHFJQUFZO0FBQ2xDLGlCQUFpQixtQkFBTyxDQUFDLDJJQUFlO0FBQ3hDLGNBQWMsbUJBQU8sQ0FBQyxxSUFBWTtBQUNsQyxlQUFlLG1CQUFPLENBQUMsdUlBQWE7QUFDcEMsZ0JBQWdCLG1CQUFPLENBQUMsbUpBQW1CO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLDJJQUFlO0FBQ3hDLG1CQUFtQixtQkFBTyxDQUFDLCtJQUFpQjtBQUM1QyxlQUFlLG1CQUFPLENBQUMsdUlBQWE7QUFDcEMsY0FBYyxtQkFBTyxDQUFDLHFJQUFZO0FBQ2xDLGdCQUFnQixtQkFBTyxDQUFDLHlJQUFjO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLHVKQUFxQjs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0NBQXNDO0FBQ3RDLGdEQUFnRDtBQUNoRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgaHR0cCA9IHJlcXVpcmUoJy4uL2h0dHAuanMnKTtcbmNvbnN0IGFtcXBsaWIgPSByZXF1aXJlKCcuL2FtcXBsaWIuanMnKTtcbmNvbnN0IGluZGV4JDUgPSByZXF1aXJlKCcuL2FudGhyb3BpYy1haS9pbmRleC5qcycpO1xuY29uc3QgY29ubmVjdCA9IHJlcXVpcmUoJy4vY29ubmVjdC5qcycpO1xuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJy4vZXhwcmVzcy5qcycpO1xuY29uc3QgaW5kZXggPSByZXF1aXJlKCcuL2Zhc3RpZnkvaW5kZXguanMnKTtcbmNvbnN0IGZpcmViYXNlID0gcmVxdWlyZSgnLi9maXJlYmFzZS9maXJlYmFzZS5qcycpO1xuY29uc3QgZ2VuZXJpY1Bvb2wgPSByZXF1aXJlKCcuL2dlbmVyaWNQb29sLmpzJyk7XG5jb25zdCBpbmRleCQ2ID0gcmVxdWlyZSgnLi9nb29nbGUtZ2VuYWkvaW5kZXguanMnKTtcbmNvbnN0IGdyYXBocWwgPSByZXF1aXJlKCcuL2dyYXBocWwuanMnKTtcbmNvbnN0IGluZGV4JDEgPSByZXF1aXJlKCcuL2hhcGkvaW5kZXguanMnKTtcbmNvbnN0IGluZGV4JDIgPSByZXF1aXJlKCcuL2hvbm8vaW5kZXguanMnKTtcbmNvbnN0IGthZmthID0gcmVxdWlyZSgnLi9rYWZrYS5qcycpO1xuY29uc3Qga29hID0gcmVxdWlyZSgnLi9rb2EuanMnKTtcbmNvbnN0IGxydW1lbW9pemVyID0gcmVxdWlyZSgnLi9scnVtZW1vaXplci5qcycpO1xuY29uc3QgbW9uZ28gPSByZXF1aXJlKCcuL21vbmdvLmpzJyk7XG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJy4vbW9uZ29vc2UuanMnKTtcbmNvbnN0IG15c3FsID0gcmVxdWlyZSgnLi9teXNxbC5qcycpO1xuY29uc3QgbXlzcWwyID0gcmVxdWlyZSgnLi9teXNxbDIuanMnKTtcbmNvbnN0IGluZGV4JDQgPSByZXF1aXJlKCcuL29wZW5haS9pbmRleC5qcycpO1xuY29uc3QgcG9zdGdyZXMgPSByZXF1aXJlKCcuL3Bvc3RncmVzLmpzJyk7XG5jb25zdCBwb3N0Z3Jlc2pzID0gcmVxdWlyZSgnLi9wb3N0Z3Jlc2pzLmpzJyk7XG5jb25zdCBwcmlzbWEgPSByZXF1aXJlKCcuL3ByaXNtYS5qcycpO1xuY29uc3QgcmVkaXMgPSByZXF1aXJlKCcuL3JlZGlzLmpzJyk7XG5jb25zdCB0ZWRpb3VzID0gcmVxdWlyZSgnLi90ZWRpb3VzLmpzJyk7XG5jb25zdCBpbmRleCQzID0gcmVxdWlyZSgnLi92ZXJjZWxhaS9pbmRleC5qcycpO1xuXG4vKipcbiAqIFdpdGggT1RFTCwgYWxsIHBlcmZvcm1hbmNlIGludGVncmF0aW9ucyB3aWxsIGJlIGFkZGVkLCBhcyBPVEVMIG9ubHkgaW5pdGlhbGl6ZXMgdGhlbSB3aGVuIHRoZSBwYXRjaGVkIHBhY2thZ2UgaXMgYWN0dWFsbHkgcmVxdWlyZWQuXG4gKi9cbmZ1bmN0aW9uIGdldEF1dG9QZXJmb3JtYW5jZUludGVncmF0aW9ucygpIHtcbiAgcmV0dXJuIFtcbiAgICBleHByZXNzLmV4cHJlc3NJbnRlZ3JhdGlvbigpLFxuICAgIGluZGV4LmZhc3RpZnlJbnRlZ3JhdGlvbigpLFxuICAgIGdyYXBocWwuZ3JhcGhxbEludGVncmF0aW9uKCksXG4gICAgaW5kZXgkMi5ob25vSW50ZWdyYXRpb24oKSxcbiAgICBtb25nby5tb25nb0ludGVncmF0aW9uKCksXG4gICAgbW9uZ29vc2UubW9uZ29vc2VJbnRlZ3JhdGlvbigpLFxuICAgIG15c3FsLm15c3FsSW50ZWdyYXRpb24oKSxcbiAgICBteXNxbDIubXlzcWwySW50ZWdyYXRpb24oKSxcbiAgICByZWRpcy5yZWRpc0ludGVncmF0aW9uKCksXG4gICAgcG9zdGdyZXMucG9zdGdyZXNJbnRlZ3JhdGlvbigpLFxuICAgIHByaXNtYS5wcmlzbWFJbnRlZ3JhdGlvbigpLFxuICAgIGluZGV4JDEuaGFwaUludGVncmF0aW9uKCksXG4gICAga29hLmtvYUludGVncmF0aW9uKCksXG4gICAgY29ubmVjdC5jb25uZWN0SW50ZWdyYXRpb24oKSxcbiAgICB0ZWRpb3VzLnRlZGlvdXNJbnRlZ3JhdGlvbigpLFxuICAgIGdlbmVyaWNQb29sLmdlbmVyaWNQb29sSW50ZWdyYXRpb24oKSxcbiAgICBrYWZrYS5rYWZrYUludGVncmF0aW9uKCksXG4gICAgYW1xcGxpYi5hbXFwbGliSW50ZWdyYXRpb24oKSxcbiAgICBscnVtZW1vaXplci5scnVNZW1vaXplckludGVncmF0aW9uKCksXG4gICAgaW5kZXgkMy52ZXJjZWxBSUludGVncmF0aW9uKCksXG4gICAgaW5kZXgkNC5vcGVuQUlJbnRlZ3JhdGlvbigpLFxuICAgIHBvc3RncmVzanMucG9zdGdyZXNKc0ludGVncmF0aW9uKCksXG4gICAgZmlyZWJhc2UuZmlyZWJhc2VJbnRlZ3JhdGlvbigpLFxuICAgIGluZGV4JDUuYW50aHJvcGljQUlJbnRlZ3JhdGlvbigpLFxuICAgIGluZGV4JDYuZ29vZ2xlR2VuQUlJbnRlZ3JhdGlvbigpLFxuICBdO1xufVxuXG4vKipcbiAqIEdldCBhIGxpc3Qgb2YgbWV0aG9kcyB0byBpbnN0cnVtZW50IE9URUwsIHdoZW4gcHJlbG9hZCBpbnN0cnVtZW50YXRpb24uXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBnZXRPcGVuVGVsZW1ldHJ5SW5zdHJ1bWVudGF0aW9uVG9QcmVsb2FkKCkge1xuICByZXR1cm4gW1xuICAgIGh0dHAuaW5zdHJ1bWVudFNlbnRyeUh0dHAsXG4gICAgaHR0cC5pbnN0cnVtZW50T3RlbEh0dHAsXG4gICAgZXhwcmVzcy5pbnN0cnVtZW50RXhwcmVzcyxcbiAgICBjb25uZWN0Lmluc3RydW1lbnRDb25uZWN0LFxuICAgIGluZGV4Lmluc3RydW1lbnRGYXN0aWZ5LFxuICAgIGluZGV4Lmluc3RydW1lbnRGYXN0aWZ5VjMsXG4gICAgaW5kZXgkMS5pbnN0cnVtZW50SGFwaSxcbiAgICBpbmRleCQyLmluc3RydW1lbnRIb25vLFxuICAgIGthZmthLmluc3RydW1lbnRLYWZrYSxcbiAgICBrb2EuaW5zdHJ1bWVudEtvYSxcbiAgICBscnVtZW1vaXplci5pbnN0cnVtZW50THJ1TWVtb2l6ZXIsXG4gICAgbW9uZ28uaW5zdHJ1bWVudE1vbmdvLFxuICAgIG1vbmdvb3NlLmluc3RydW1lbnRNb25nb29zZSxcbiAgICBteXNxbC5pbnN0cnVtZW50TXlzcWwsXG4gICAgbXlzcWwyLmluc3RydW1lbnRNeXNxbDIsXG4gICAgcG9zdGdyZXMuaW5zdHJ1bWVudFBvc3RncmVzLFxuICAgIGluZGV4JDEuaW5zdHJ1bWVudEhhcGksXG4gICAgZ3JhcGhxbC5pbnN0cnVtZW50R3JhcGhxbCxcbiAgICByZWRpcy5pbnN0cnVtZW50UmVkaXMsXG4gICAgdGVkaW91cy5pbnN0cnVtZW50VGVkaW91cyxcbiAgICBnZW5lcmljUG9vbC5pbnN0cnVtZW50R2VuZXJpY1Bvb2wsXG4gICAgYW1xcGxpYi5pbnN0cnVtZW50QW1xcGxpYixcbiAgICBpbmRleCQzLmluc3RydW1lbnRWZXJjZWxBaSxcbiAgICBpbmRleCQ0Lmluc3RydW1lbnRPcGVuQWksXG4gICAgcG9zdGdyZXNqcy5pbnN0cnVtZW50UG9zdGdyZXNKcyxcbiAgICBmaXJlYmFzZS5pbnN0cnVtZW50RmlyZWJhc2UsXG4gICAgaW5kZXgkNS5pbnN0cnVtZW50QW50aHJvcGljQWksXG4gICAgaW5kZXgkNi5pbnN0cnVtZW50R29vZ2xlR2VuQUksXG4gIF07XG59XG5cbmV4cG9ydHMuZ2V0QXV0b1BlcmZvcm1hbmNlSW50ZWdyYXRpb25zID0gZ2V0QXV0b1BlcmZvcm1hbmNlSW50ZWdyYXRpb25zO1xuZXhwb3J0cy5nZXRPcGVuVGVsZW1ldHJ5SW5zdHJ1bWVudGF0aW9uVG9QcmVsb2FkID0gZ2V0T3BlblRlbGVtZXRyeUluc3RydW1lbnRhdGlvblRvUHJlbG9hZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/kafka.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/kafka.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationKafkajs = __webpack_require__(/*! @opentelemetry/instrumentation-kafkajs */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f05912d80f968885e67c94a76b2c5bbe/node_modules/@opentelemetry/instrumentation-kafkajs/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Kafka';\n\nconst instrumentKafka = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new instrumentationKafkajs.KafkaJsInstrumentation({\n      consumerHook(span) {\n        nodeCore.addOriginToSpan(span, 'auto.kafkajs.otel.consumer');\n      },\n      producerHook(span) {\n        nodeCore.addOriginToSpan(span, 'auto.kafkajs.otel.producer');\n      },\n    }),\n);\n\nconst _kafkaIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentKafka();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [kafkajs](https://www.npmjs.com/package/kafkajs) library.\n *\n * For more information, see the [`kafkaIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/kafka/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.kafkaIntegration()],\n * });\n */\nconst kafkaIntegration = core.defineIntegration(_kafkaIntegration);\n\nexports.instrumentKafka = instrumentKafka;\nexports.kafkaIntegration = kafkaIntegration;\n//# sourceMappingURL=kafka.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcva2Fma2EuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsK0JBQStCLG1CQUFPLENBQUMsOE1BQXdDO0FBQy9FLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7O0FBRTVDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxrYWZrYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgaW5zdHJ1bWVudGF0aW9uS2Fma2FqcyA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1rYWZrYWpzJyk7XG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5jb25zdCBub2RlQ29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZS1jb3JlJyk7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnS2Fma2EnO1xuXG5jb25zdCBpbnN0cnVtZW50S2Fma2EgPSBub2RlQ29yZS5nZW5lcmF0ZUluc3RydW1lbnRPbmNlKFxuICBJTlRFR1JBVElPTl9OQU1FLFxuICAoKSA9PlxuICAgIG5ldyBpbnN0cnVtZW50YXRpb25LYWZrYWpzLkthZmthSnNJbnN0cnVtZW50YXRpb24oe1xuICAgICAgY29uc3VtZXJIb29rKHNwYW4pIHtcbiAgICAgICAgbm9kZUNvcmUuYWRkT3JpZ2luVG9TcGFuKHNwYW4sICdhdXRvLmthZmthanMub3RlbC5jb25zdW1lcicpO1xuICAgICAgfSxcbiAgICAgIHByb2R1Y2VySG9vayhzcGFuKSB7XG4gICAgICAgIG5vZGVDb3JlLmFkZE9yaWdpblRvU3BhbihzcGFuLCAnYXV0by5rYWZrYWpzLm90ZWwucHJvZHVjZXInKTtcbiAgICAgIH0sXG4gICAgfSksXG4pO1xuXG5jb25zdCBfa2Fma2FJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBpbnN0cnVtZW50S2Fma2EoKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZHMgU2VudHJ5IHRyYWNpbmcgaW5zdHJ1bWVudGF0aW9uIGZvciB0aGUgW2thZmthanNdKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2thZmthanMpIGxpYnJhcnkuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgW2BrYWZrYUludGVncmF0aW9uYCBkb2N1bWVudGF0aW9uXShodHRwczovL2RvY3Muc2VudHJ5LmlvL3BsYXRmb3Jtcy9qYXZhc2NyaXB0L2d1aWRlcy9ub2RlL2NvbmZpZ3VyYXRpb24vaW50ZWdyYXRpb25zL2thZmthLykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGNvbnN0IFNlbnRyeSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZScpO1xuICpcbiAqIFNlbnRyeS5pbml0KHtcbiAqICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkua2Fma2FJbnRlZ3JhdGlvbigpXSxcbiAqIH0pO1xuICovXG5jb25zdCBrYWZrYUludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfa2Fma2FJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydHMuaW5zdHJ1bWVudEthZmthID0gaW5zdHJ1bWVudEthZmthO1xuZXhwb3J0cy5rYWZrYUludGVncmF0aW9uID0ga2Fma2FJbnRlZ3JhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWthZmthLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/kafka.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/knex.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/knex.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationKnex = __webpack_require__(/*! @opentelemetry/instrumentation-knex */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_959bdc8cb46979a91c19cfd70e453a10/node_modules/@opentelemetry/instrumentation-knex/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Knex';\n\nconst instrumentKnex = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () => new instrumentationKnex.KnexInstrumentation({ requireParentSpan: true }),\n);\n\nconst _knexIntegration = (() => {\n  let instrumentationWrappedCallback;\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      const instrumentation = instrumentKnex();\n      instrumentationWrappedCallback = nodeCore.instrumentWhenWrapped(instrumentation);\n    },\n\n    setup(client) {\n      instrumentationWrappedCallback?.(() =>\n        client.on('spanStart', span => {\n          const { data } = core.spanToJSON(span);\n          // knex.version is always set in the span data\n          // https://github.com/open-telemetry/opentelemetry-js-contrib/blob/0309caeafc44ac9cb13a3345b790b01b76d0497d/plugins/node/opentelemetry-instrumentation-knex/src/instrumentation.ts#L138\n          if ('knex.version' in data) {\n            span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, 'auto.db.otel.knex');\n          }\n        }),\n      );\n    },\n  };\n}) ;\n\n/**\n * Knex integration\n *\n * Capture tracing data for [Knex](https://knexjs.org/).\n *\n * @example\n * ```javascript\n * import * as Sentry from '@sentry/node';\n *\n * Sentry.init({\n *  integrations: [Sentry.knexIntegration()],\n * });\n * ```\n */\nconst knexIntegration = core.defineIntegration(_knexIntegration);\n\nexports.instrumentKnex = instrumentKnex;\nexports.knexIntegration = knexIntegration;\n//# sourceMappingURL=knex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcva25leC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSw0QkFBNEIsbUJBQU8sQ0FBQyx3TUFBcUM7QUFDekUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjs7QUFFNUM7O0FBRUE7QUFDQTtBQUNBLHNEQUFzRCx5QkFBeUI7QUFDL0U7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0I7QUFDdEIsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGtuZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbmNvbnN0IGluc3RydW1lbnRhdGlvbktuZXggPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24ta25leCcpO1xuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3Qgbm9kZUNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUtY29yZScpO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ0tuZXgnO1xuXG5jb25zdCBpbnN0cnVtZW50S25leCA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoXG4gIElOVEVHUkFUSU9OX05BTUUsXG4gICgpID0+IG5ldyBpbnN0cnVtZW50YXRpb25LbmV4LktuZXhJbnN0cnVtZW50YXRpb24oeyByZXF1aXJlUGFyZW50U3BhbjogdHJ1ZSB9KSxcbik7XG5cbmNvbnN0IF9rbmV4SW50ZWdyYXRpb24gPSAoKCkgPT4ge1xuICBsZXQgaW5zdHJ1bWVudGF0aW9uV3JhcHBlZENhbGxiYWNrO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBjb25zdCBpbnN0cnVtZW50YXRpb24gPSBpbnN0cnVtZW50S25leCgpO1xuICAgICAgaW5zdHJ1bWVudGF0aW9uV3JhcHBlZENhbGxiYWNrID0gbm9kZUNvcmUuaW5zdHJ1bWVudFdoZW5XcmFwcGVkKGluc3RydW1lbnRhdGlvbik7XG4gICAgfSxcblxuICAgIHNldHVwKGNsaWVudCkge1xuICAgICAgaW5zdHJ1bWVudGF0aW9uV3JhcHBlZENhbGxiYWNrPy4oKCkgPT5cbiAgICAgICAgY2xpZW50Lm9uKCdzcGFuU3RhcnQnLCBzcGFuID0+IHtcbiAgICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGNvcmUuc3BhblRvSlNPTihzcGFuKTtcbiAgICAgICAgICAvLyBrbmV4LnZlcnNpb24gaXMgYWx3YXlzIHNldCBpbiB0aGUgc3BhbiBkYXRhXG4gICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL29wZW4tdGVsZW1ldHJ5L29wZW50ZWxlbWV0cnktanMtY29udHJpYi9ibG9iLzAzMDljYWVhZmM0NGFjOWNiMTNhMzM0NWI3OTBiMDFiNzZkMDQ5N2QvcGx1Z2lucy9ub2RlL29wZW50ZWxlbWV0cnktaW5zdHJ1bWVudGF0aW9uLWtuZXgvc3JjL2luc3RydW1lbnRhdGlvbi50cyNMMTM4XG4gICAgICAgICAgaWYgKCdrbmV4LnZlcnNpb24nIGluIGRhdGEpIHtcbiAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKGNvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4sICdhdXRvLmRiLm90ZWwua25leCcpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSksXG4gICAgICApO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbi8qKlxuICogS25leCBpbnRlZ3JhdGlvblxuICpcbiAqIENhcHR1cmUgdHJhY2luZyBkYXRhIGZvciBbS25leF0oaHR0cHM6Ly9rbmV4anMub3JnLykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCAqIGFzIFNlbnRyeSBmcm9tICdAc2VudHJ5L25vZGUnO1xuICpcbiAqIFNlbnRyeS5pbml0KHtcbiAqICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkua25leEludGVncmF0aW9uKCldLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuY29uc3Qga25leEludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfa25leEludGVncmF0aW9uKTtcblxuZXhwb3J0cy5pbnN0cnVtZW50S25leCA9IGluc3RydW1lbnRLbmV4O1xuZXhwb3J0cy5rbmV4SW50ZWdyYXRpb24gPSBrbmV4SW50ZWdyYXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rbmV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/knex.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/koa.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/koa.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationKoa = __webpack_require__(/*! @opentelemetry/instrumentation-koa */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_34717ecd692f33c2c9d72faa6a010ef6/node_modules/@opentelemetry/instrumentation-koa/build/src/index.js\");\nconst semanticConventions = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst debugBuild = __webpack_require__(/*! ../../debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js\");\n\nconst INTEGRATION_NAME = 'Koa';\n\nconst instrumentKoa = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  instrumentationKoa.KoaInstrumentation,\n  (options = {}) => {\n    return {\n      ignoreLayersType: options.ignoreLayersType ,\n      requestHook(span, info) {\n        nodeCore.addOriginToSpan(span, 'auto.http.otel.koa');\n\n        const attributes = core.spanToJSON(span).data;\n\n        // this is one of: middleware, router\n        const type = attributes['koa.type'];\n        if (type) {\n          span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_OP, `${type}.koa`);\n        }\n\n        // Also update the name\n        const name = attributes['koa.name'];\n        if (typeof name === 'string') {\n          // Somehow, name is sometimes `''` for middleware spans\n          // See: https://github.com/open-telemetry/opentelemetry-js-contrib/issues/2220\n          span.updateName(name || '< unknown >');\n        }\n\n        if (core.getIsolationScope() === core.getDefaultIsolationScope()) {\n          debugBuild.DEBUG_BUILD && core.debug.warn('Isolation scope is default isolation scope - skipping setting transactionName');\n          return;\n        }\n        const route = attributes[semanticConventions.ATTR_HTTP_ROUTE];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const method = info.context?.request?.method?.toUpperCase() || 'GET';\n        if (route) {\n          core.getIsolationScope().setTransactionName(`${method} ${route}`);\n        }\n      },\n    } ;\n  },\n);\n\nconst _koaIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentKoa(options);\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for [Koa](https://koajs.com/).\n *\n * If you also want to capture errors, you need to call `setupKoaErrorHandler(app)` after you set up your Koa server.\n *\n * For more information, see the [koa documentation](https://docs.sentry.io/platforms/javascript/guides/koa/).\n *\n * @param {KoaOptions} options Configuration options for the Koa integration.\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *   integrations: [Sentry.koaIntegration()],\n * })\n * ```\n *\n * @example\n * ```javascript\n * // To ignore middleware spans\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *   integrations: [\n *     Sentry.koaIntegration({\n *       ignoreLayersType: ['middleware']\n *     })\n *   ],\n * })\n * ```\n */\nconst koaIntegration = core.defineIntegration(_koaIntegration);\n\n/**\n * Add an Koa error handler to capture errors to Sentry.\n *\n * The error handler must be before any other middleware and after all controllers.\n *\n * @param app The Express instances\n * @param options {ExpressHandlerOptions} Configuration options for the handler\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n * const Koa = require(\"koa\");\n *\n * const app = new Koa();\n *\n * Sentry.setupKoaErrorHandler(app);\n *\n * // Add your routes, etc.\n *\n * app.listen(3000);\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst setupKoaErrorHandler = (app) => {\n  app.use(async (ctx, next) => {\n    try {\n      await next();\n    } catch (error) {\n      core.captureException(error, {\n        mechanism: {\n          handled: false,\n          type: 'auto.middleware.koa',\n        },\n      });\n      throw error;\n    }\n  });\n\n  nodeCore.ensureIsWrapped(app.use, 'koa');\n};\n\nexports.instrumentKoa = instrumentKoa;\nexports.koaIntegration = koaIntegration;\nexports.setupKoaErrorHandler = setupKoaErrorHandler;\n//# sourceMappingURL=koa.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcva29hLmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFLDJCQUEyQixtQkFBTyxDQUFDLHNNQUFvQztBQUN2RSw0QkFBNEIsbUJBQU8sQ0FBQyxzTEFBcUM7QUFDekUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQyxnSUFBc0I7O0FBRWpEOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsS0FBSztBQUN2RTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELFFBQVEsRUFBRSxNQUFNO0FBQ3pFO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIOztBQUVBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVCQUF1QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBLHFCQUFxQjtBQUNyQixzQkFBc0I7QUFDdEIsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGtvYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgaW5zdHJ1bWVudGF0aW9uS29hID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWtvYScpO1xuY29uc3Qgc2VtYW50aWNDb252ZW50aW9ucyA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zJyk7XG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5jb25zdCBub2RlQ29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZS1jb3JlJyk7XG5jb25zdCBkZWJ1Z0J1aWxkID0gcmVxdWlyZSgnLi4vLi4vZGVidWctYnVpbGQuanMnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdLb2EnO1xuXG5jb25zdCBpbnN0cnVtZW50S29hID0gbm9kZUNvcmUuZ2VuZXJhdGVJbnN0cnVtZW50T25jZShcbiAgSU5URUdSQVRJT05fTkFNRSxcbiAgaW5zdHJ1bWVudGF0aW9uS29hLktvYUluc3RydW1lbnRhdGlvbixcbiAgKG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBpZ25vcmVMYXllcnNUeXBlOiBvcHRpb25zLmlnbm9yZUxheWVyc1R5cGUgLFxuICAgICAgcmVxdWVzdEhvb2soc3BhbiwgaW5mbykge1xuICAgICAgICBub2RlQ29yZS5hZGRPcmlnaW5Ub1NwYW4oc3BhbiwgJ2F1dG8uaHR0cC5vdGVsLmtvYScpO1xuXG4gICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSBjb3JlLnNwYW5Ub0pTT04oc3BhbikuZGF0YTtcblxuICAgICAgICAvLyB0aGlzIGlzIG9uZSBvZjogbWlkZGxld2FyZSwgcm91dGVyXG4gICAgICAgIGNvbnN0IHR5cGUgPSBhdHRyaWJ1dGVzWydrb2EudHlwZSddO1xuICAgICAgICBpZiAodHlwZSkge1xuICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKGNvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUCwgYCR7dHlwZX0ua29hYCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBBbHNvIHVwZGF0ZSB0aGUgbmFtZVxuICAgICAgICBjb25zdCBuYW1lID0gYXR0cmlidXRlc1sna29hLm5hbWUnXTtcbiAgICAgICAgaWYgKHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIC8vIFNvbWVob3csIG5hbWUgaXMgc29tZXRpbWVzIGAnJ2AgZm9yIG1pZGRsZXdhcmUgc3BhbnNcbiAgICAgICAgICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuLXRlbGVtZXRyeS9vcGVudGVsZW1ldHJ5LWpzLWNvbnRyaWIvaXNzdWVzLzIyMjBcbiAgICAgICAgICBzcGFuLnVwZGF0ZU5hbWUobmFtZSB8fCAnPCB1bmtub3duID4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb3JlLmdldElzb2xhdGlvblNjb3BlKCkgPT09IGNvcmUuZ2V0RGVmYXVsdElzb2xhdGlvblNjb3BlKCkpIHtcbiAgICAgICAgICBkZWJ1Z0J1aWxkLkRFQlVHX0JVSUxEICYmIGNvcmUuZGVidWcud2FybignSXNvbGF0aW9uIHNjb3BlIGlzIGRlZmF1bHQgaXNvbGF0aW9uIHNjb3BlIC0gc2tpcHBpbmcgc2V0dGluZyB0cmFuc2FjdGlvbk5hbWUnKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgcm91dGUgPSBhdHRyaWJ1dGVzW3NlbWFudGljQ29udmVudGlvbnMuQVRUUl9IVFRQX1JPVVRFXTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgICAgICBjb25zdCBtZXRob2QgPSBpbmZvLmNvbnRleHQ/LnJlcXVlc3Q/Lm1ldGhvZD8udG9VcHBlckNhc2UoKSB8fCAnR0VUJztcbiAgICAgICAgaWYgKHJvdXRlKSB7XG4gICAgICAgICAgY29yZS5nZXRJc29sYXRpb25TY29wZSgpLnNldFRyYW5zYWN0aW9uTmFtZShgJHttZXRob2R9ICR7cm91dGV9YCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgfSA7XG4gIH0sXG4pO1xuXG5jb25zdCBfa29hSW50ZWdyYXRpb24gPSAoKG9wdGlvbnMgPSB7fSkgPT4ge1xuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgc2V0dXBPbmNlKCkge1xuICAgICAgaW5zdHJ1bWVudEtvYShvcHRpb25zKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZHMgU2VudHJ5IHRyYWNpbmcgaW5zdHJ1bWVudGF0aW9uIGZvciBbS29hXShodHRwczovL2tvYWpzLmNvbS8pLlxuICpcbiAqIElmIHlvdSBhbHNvIHdhbnQgdG8gY2FwdHVyZSBlcnJvcnMsIHlvdSBuZWVkIHRvIGNhbGwgYHNldHVwS29hRXJyb3JIYW5kbGVyKGFwcClgIGFmdGVyIHlvdSBzZXQgdXAgeW91ciBLb2Egc2VydmVyLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIFtrb2EgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMva29hLykuXG4gKlxuICogQHBhcmFtIHtLb2FPcHRpb25zfSBvcHRpb25zIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIEtvYSBpbnRlZ3JhdGlvbi5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgamF2YXNjcmlwdFxuICogY29uc3QgU2VudHJ5ID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlJyk7XG4gKlxuICogU2VudHJ5LmluaXQoe1xuICogICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkua29hSW50ZWdyYXRpb24oKV0sXG4gKiB9KVxuICogYGBgXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIC8vIFRvIGlnbm9yZSBtaWRkbGV3YXJlIHNwYW5zXG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgIGludGVncmF0aW9uczogW1xuICogICAgIFNlbnRyeS5rb2FJbnRlZ3JhdGlvbih7XG4gKiAgICAgICBpZ25vcmVMYXllcnNUeXBlOiBbJ21pZGRsZXdhcmUnXVxuICogICAgIH0pXG4gKiAgIF0sXG4gKiB9KVxuICogYGBgXG4gKi9cbmNvbnN0IGtvYUludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfa29hSW50ZWdyYXRpb24pO1xuXG4vKipcbiAqIEFkZCBhbiBLb2EgZXJyb3IgaGFuZGxlciB0byBjYXB0dXJlIGVycm9ycyB0byBTZW50cnkuXG4gKlxuICogVGhlIGVycm9yIGhhbmRsZXIgbXVzdCBiZSBiZWZvcmUgYW55IG90aGVyIG1pZGRsZXdhcmUgYW5kIGFmdGVyIGFsbCBjb250cm9sbGVycy5cbiAqXG4gKiBAcGFyYW0gYXBwIFRoZSBFeHByZXNzIGluc3RhbmNlc1xuICogQHBhcmFtIG9wdGlvbnMge0V4cHJlc3NIYW5kbGVyT3B0aW9uc30gQ29uZmlndXJhdGlvbiBvcHRpb25zIGZvciB0aGUgaGFuZGxlclxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqIGNvbnN0IEtvYSA9IHJlcXVpcmUoXCJrb2FcIik7XG4gKlxuICogY29uc3QgYXBwID0gbmV3IEtvYSgpO1xuICpcbiAqIFNlbnRyeS5zZXR1cEtvYUVycm9ySGFuZGxlcihhcHApO1xuICpcbiAqIC8vIEFkZCB5b3VyIHJvdXRlcywgZXRjLlxuICpcbiAqIGFwcC5saXN0ZW4oMzAwMCk7XG4gKiBgYGBcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmNvbnN0IHNldHVwS29hRXJyb3JIYW5kbGVyID0gKGFwcCkgPT4ge1xuICBhcHAudXNlKGFzeW5jIChjdHgsIG5leHQpID0+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgbmV4dCgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb3JlLmNhcHR1cmVFeGNlcHRpb24oZXJyb3IsIHtcbiAgICAgICAgbWVjaGFuaXNtOiB7XG4gICAgICAgICAgaGFuZGxlZDogZmFsc2UsXG4gICAgICAgICAgdHlwZTogJ2F1dG8ubWlkZGxld2FyZS5rb2EnLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH0pO1xuXG4gIG5vZGVDb3JlLmVuc3VyZUlzV3JhcHBlZChhcHAudXNlLCAna29hJyk7XG59O1xuXG5leHBvcnRzLmluc3RydW1lbnRLb2EgPSBpbnN0cnVtZW50S29hO1xuZXhwb3J0cy5rb2FJbnRlZ3JhdGlvbiA9IGtvYUludGVncmF0aW9uO1xuZXhwb3J0cy5zZXR1cEtvYUVycm9ySGFuZGxlciA9IHNldHVwS29hRXJyb3JIYW5kbGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a29hLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/koa.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/lrumemoizer.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/lrumemoizer.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationLruMemoizer = __webpack_require__(/*! @opentelemetry/instrumentation-lru-memoizer */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_de42c416e59f1c6dcc613071fe36c1bd/node_modules/@opentelemetry/instrumentation-lru-memoizer/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'LruMemoizer';\n\nconst instrumentLruMemoizer = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, () => new instrumentationLruMemoizer.LruMemoizerInstrumentation());\n\nconst _lruMemoizerIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentLruMemoizer();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [lru-memoizer](https://www.npmjs.com/package/lru-memoizer) library.\n *\n * For more information, see the [`lruMemoizerIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/lrumemoizer/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.lruMemoizerIntegration()],\n * });\n */\nconst lruMemoizerIntegration = core.defineIntegration(_lruMemoizerIntegration);\n\nexports.instrumentLruMemoizer = instrumentLruMemoizer;\nexports.lruMemoizerIntegration = lruMemoizerIntegration;\n//# sourceMappingURL=lrumemoizer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvbHJ1bWVtb2l6ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsbUNBQW1DLG1CQUFPLENBQUMsd05BQTZDO0FBQ3hGLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7O0FBRTVDOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQSw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXGxydW1lbW9pemVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBpbnN0cnVtZW50YXRpb25McnVNZW1vaXplciA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1scnUtbWVtb2l6ZXInKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdMcnVNZW1vaXplcic7XG5cbmNvbnN0IGluc3RydW1lbnRMcnVNZW1vaXplciA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoSU5URUdSQVRJT05fTkFNRSwgKCkgPT4gbmV3IGluc3RydW1lbnRhdGlvbkxydU1lbW9pemVyLkxydU1lbW9pemVySW5zdHJ1bWVudGF0aW9uKCkpO1xuXG5jb25zdCBfbHJ1TWVtb2l6ZXJJbnRlZ3JhdGlvbiA9ICgoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBpbnN0cnVtZW50THJ1TWVtb2l6ZXIoKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZHMgU2VudHJ5IHRyYWNpbmcgaW5zdHJ1bWVudGF0aW9uIGZvciB0aGUgW2xydS1tZW1vaXplcl0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbHJ1LW1lbW9pemVyKSBsaWJyYXJ5LlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIFtgbHJ1TWVtb2l6ZXJJbnRlZ3JhdGlvbmAgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvbm9kZS9jb25maWd1cmF0aW9uL2ludGVncmF0aW9ucy9scnVtZW1vaXplci8pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgaW50ZWdyYXRpb25zOiBbU2VudHJ5LmxydU1lbW9pemVySW50ZWdyYXRpb24oKV0sXG4gKiB9KTtcbiAqL1xuY29uc3QgbHJ1TWVtb2l6ZXJJbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oX2xydU1lbW9pemVySW50ZWdyYXRpb24pO1xuXG5leHBvcnRzLmluc3RydW1lbnRMcnVNZW1vaXplciA9IGluc3RydW1lbnRMcnVNZW1vaXplcjtcbmV4cG9ydHMubHJ1TWVtb2l6ZXJJbnRlZ3JhdGlvbiA9IGxydU1lbW9pemVySW50ZWdyYXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1scnVtZW1vaXplci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/lrumemoizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongo.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongo.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationMongodb = __webpack_require__(/*! @opentelemetry/instrumentation-mongodb */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_3f7e1127459f591710ae70611a87e291/node_modules/@opentelemetry/instrumentation-mongodb/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Mongo';\n\nconst instrumentMongo = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new instrumentationMongodb.MongoDBInstrumentation({\n      dbStatementSerializer: _defaultDbStatementSerializer,\n      responseHook(span) {\n        nodeCore.addOriginToSpan(span, 'auto.db.otel.mongo');\n      },\n    }),\n);\n\n/**\n * Replaces values in document with '?', hiding PII and helping grouping.\n */\nfunction _defaultDbStatementSerializer(commandObj) {\n  const resultObj = _scrubStatement(commandObj);\n  return JSON.stringify(resultObj);\n}\n\nfunction _scrubStatement(value) {\n  if (Array.isArray(value)) {\n    return value.map(element => _scrubStatement(element));\n  }\n\n  if (isCommandObj(value)) {\n    const initial = {};\n    return Object.entries(value)\n      .map(([key, element]) => [key, _scrubStatement(element)])\n      .reduce((prev, current) => {\n        if (isCommandEntry(current)) {\n          prev[current[0]] = current[1];\n        }\n        return prev;\n      }, initial);\n  }\n\n  // A value like string or number, possible contains PII, scrub it\n  return '?';\n}\n\nfunction isCommandObj(value) {\n  return typeof value === 'object' && value !== null && !isBuffer(value);\n}\n\nfunction isBuffer(value) {\n  let isBuffer = false;\n  if (typeof Buffer !== 'undefined') {\n    isBuffer = Buffer.isBuffer(value);\n  }\n  return isBuffer;\n}\n\nfunction isCommandEntry(value) {\n  return Array.isArray(value);\n}\n\nconst _mongoIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentMongo();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [mongodb](https://www.npmjs.com/package/mongodb) library.\n *\n * For more information, see the [`mongoIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/mongo/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.mongoIntegration()],\n * });\n * ```\n */\nconst mongoIntegration = core.defineIntegration(_mongoIntegration);\n\nexports._defaultDbStatementSerializer = _defaultDbStatementSerializer;\nexports.instrumentMongo = instrumentMongo;\nexports.mongoIntegration = mongoIntegration;\n//# sourceMappingURL=mongo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvbW9uZ28uanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsK0JBQStCLG1CQUFPLENBQUMsOE1BQXdDO0FBQy9FLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7O0FBRTVDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUEscUNBQXFDO0FBQ3JDLHVCQUF1QjtBQUN2Qix3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBzZW50cnkrbm9kZUAxMC4xNi4wXFxub2RlX21vZHVsZXNcXEBzZW50cnlcXG5vZGVcXGJ1aWxkXFxjanNcXGludGVncmF0aW9uc1xcdHJhY2luZ1xcbW9uZ28uanMiXSwic291cmNlc0NvbnRlbnQiOlsiT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cbmNvbnN0IGluc3RydW1lbnRhdGlvbk1vbmdvZGIgPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbW9uZ29kYicpO1xuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3Qgbm9kZUNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUtY29yZScpO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ01vbmdvJztcblxuY29uc3QgaW5zdHJ1bWVudE1vbmdvID0gbm9kZUNvcmUuZ2VuZXJhdGVJbnN0cnVtZW50T25jZShcbiAgSU5URUdSQVRJT05fTkFNRSxcbiAgKCkgPT5cbiAgICBuZXcgaW5zdHJ1bWVudGF0aW9uTW9uZ29kYi5Nb25nb0RCSW5zdHJ1bWVudGF0aW9uKHtcbiAgICAgIGRiU3RhdGVtZW50U2VyaWFsaXplcjogX2RlZmF1bHREYlN0YXRlbWVudFNlcmlhbGl6ZXIsXG4gICAgICByZXNwb25zZUhvb2soc3Bhbikge1xuICAgICAgICBub2RlQ29yZS5hZGRPcmlnaW5Ub1NwYW4oc3BhbiwgJ2F1dG8uZGIub3RlbC5tb25nbycpO1xuICAgICAgfSxcbiAgICB9KSxcbik7XG5cbi8qKlxuICogUmVwbGFjZXMgdmFsdWVzIGluIGRvY3VtZW50IHdpdGggJz8nLCBoaWRpbmcgUElJIGFuZCBoZWxwaW5nIGdyb3VwaW5nLlxuICovXG5mdW5jdGlvbiBfZGVmYXVsdERiU3RhdGVtZW50U2VyaWFsaXplcihjb21tYW5kT2JqKSB7XG4gIGNvbnN0IHJlc3VsdE9iaiA9IF9zY3J1YlN0YXRlbWVudChjb21tYW5kT2JqKTtcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHJlc3VsdE9iaik7XG59XG5cbmZ1bmN0aW9uIF9zY3J1YlN0YXRlbWVudCh2YWx1ZSkge1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWUubWFwKGVsZW1lbnQgPT4gX3NjcnViU3RhdGVtZW50KGVsZW1lbnQpKTtcbiAgfVxuXG4gIGlmIChpc0NvbW1hbmRPYmoodmFsdWUpKSB7XG4gICAgY29uc3QgaW5pdGlhbCA9IHt9O1xuICAgIHJldHVybiBPYmplY3QuZW50cmllcyh2YWx1ZSlcbiAgICAgIC5tYXAoKFtrZXksIGVsZW1lbnRdKSA9PiBba2V5LCBfc2NydWJTdGF0ZW1lbnQoZWxlbWVudCldKVxuICAgICAgLnJlZHVjZSgocHJldiwgY3VycmVudCkgPT4ge1xuICAgICAgICBpZiAoaXNDb21tYW5kRW50cnkoY3VycmVudCkpIHtcbiAgICAgICAgICBwcmV2W2N1cnJlbnRbMF1dID0gY3VycmVudFsxXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJldjtcbiAgICAgIH0sIGluaXRpYWwpO1xuICB9XG5cbiAgLy8gQSB2YWx1ZSBsaWtlIHN0cmluZyBvciBudW1iZXIsIHBvc3NpYmxlIGNvbnRhaW5zIFBJSSwgc2NydWIgaXRcbiAgcmV0dXJuICc/Jztcbn1cblxuZnVuY3Rpb24gaXNDb21tYW5kT2JqKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsICYmICFpc0J1ZmZlcih2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIGlzQnVmZmVyKHZhbHVlKSB7XG4gIGxldCBpc0J1ZmZlciA9IGZhbHNlO1xuICBpZiAodHlwZW9mIEJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpc0J1ZmZlciA9IEJ1ZmZlci5pc0J1ZmZlcih2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIGlzQnVmZmVyO1xufVxuXG5mdW5jdGlvbiBpc0NvbW1hbmRFbnRyeSh2YWx1ZSkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG59XG5cbmNvbnN0IF9tb25nb0ludGVncmF0aW9uID0gKCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIGluc3RydW1lbnRNb25nbygpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbi8qKlxuICogQWRkcyBTZW50cnkgdHJhY2luZyBpbnN0cnVtZW50YXRpb24gZm9yIHRoZSBbbW9uZ29kYl0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbW9uZ29kYikgbGlicmFyeS5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBbYG1vbmdvSW50ZWdyYXRpb25gIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vZG9jcy5zZW50cnkuaW8vcGxhdGZvcm1zL2phdmFzY3JpcHQvZ3VpZGVzL25vZGUvY29uZmlndXJhdGlvbi9pbnRlZ3JhdGlvbnMvbW9uZ28vKS5cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgamF2YXNjcmlwdFxuICogY29uc3QgU2VudHJ5ID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlJyk7XG4gKlxuICogU2VudHJ5LmluaXQoe1xuICogIGludGVncmF0aW9uczogW1NlbnRyeS5tb25nb0ludGVncmF0aW9uKCldLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuY29uc3QgbW9uZ29JbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oX21vbmdvSW50ZWdyYXRpb24pO1xuXG5leHBvcnRzLl9kZWZhdWx0RGJTdGF0ZW1lbnRTZXJpYWxpemVyID0gX2RlZmF1bHREYlN0YXRlbWVudFNlcmlhbGl6ZXI7XG5leHBvcnRzLmluc3RydW1lbnRNb25nbyA9IGluc3RydW1lbnRNb25nbztcbmV4cG9ydHMubW9uZ29JbnRlZ3JhdGlvbiA9IG1vbmdvSW50ZWdyYXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tb25nby5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongoose.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongoose.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationMongoose = __webpack_require__(/*! @opentelemetry/instrumentation-mongoose */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_b0779eb6d7129440db4b7e37f639bf16/node_modules/@opentelemetry/instrumentation-mongoose/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Mongoose';\n\nconst instrumentMongoose = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new instrumentationMongoose.MongooseInstrumentation({\n      responseHook(span) {\n        nodeCore.addOriginToSpan(span, 'auto.db.otel.mongoose');\n      },\n    }),\n);\n\nconst _mongooseIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentMongoose();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [mongoose](https://www.npmjs.com/package/mongoose) library.\n *\n * For more information, see the [`mongooseIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/mongoose/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.mongooseIntegration()],\n * });\n * ```\n */\nconst mongooseIntegration = core.defineIntegration(_mongooseIntegration);\n\nexports.instrumentMongoose = instrumentMongoose;\nexports.mongooseIntegration = mongooseIntegration;\n//# sourceMappingURL=mongoose.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvbW9uZ29vc2UuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsZ0NBQWdDLG1CQUFPLENBQUMsZ05BQXlDO0FBQ2pGLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7O0FBRTVDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUEsMEJBQTBCO0FBQzFCLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxtb25nb29zZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgaW5zdHJ1bWVudGF0aW9uTW9uZ29vc2UgPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbW9uZ29vc2UnKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdNb25nb29zZSc7XG5cbmNvbnN0IGluc3RydW1lbnRNb25nb29zZSA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoXG4gIElOVEVHUkFUSU9OX05BTUUsXG4gICgpID0+XG4gICAgbmV3IGluc3RydW1lbnRhdGlvbk1vbmdvb3NlLk1vbmdvb3NlSW5zdHJ1bWVudGF0aW9uKHtcbiAgICAgIHJlc3BvbnNlSG9vayhzcGFuKSB7XG4gICAgICAgIG5vZGVDb3JlLmFkZE9yaWdpblRvU3BhbihzcGFuLCAnYXV0by5kYi5vdGVsLm1vbmdvb3NlJyk7XG4gICAgICB9LFxuICAgIH0pLFxuKTtcblxuY29uc3QgX21vbmdvb3NlSW50ZWdyYXRpb24gPSAoKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgc2V0dXBPbmNlKCkge1xuICAgICAgaW5zdHJ1bWVudE1vbmdvb3NlKCk7XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuLyoqXG4gKiBBZGRzIFNlbnRyeSB0cmFjaW5nIGluc3RydW1lbnRhdGlvbiBmb3IgdGhlIFttb25nb29zZV0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbW9uZ29vc2UpIGxpYnJhcnkuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgW2Btb25nb29zZUludGVncmF0aW9uYCBkb2N1bWVudGF0aW9uXShodHRwczovL2RvY3Muc2VudHJ5LmlvL3BsYXRmb3Jtcy9qYXZhc2NyaXB0L2d1aWRlcy9ub2RlL2NvbmZpZ3VyYXRpb24vaW50ZWdyYXRpb25zL21vbmdvb3NlLykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGNvbnN0IFNlbnRyeSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZScpO1xuICpcbiAqIFNlbnRyeS5pbml0KHtcbiAqICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkubW9uZ29vc2VJbnRlZ3JhdGlvbigpXSxcbiAqIH0pO1xuICogYGBgXG4gKi9cbmNvbnN0IG1vbmdvb3NlSW50ZWdyYXRpb24gPSBjb3JlLmRlZmluZUludGVncmF0aW9uKF9tb25nb29zZUludGVncmF0aW9uKTtcblxuZXhwb3J0cy5pbnN0cnVtZW50TW9uZ29vc2UgPSBpbnN0cnVtZW50TW9uZ29vc2U7XG5leHBvcnRzLm1vbmdvb3NlSW50ZWdyYXRpb24gPSBtb25nb29zZUludGVncmF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bW9uZ29vc2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mongoose.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationMysql = __webpack_require__(/*! @opentelemetry/instrumentation-mysql */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_bd975e9cb039e64f8c055fd2da802d36/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Mysql';\n\nconst instrumentMysql = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, () => new instrumentationMysql.MySQLInstrumentation({}));\n\nconst _mysqlIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentMysql();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [mysql](https://www.npmjs.com/package/mysql) library.\n *\n * For more information, see the [`mysqlIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/mysql/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.mysqlIntegration()],\n * });\n * ```\n */\nconst mysqlIntegration = core.defineIntegration(_mysqlIntegration);\n\nexports.instrumentMysql = instrumentMysql;\nexports.mysqlIntegration = mysqlIntegration;\n//# sourceMappingURL=mysql.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvbXlzcWwuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsNkJBQTZCLG1CQUFPLENBQUMsME1BQXNDO0FBQzNFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7O0FBRTVDOztBQUVBLGdJQUFnSTs7QUFFaEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxteXNxbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgaW5zdHJ1bWVudGF0aW9uTXlzcWwgPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwnKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcblxuY29uc3QgSU5URUdSQVRJT05fTkFNRSA9ICdNeXNxbCc7XG5cbmNvbnN0IGluc3RydW1lbnRNeXNxbCA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoSU5URUdSQVRJT05fTkFNRSwgKCkgPT4gbmV3IGluc3RydW1lbnRhdGlvbk15c3FsLk15U1FMSW5zdHJ1bWVudGF0aW9uKHt9KSk7XG5cbmNvbnN0IF9teXNxbEludGVncmF0aW9uID0gKCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIGluc3RydW1lbnRNeXNxbCgpO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbi8qKlxuICogQWRkcyBTZW50cnkgdHJhY2luZyBpbnN0cnVtZW50YXRpb24gZm9yIHRoZSBbbXlzcWxdKGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL215c3FsKSBsaWJyYXJ5LlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIFtgbXlzcWxJbnRlZ3JhdGlvbmAgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvbm9kZS9jb25maWd1cmF0aW9uL2ludGVncmF0aW9ucy9teXNxbC8pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgaW50ZWdyYXRpb25zOiBbU2VudHJ5Lm15c3FsSW50ZWdyYXRpb24oKV0sXG4gKiB9KTtcbiAqIGBgYFxuICovXG5jb25zdCBteXNxbEludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfbXlzcWxJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydHMuaW5zdHJ1bWVudE15c3FsID0gaW5zdHJ1bWVudE15c3FsO1xuZXhwb3J0cy5teXNxbEludGVncmF0aW9uID0gbXlzcWxJbnRlZ3JhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW15c3FsLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql2.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql2.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationMysql2 = __webpack_require__(/*! @opentelemetry/instrumentation-mysql2 */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_66c29cf76ce8ee8eba42812109f3be65/node_modules/@opentelemetry/instrumentation-mysql2/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Mysql2';\n\nconst instrumentMysql2 = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new instrumentationMysql2.MySQL2Instrumentation({\n      responseHook(span) {\n        nodeCore.addOriginToSpan(span, 'auto.db.otel.mysql2');\n      },\n    }),\n);\n\nconst _mysql2Integration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentMysql2();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [mysql2](https://www.npmjs.com/package/mysql2) library.\n *\n * For more information, see the [`mysql2Integration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/mysql2/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.mysqlIntegration()],\n * });\n * ```\n */\nconst mysql2Integration = core.defineIntegration(_mysql2Integration);\n\nexports.instrumentMysql2 = instrumentMysql2;\nexports.mysql2Integration = mysql2Integration;\n//# sourceMappingURL=mysql2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvbXlzcWwyLmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFLDhCQUE4QixtQkFBTyxDQUFDLDRNQUF1QztBQUM3RSxhQUFhLG1CQUFPLENBQUMsa0hBQWM7QUFDbkMsaUJBQWlCLG1CQUFPLENBQUMsb0tBQW1COztBQUU1Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBLHdCQUF3QjtBQUN4Qix5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBzZW50cnkrbm9kZUAxMC4xNi4wXFxub2RlX21vZHVsZXNcXEBzZW50cnlcXG5vZGVcXGJ1aWxkXFxjanNcXGludGVncmF0aW9uc1xcdHJhY2luZ1xcbXlzcWwyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBpbnN0cnVtZW50YXRpb25NeXNxbDIgPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwyJyk7XG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5jb25zdCBub2RlQ29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZS1jb3JlJyk7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnTXlzcWwyJztcblxuY29uc3QgaW5zdHJ1bWVudE15c3FsMiA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoXG4gIElOVEVHUkFUSU9OX05BTUUsXG4gICgpID0+XG4gICAgbmV3IGluc3RydW1lbnRhdGlvbk15c3FsMi5NeVNRTDJJbnN0cnVtZW50YXRpb24oe1xuICAgICAgcmVzcG9uc2VIb29rKHNwYW4pIHtcbiAgICAgICAgbm9kZUNvcmUuYWRkT3JpZ2luVG9TcGFuKHNwYW4sICdhdXRvLmRiLm90ZWwubXlzcWwyJyk7XG4gICAgICB9LFxuICAgIH0pLFxuKTtcblxuY29uc3QgX215c3FsMkludGVncmF0aW9uID0gKCgpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBuYW1lOiBJTlRFR1JBVElPTl9OQU1FLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIGluc3RydW1lbnRNeXNxbDIoKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZHMgU2VudHJ5IHRyYWNpbmcgaW5zdHJ1bWVudGF0aW9uIGZvciB0aGUgW215c3FsMl0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbXlzcWwyKSBsaWJyYXJ5LlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIFtgbXlzcWwySW50ZWdyYXRpb25gIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vZG9jcy5zZW50cnkuaW8vcGxhdGZvcm1zL2phdmFzY3JpcHQvZ3VpZGVzL25vZGUvY29uZmlndXJhdGlvbi9pbnRlZ3JhdGlvbnMvbXlzcWwyLykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGNvbnN0IFNlbnRyeSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZScpO1xuICpcbiAqIFNlbnRyeS5pbml0KHtcbiAqICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkubXlzcWxJbnRlZ3JhdGlvbigpXSxcbiAqIH0pO1xuICogYGBgXG4gKi9cbmNvbnN0IG15c3FsMkludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfbXlzcWwySW50ZWdyYXRpb24pO1xuXG5leHBvcnRzLmluc3RydW1lbnRNeXNxbDIgPSBpbnN0cnVtZW50TXlzcWwyO1xuZXhwb3J0cy5teXNxbDJJbnRlZ3JhdGlvbiA9IG15c3FsMkludGVncmF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXlzcWwyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/mysql2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/openai/index.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/openai/index.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst instrumentation = __webpack_require__(/*! ./instrumentation.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/openai/instrumentation.js\");\n\nconst instrumentOpenAi = nodeCore.generateInstrumentOnce(\n  core.OPENAI_INTEGRATION_NAME,\n  () => new instrumentation.SentryOpenAiInstrumentation({}),\n);\n\nconst _openAiIntegration = ((options = {}) => {\n  return {\n    name: core.OPENAI_INTEGRATION_NAME,\n    options,\n    setupOnce() {\n      instrumentOpenAi();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the OpenAI SDK.\n *\n * This integration is enabled by default.\n *\n * When configured, this integration automatically instruments OpenAI SDK client instances\n * to capture telemetry data following OpenTelemetry Semantic Conventions for Generative AI.\n *\n * @example\n * ```javascript\n * import * as Sentry from '@sentry/node';\n *\n * Sentry.init({\n *   integrations: [Sentry.openAIIntegration()],\n * });\n * ```\n *\n * ## Options\n *\n * - `recordInputs`: Whether to record prompt messages (default: respects `sendDefaultPii` client option)\n * - `recordOutputs`: Whether to record response text (default: respects `sendDefaultPii` client option)\n *\n * ### Default Behavior\n *\n * By default, the integration will:\n * - Record inputs and outputs ONLY if `sendDefaultPii` is set to `true` in your Sentry client options\n * - Otherwise, inputs and outputs are NOT recorded unless explicitly enabled\n *\n * @example\n * ```javascript\n * // Record inputs and outputs when sendDefaultPii is false\n * Sentry.init({\n *   integrations: [\n *     Sentry.openAIIntegration({\n *       recordInputs: true,\n *       recordOutputs: true\n *     })\n *   ],\n * });\n *\n * // Never record inputs/outputs regardless of sendDefaultPii\n * Sentry.init({\n *   sendDefaultPii: true,\n *   integrations: [\n *     Sentry.openAIIntegration({\n *       recordInputs: false,\n *       recordOutputs: false\n *     })\n *   ],\n * });\n * ```\n *\n */\nconst openAIIntegration = core.defineIntegration(_openAiIntegration);\n\nexports.instrumentOpenAi = instrumentOpenAi;\nexports.openAIIntegration = openAIIntegration;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvb3BlbmFpL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7QUFDNUMsd0JBQXdCLG1CQUFPLENBQUMsZ0tBQXNCOztBQUV0RDtBQUNBO0FBQ0EsMERBQTBEO0FBQzFEOztBQUVBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHdCQUF3QjtBQUN4Qix5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVmlzaExhcFxcQ3VyZThcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBzZW50cnkrbm9kZUAxMC4xNi4wXFxub2RlX21vZHVsZXNcXEBzZW50cnlcXG5vZGVcXGJ1aWxkXFxjanNcXGludGVncmF0aW9uc1xcdHJhY2luZ1xcb3BlbmFpXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3Qgbm9kZUNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUtY29yZScpO1xuY29uc3QgaW5zdHJ1bWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbnN0cnVtZW50YXRpb24uanMnKTtcblxuY29uc3QgaW5zdHJ1bWVudE9wZW5BaSA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoXG4gIGNvcmUuT1BFTkFJX0lOVEVHUkFUSU9OX05BTUUsXG4gICgpID0+IG5ldyBpbnN0cnVtZW50YXRpb24uU2VudHJ5T3BlbkFpSW5zdHJ1bWVudGF0aW9uKHt9KSxcbik7XG5cbmNvbnN0IF9vcGVuQWlJbnRlZ3JhdGlvbiA9ICgob3B0aW9ucyA9IHt9KSA9PiB7XG4gIHJldHVybiB7XG4gICAgbmFtZTogY29yZS5PUEVOQUlfSU5URUdSQVRJT05fTkFNRSxcbiAgICBvcHRpb25zLFxuICAgIHNldHVwT25jZSgpIHtcbiAgICAgIGluc3RydW1lbnRPcGVuQWkoKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZHMgU2VudHJ5IHRyYWNpbmcgaW5zdHJ1bWVudGF0aW9uIGZvciB0aGUgT3BlbkFJIFNESy5cbiAqXG4gKiBUaGlzIGludGVncmF0aW9uIGlzIGVuYWJsZWQgYnkgZGVmYXVsdC5cbiAqXG4gKiBXaGVuIGNvbmZpZ3VyZWQsIHRoaXMgaW50ZWdyYXRpb24gYXV0b21hdGljYWxseSBpbnN0cnVtZW50cyBPcGVuQUkgU0RLIGNsaWVudCBpbnN0YW5jZXNcbiAqIHRvIGNhcHR1cmUgdGVsZW1ldHJ5IGRhdGEgZm9sbG93aW5nIE9wZW5UZWxlbWV0cnkgU2VtYW50aWMgQ29udmVudGlvbnMgZm9yIEdlbmVyYXRpdmUgQUkuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCAqIGFzIFNlbnRyeSBmcm9tICdAc2VudHJ5L25vZGUnO1xuICpcbiAqIFNlbnRyeS5pbml0KHtcbiAqICAgaW50ZWdyYXRpb25zOiBbU2VudHJ5Lm9wZW5BSUludGVncmF0aW9uKCldLFxuICogfSk7XG4gKiBgYGBcbiAqXG4gKiAjIyBPcHRpb25zXG4gKlxuICogLSBgcmVjb3JkSW5wdXRzYDogV2hldGhlciB0byByZWNvcmQgcHJvbXB0IG1lc3NhZ2VzIChkZWZhdWx0OiByZXNwZWN0cyBgc2VuZERlZmF1bHRQaWlgIGNsaWVudCBvcHRpb24pXG4gKiAtIGByZWNvcmRPdXRwdXRzYDogV2hldGhlciB0byByZWNvcmQgcmVzcG9uc2UgdGV4dCAoZGVmYXVsdDogcmVzcGVjdHMgYHNlbmREZWZhdWx0UGlpYCBjbGllbnQgb3B0aW9uKVxuICpcbiAqICMjIyBEZWZhdWx0IEJlaGF2aW9yXG4gKlxuICogQnkgZGVmYXVsdCwgdGhlIGludGVncmF0aW9uIHdpbGw6XG4gKiAtIFJlY29yZCBpbnB1dHMgYW5kIG91dHB1dHMgT05MWSBpZiBgc2VuZERlZmF1bHRQaWlgIGlzIHNldCB0byBgdHJ1ZWAgaW4geW91ciBTZW50cnkgY2xpZW50IG9wdGlvbnNcbiAqIC0gT3RoZXJ3aXNlLCBpbnB1dHMgYW5kIG91dHB1dHMgYXJlIE5PVCByZWNvcmRlZCB1bmxlc3MgZXhwbGljaXRseSBlbmFibGVkXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIC8vIFJlY29yZCBpbnB1dHMgYW5kIG91dHB1dHMgd2hlbiBzZW5kRGVmYXVsdFBpaSBpcyBmYWxzZVxuICogU2VudHJ5LmluaXQoe1xuICogICBpbnRlZ3JhdGlvbnM6IFtcbiAqICAgICBTZW50cnkub3BlbkFJSW50ZWdyYXRpb24oe1xuICogICAgICAgcmVjb3JkSW5wdXRzOiB0cnVlLFxuICogICAgICAgcmVjb3JkT3V0cHV0czogdHJ1ZVxuICogICAgIH0pXG4gKiAgIF0sXG4gKiB9KTtcbiAqXG4gKiAvLyBOZXZlciByZWNvcmQgaW5wdXRzL291dHB1dHMgcmVnYXJkbGVzcyBvZiBzZW5kRGVmYXVsdFBpaVxuICogU2VudHJ5LmluaXQoe1xuICogICBzZW5kRGVmYXVsdFBpaTogdHJ1ZSxcbiAqICAgaW50ZWdyYXRpb25zOiBbXG4gKiAgICAgU2VudHJ5Lm9wZW5BSUludGVncmF0aW9uKHtcbiAqICAgICAgIHJlY29yZElucHV0czogZmFsc2UsXG4gKiAgICAgICByZWNvcmRPdXRwdXRzOiBmYWxzZVxuICogICAgIH0pXG4gKiAgIF0sXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqL1xuY29uc3Qgb3BlbkFJSW50ZWdyYXRpb24gPSBjb3JlLmRlZmluZUludGVncmF0aW9uKF9vcGVuQWlJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydHMuaW5zdHJ1bWVudE9wZW5BaSA9IGluc3RydW1lbnRPcGVuQWk7XG5leHBvcnRzLm9wZW5BSUludGVncmF0aW9uID0gb3BlbkFJSW50ZWdyYXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/openai/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/openai/instrumentation.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/openai/instrumentation.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\n\nconst supportedVersions = ['>=4.0.0 <6'];\n\n/**\n * Determines telemetry recording settings.\n */\nfunction determineRecordingSettings(\n  integrationOptions,\n  defaultEnabled,\n) {\n  const recordInputs = integrationOptions?.recordInputs ?? defaultEnabled;\n  const recordOutputs = integrationOptions?.recordOutputs ?? defaultEnabled;\n  return { recordInputs, recordOutputs };\n}\n\n/**\n * Sentry OpenAI instrumentation using OpenTelemetry.\n */\nclass SentryOpenAiInstrumentation extends instrumentation.InstrumentationBase {\n   constructor(config = {}) {\n    super('@sentry/instrumentation-openai', core.SDK_VERSION, config);\n  }\n\n  /**\n   * Initializes the instrumentation by defining the modules to be patched.\n   */\n   init() {\n    const module = new instrumentation.InstrumentationNodeModuleDefinition('openai', supportedVersions, this._patch.bind(this));\n    return module;\n  }\n\n  /**\n   * Core patch logic applying instrumentation to the OpenAI client constructor.\n   */\n   _patch(exports) {\n    const Original = exports.OpenAI;\n\n    const WrappedOpenAI = function ( ...args) {\n      const instance = Reflect.construct(Original, args);\n      const client = core.getClient();\n      const integration = client?.getIntegrationByName(core.OPENAI_INTEGRATION_NAME);\n      const integrationOpts = integration?.options;\n      const defaultPii = Boolean(client?.getOptions().sendDefaultPii);\n\n      const { recordInputs, recordOutputs } = determineRecordingSettings(integrationOpts, defaultPii);\n\n      return core.instrumentOpenAiClient(instance , {\n        recordInputs,\n        recordOutputs,\n      });\n    } ;\n\n    // Preserve static and prototype chains\n    Object.setPrototypeOf(WrappedOpenAI, Original);\n    Object.setPrototypeOf(WrappedOpenAI.prototype, Original.prototype);\n\n    for (const key of Object.getOwnPropertyNames(Original)) {\n      if (!['length', 'name', 'prototype'].includes(key)) {\n        const descriptor = Object.getOwnPropertyDescriptor(Original, key);\n        if (descriptor) {\n          Object.defineProperty(WrappedOpenAI, key, descriptor);\n        }\n      }\n    }\n\n    // Constructor replacement - handle read-only properties\n    // The OpenAI property might have only a getter, so use defineProperty\n    try {\n      exports.OpenAI = WrappedOpenAI;\n    } catch (error) {\n      // If direct assignment fails, override the property descriptor\n      Object.defineProperty(exports, 'OpenAI', {\n        value: WrappedOpenAI,\n        writable: true,\n        configurable: true,\n        enumerable: true,\n      });\n    }\n\n    // Wrap the default export if it points to the original constructor\n    // Constructor replacement - handle read-only properties\n    // The OpenAI property might have only a getter, so use defineProperty\n    if (exports.default === Original) {\n      try {\n        exports.default = WrappedOpenAI;\n      } catch (error) {\n        // If direct assignment fails, override the property descriptor\n        Object.defineProperty(exports, 'default', {\n          value: WrappedOpenAI,\n          writable: true,\n          configurable: true,\n          enumerable: true,\n        });\n      }\n    }\n    return exports;\n  }\n}\n\nexports.SentryOpenAiInstrumentation = SentryOpenAiInstrumentation;\n//# sourceMappingURL=instrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvb3BlbmFpL2luc3RydW1lbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxDQUFDLG9EQUFvRCx5Q0FBeUMsMENBQTBDLDhDQUE4QyxvREFBb0QscURBQXFELGlCQUFpQjs7QUFFaFQsd0JBQXdCLG1CQUFPLENBQUMsOExBQWdDO0FBQ2hFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYzs7QUFFbkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYyw4QkFBOEI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1DQUFtQztBQUNuQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFxvcGVuYWlcXGluc3RydW1lbnRhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyI7Z2xvYmFsVGhpc1tcIl9zZW50cnlSZXdyaXRlc1R1bm5lbFBhdGhcIl0gPSB1bmRlZmluZWQ7Z2xvYmFsVGhpc1tcIlNFTlRSWV9SRUxFQVNFXCJdID0gdW5kZWZpbmVkO2dsb2JhbFRoaXNbXCJfc2VudHJ5QmFzZVBhdGhcIl0gPSB1bmRlZmluZWQ7Z2xvYmFsVGhpc1tcIl9zZW50cnlOZXh0SnNWZXJzaW9uXCJdID0gXCIxNS41LjRcIjtnbG9iYWxUaGlzW1wiX3NlbnRyeVJld3JpdGVGcmFtZXNEaXN0RGlyXCJdID0gXCIubmV4dFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBpbnN0cnVtZW50YXRpb24gPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24nKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcblxuY29uc3Qgc3VwcG9ydGVkVmVyc2lvbnMgPSBbJz49NC4wLjAgPDYnXTtcblxuLyoqXG4gKiBEZXRlcm1pbmVzIHRlbGVtZXRyeSByZWNvcmRpbmcgc2V0dGluZ3MuXG4gKi9cbmZ1bmN0aW9uIGRldGVybWluZVJlY29yZGluZ1NldHRpbmdzKFxuICBpbnRlZ3JhdGlvbk9wdGlvbnMsXG4gIGRlZmF1bHRFbmFibGVkLFxuKSB7XG4gIGNvbnN0IHJlY29yZElucHV0cyA9IGludGVncmF0aW9uT3B0aW9ucz8ucmVjb3JkSW5wdXRzID8/IGRlZmF1bHRFbmFibGVkO1xuICBjb25zdCByZWNvcmRPdXRwdXRzID0gaW50ZWdyYXRpb25PcHRpb25zPy5yZWNvcmRPdXRwdXRzID8/IGRlZmF1bHRFbmFibGVkO1xuICByZXR1cm4geyByZWNvcmRJbnB1dHMsIHJlY29yZE91dHB1dHMgfTtcbn1cblxuLyoqXG4gKiBTZW50cnkgT3BlbkFJIGluc3RydW1lbnRhdGlvbiB1c2luZyBPcGVuVGVsZW1ldHJ5LlxuICovXG5jbGFzcyBTZW50cnlPcGVuQWlJbnN0cnVtZW50YXRpb24gZXh0ZW5kcyBpbnN0cnVtZW50YXRpb24uSW5zdHJ1bWVudGF0aW9uQmFzZSB7XG4gICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgIHN1cGVyKCdAc2VudHJ5L2luc3RydW1lbnRhdGlvbi1vcGVuYWknLCBjb3JlLlNES19WRVJTSU9OLCBjb25maWcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemVzIHRoZSBpbnN0cnVtZW50YXRpb24gYnkgZGVmaW5pbmcgdGhlIG1vZHVsZXMgdG8gYmUgcGF0Y2hlZC5cbiAgICovXG4gICBpbml0KCkge1xuICAgIGNvbnN0IG1vZHVsZSA9IG5ldyBpbnN0cnVtZW50YXRpb24uSW5zdHJ1bWVudGF0aW9uTm9kZU1vZHVsZURlZmluaXRpb24oJ29wZW5haScsIHN1cHBvcnRlZFZlcnNpb25zLCB0aGlzLl9wYXRjaC5iaW5kKHRoaXMpKTtcbiAgICByZXR1cm4gbW9kdWxlO1xuICB9XG5cbiAgLyoqXG4gICAqIENvcmUgcGF0Y2ggbG9naWMgYXBwbHlpbmcgaW5zdHJ1bWVudGF0aW9uIHRvIHRoZSBPcGVuQUkgY2xpZW50IGNvbnN0cnVjdG9yLlxuICAgKi9cbiAgIF9wYXRjaChleHBvcnRzKSB7XG4gICAgY29uc3QgT3JpZ2luYWwgPSBleHBvcnRzLk9wZW5BSTtcblxuICAgIGNvbnN0IFdyYXBwZWRPcGVuQUkgPSBmdW5jdGlvbiAoIC4uLmFyZ3MpIHtcbiAgICAgIGNvbnN0IGluc3RhbmNlID0gUmVmbGVjdC5jb25zdHJ1Y3QoT3JpZ2luYWwsIGFyZ3MpO1xuICAgICAgY29uc3QgY2xpZW50ID0gY29yZS5nZXRDbGllbnQoKTtcbiAgICAgIGNvbnN0IGludGVncmF0aW9uID0gY2xpZW50Py5nZXRJbnRlZ3JhdGlvbkJ5TmFtZShjb3JlLk9QRU5BSV9JTlRFR1JBVElPTl9OQU1FKTtcbiAgICAgIGNvbnN0IGludGVncmF0aW9uT3B0cyA9IGludGVncmF0aW9uPy5vcHRpb25zO1xuICAgICAgY29uc3QgZGVmYXVsdFBpaSA9IEJvb2xlYW4oY2xpZW50Py5nZXRPcHRpb25zKCkuc2VuZERlZmF1bHRQaWkpO1xuXG4gICAgICBjb25zdCB7IHJlY29yZElucHV0cywgcmVjb3JkT3V0cHV0cyB9ID0gZGV0ZXJtaW5lUmVjb3JkaW5nU2V0dGluZ3MoaW50ZWdyYXRpb25PcHRzLCBkZWZhdWx0UGlpKTtcblxuICAgICAgcmV0dXJuIGNvcmUuaW5zdHJ1bWVudE9wZW5BaUNsaWVudChpbnN0YW5jZSAsIHtcbiAgICAgICAgcmVjb3JkSW5wdXRzLFxuICAgICAgICByZWNvcmRPdXRwdXRzLFxuICAgICAgfSk7XG4gICAgfSA7XG5cbiAgICAvLyBQcmVzZXJ2ZSBzdGF0aWMgYW5kIHByb3RvdHlwZSBjaGFpbnNcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoV3JhcHBlZE9wZW5BSSwgT3JpZ2luYWwpO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihXcmFwcGVkT3BlbkFJLnByb3RvdHlwZSwgT3JpZ2luYWwucHJvdG90eXBlKTtcblxuICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE9yaWdpbmFsKSkge1xuICAgICAgaWYgKCFbJ2xlbmd0aCcsICduYW1lJywgJ3Byb3RvdHlwZSddLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoT3JpZ2luYWwsIGtleSk7XG4gICAgICAgIGlmIChkZXNjcmlwdG9yKSB7XG4gICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyYXBwZWRPcGVuQUksIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBDb25zdHJ1Y3RvciByZXBsYWNlbWVudCAtIGhhbmRsZSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgIC8vIFRoZSBPcGVuQUkgcHJvcGVydHkgbWlnaHQgaGF2ZSBvbmx5IGEgZ2V0dGVyLCBzbyB1c2UgZGVmaW5lUHJvcGVydHlcbiAgICB0cnkge1xuICAgICAgZXhwb3J0cy5PcGVuQUkgPSBXcmFwcGVkT3BlbkFJO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBJZiBkaXJlY3QgYXNzaWdubWVudCBmYWlscywgb3ZlcnJpZGUgdGhlIHByb3BlcnR5IGRlc2NyaXB0b3JcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnT3BlbkFJJywge1xuICAgICAgICB2YWx1ZTogV3JhcHBlZE9wZW5BSSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFdyYXAgdGhlIGRlZmF1bHQgZXhwb3J0IGlmIGl0IHBvaW50cyB0byB0aGUgb3JpZ2luYWwgY29uc3RydWN0b3JcbiAgICAvLyBDb25zdHJ1Y3RvciByZXBsYWNlbWVudCAtIGhhbmRsZSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgIC8vIFRoZSBPcGVuQUkgcHJvcGVydHkgbWlnaHQgaGF2ZSBvbmx5IGEgZ2V0dGVyLCBzbyB1c2UgZGVmaW5lUHJvcGVydHlcbiAgICBpZiAoZXhwb3J0cy5kZWZhdWx0ID09PSBPcmlnaW5hbCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZXhwb3J0cy5kZWZhdWx0ID0gV3JhcHBlZE9wZW5BSTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIC8vIElmIGRpcmVjdCBhc3NpZ25tZW50IGZhaWxzLCBvdmVycmlkZSB0aGUgcHJvcGVydHkgZGVzY3JpcHRvclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ2RlZmF1bHQnLCB7XG4gICAgICAgICAgdmFsdWU6IFdyYXBwZWRPcGVuQUksXG4gICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZXhwb3J0cztcbiAgfVxufVxuXG5leHBvcnRzLlNlbnRyeU9wZW5BaUluc3RydW1lbnRhdGlvbiA9IFNlbnRyeU9wZW5BaUluc3RydW1lbnRhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydW1lbnRhdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/openai/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgres.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgres.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationPg = __webpack_require__(/*! @opentelemetry/instrumentation-pg */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_d57c332d3ffbdf9ba84c4917c829cf83/node_modules/@opentelemetry/instrumentation-pg/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Postgres';\n\nconst instrumentPostgres = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  () =>\n    new instrumentationPg.PgInstrumentation({\n      requireParentSpan: true,\n      requestHook(span) {\n        nodeCore.addOriginToSpan(span, 'auto.db.otel.postgres');\n      },\n    }),\n);\n\nconst _postgresIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentPostgres();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [pg](https://www.npmjs.com/package/pg) library.\n *\n * For more information, see the [`postgresIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/postgres/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.postgresIntegration()],\n * });\n * ```\n */\nconst postgresIntegration = core.defineIntegration(_postgresIntegration);\n\nexports.instrumentPostgres = instrumentPostgres;\nexports.postgresIntegration = postgresIntegration;\n//# sourceMappingURL=postgres.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvcG9zdGdyZXMuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsMEJBQTBCLG1CQUFPLENBQUMsb01BQW1DO0FBQ3JFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7O0FBRTVDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7QUFDMUIsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXHBvc3RncmVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBpbnN0cnVtZW50YXRpb25QZyA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1wZycpO1xuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3Qgbm9kZUNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUtY29yZScpO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ1Bvc3RncmVzJztcblxuY29uc3QgaW5zdHJ1bWVudFBvc3RncmVzID0gbm9kZUNvcmUuZ2VuZXJhdGVJbnN0cnVtZW50T25jZShcbiAgSU5URUdSQVRJT05fTkFNRSxcbiAgKCkgPT5cbiAgICBuZXcgaW5zdHJ1bWVudGF0aW9uUGcuUGdJbnN0cnVtZW50YXRpb24oe1xuICAgICAgcmVxdWlyZVBhcmVudFNwYW46IHRydWUsXG4gICAgICByZXF1ZXN0SG9vayhzcGFuKSB7XG4gICAgICAgIG5vZGVDb3JlLmFkZE9yaWdpblRvU3BhbihzcGFuLCAnYXV0by5kYi5vdGVsLnBvc3RncmVzJyk7XG4gICAgICB9LFxuICAgIH0pLFxuKTtcblxuY29uc3QgX3Bvc3RncmVzSW50ZWdyYXRpb24gPSAoKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgc2V0dXBPbmNlKCkge1xuICAgICAgaW5zdHJ1bWVudFBvc3RncmVzKCk7XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuLyoqXG4gKiBBZGRzIFNlbnRyeSB0cmFjaW5nIGluc3RydW1lbnRhdGlvbiBmb3IgdGhlIFtwZ10oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvcGcpIGxpYnJhcnkuXG4gKlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgW2Bwb3N0Z3Jlc0ludGVncmF0aW9uYCBkb2N1bWVudGF0aW9uXShodHRwczovL2RvY3Muc2VudHJ5LmlvL3BsYXRmb3Jtcy9qYXZhc2NyaXB0L2d1aWRlcy9ub2RlL2NvbmZpZ3VyYXRpb24vaW50ZWdyYXRpb25zL3Bvc3RncmVzLykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGNvbnN0IFNlbnRyeSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZScpO1xuICpcbiAqIFNlbnRyeS5pbml0KHtcbiAqICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkucG9zdGdyZXNJbnRlZ3JhdGlvbigpXSxcbiAqIH0pO1xuICogYGBgXG4gKi9cbmNvbnN0IHBvc3RncmVzSW50ZWdyYXRpb24gPSBjb3JlLmRlZmluZUludGVncmF0aW9uKF9wb3N0Z3Jlc0ludGVncmF0aW9uKTtcblxuZXhwb3J0cy5pbnN0cnVtZW50UG9zdGdyZXMgPSBpbnN0cnVtZW50UG9zdGdyZXM7XG5leHBvcnRzLnBvc3RncmVzSW50ZWdyYXRpb24gPSBwb3N0Z3Jlc0ludGVncmF0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9zdGdyZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgres.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgresjs.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgresjs.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semanticConventions = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\n// Instrumentation for https://github.com/porsager/postgres\n\nconst INTEGRATION_NAME = 'PostgresJs';\nconst SUPPORTED_VERSIONS = ['>=3.0.0 <4'];\n\nconst instrumentPostgresJs = nodeCore.generateInstrumentOnce(\n  INTEGRATION_NAME,\n  (options) =>\n    new PostgresJsInstrumentation({\n      requireParentSpan: options?.requireParentSpan ?? true,\n      requestHook: options?.requestHook,\n    }),\n);\n\n/**\n * Instrumentation for the [postgres](https://www.npmjs.com/package/postgres) library.\n * This instrumentation captures postgresjs queries and their attributes,\n */\nclass PostgresJsInstrumentation extends instrumentation.InstrumentationBase {\n   constructor(config) {\n    super('sentry-postgres-js', core.SDK_VERSION, config);\n  }\n\n  /**\n   * Initializes the instrumentation.\n   */\n   init() {\n    const instrumentationModule = new instrumentation.InstrumentationNodeModuleDefinition('postgres', SUPPORTED_VERSIONS);\n\n    ['src', 'cf/src', 'cjs/src'].forEach(path => {\n      instrumentationModule.files.push(\n        new instrumentation.InstrumentationNodeModuleFile(\n          `postgres/${path}/connection.js`,\n          ['*'],\n          this._patchConnection.bind(this),\n          this._unwrap.bind(this),\n        ),\n      );\n\n      instrumentationModule.files.push(\n        new instrumentation.InstrumentationNodeModuleFile(\n          `postgres/${path}/query.js`,\n          SUPPORTED_VERSIONS,\n          this._patchQuery.bind(this),\n          this._unwrap.bind(this),\n        ),\n      );\n    });\n\n    return [instrumentationModule];\n  }\n\n  /**\n   * Determines whether a span should be created based on the current context.\n   * If `requireParentSpan` is set to true in the configuration, a span will\n   * only be created if there is a parent span available.\n   */\n   _shouldCreateSpans() {\n    const config = this.getConfig();\n    const hasParentSpan = api.trace.getSpan(api.context.active()) !== undefined;\n    return hasParentSpan || !config.requireParentSpan;\n  }\n\n  /**\n   * Patches the reject method of the Query class to set the span status and end it\n   */\n   _patchReject(rejectTarget, span) {\n    return new Proxy(rejectTarget, {\n      apply: (\n        rejectTarget,\n        rejectThisArg,\n        rejectArgs\n\n,\n      ) => {\n        span.setStatus({\n          code: core.SPAN_STATUS_ERROR,\n          // This message is the error message from the rejectArgs, when available\n          // e.g \"relation 'User' does not exist\"\n          message: rejectArgs?.[0]?.message || 'unknown_error',\n        });\n\n        const result = Reflect.apply(rejectTarget, rejectThisArg, rejectArgs);\n\n        // This status code is PG error code, e.g. '42P01' for \"relation does not exist\"\n        // https://www.postgresql.org/docs/current/errcodes-appendix.html\n        span.setAttribute(semanticConventions.ATTR_DB_RESPONSE_STATUS_CODE, rejectArgs?.[0]?.code || 'Unknown error');\n        // This is the error type, e.g. 'PostgresError' for a Postgres error\n        span.setAttribute(semanticConventions.ATTR_ERROR_TYPE, rejectArgs?.[0]?.name || 'Unknown error');\n\n        span.end();\n        return result;\n      },\n    });\n  }\n\n  /**\n   * Patches the resolve method of the Query class to end the span when the query is resolved.\n   */\n   _patchResolve(resolveTarget, span) {\n    return new Proxy(resolveTarget, {\n      apply: (resolveTarget, resolveThisArg, resolveArgs) => {\n        const result = Reflect.apply(resolveTarget, resolveThisArg, resolveArgs);\n        const sqlCommand = resolveArgs?.[0]?.command;\n\n        if (sqlCommand) {\n          // SQL command is only available when the query is resolved successfully\n          span.setAttribute(semanticConventions.ATTR_DB_OPERATION_NAME, sqlCommand);\n        }\n        span.end();\n        return result;\n      },\n    });\n  }\n\n  /**\n   * Patches the Query class to instrument the handle method.\n   */\n   _patchQuery(moduleExports\n\n) {\n    moduleExports.Query.prototype.handle = new Proxy(moduleExports.Query.prototype.handle, {\n      apply: async (\n        handleTarget,\n        handleThisArg\n\n,\n        handleArgs,\n      ) => {\n        if (!this._shouldCreateSpans()) {\n          // If we don't need to create spans, just call the original method\n          return Reflect.apply(handleTarget, handleThisArg, handleArgs);\n        }\n\n        const sanitizedSqlQuery = this._sanitizeSqlQuery(handleThisArg.strings?.[0]);\n\n        return core.startSpanManual(\n          {\n            name: sanitizedSqlQuery || 'postgresjs.query',\n            op: 'db',\n          },\n          (span) => {\n            const scope = core.getCurrentScope();\n            const postgresConnectionContext = scope.getScopeData().contexts['postgresjsConnection']\n\n;\n\n            nodeCore.addOriginToSpan(span, 'auto.db.otel.postgres');\n\n            const { requestHook } = this.getConfig();\n\n            if (requestHook) {\n              instrumentation.safeExecuteInTheMiddle(\n                () => requestHook(span, sanitizedSqlQuery, postgresConnectionContext),\n                error => {\n                  if (error) {\n                    core.debug.error(`Error in requestHook for ${INTEGRATION_NAME} integration:`, error);\n                  }\n                },\n              );\n            }\n\n            // ATTR_DB_NAMESPACE is used to indicate the database name and the schema name\n            // It's only the database name as we don't have the schema information\n            const databaseName = postgresConnectionContext?.ATTR_DB_NAMESPACE || '<unknown database>';\n            const databaseHost = postgresConnectionContext?.ATTR_SERVER_ADDRESS || '<unknown host>';\n            const databasePort = postgresConnectionContext?.ATTR_SERVER_PORT || '<unknown port>';\n\n            span.setAttribute(semanticConventions.ATTR_DB_SYSTEM_NAME, 'postgres');\n            span.setAttribute(semanticConventions.ATTR_DB_NAMESPACE, databaseName);\n            span.setAttribute(semanticConventions.ATTR_SERVER_ADDRESS, databaseHost);\n            span.setAttribute(semanticConventions.ATTR_SERVER_PORT, databasePort);\n            span.setAttribute(semanticConventions.ATTR_DB_QUERY_TEXT, sanitizedSqlQuery);\n\n            handleThisArg.resolve = this._patchResolve(handleThisArg.resolve, span);\n            handleThisArg.reject = this._patchReject(handleThisArg.reject, span);\n\n            try {\n              return Reflect.apply(handleTarget, handleThisArg, handleArgs);\n            } catch (error) {\n              span.setStatus({\n                code: core.SPAN_STATUS_ERROR,\n              });\n              span.end();\n              throw error; // Re-throw the error to propagate it\n            }\n          },\n        );\n      },\n    });\n\n    return moduleExports;\n  }\n\n  /**\n   * Patches the Connection class to set the database, host, and port attributes\n   * when a new connection is created.\n   */\n   _patchConnection(Connection) {\n    return new Proxy(Connection, {\n      apply: (connectionTarget, thisArg, connectionArgs) => {\n        const databaseName = connectionArgs[0]?.database || '<unknown database>';\n        const databaseHost = connectionArgs[0]?.host?.[0] || '<unknown host>';\n        const databasePort = connectionArgs[0]?.port?.[0] || '<unknown port>';\n\n        const scope = core.getCurrentScope();\n        scope.setContext('postgresjsConnection', {\n          ATTR_DB_NAMESPACE: databaseName,\n          ATTR_SERVER_ADDRESS: databaseHost,\n          ATTR_SERVER_PORT: databasePort,\n        });\n\n        return Reflect.apply(connectionTarget, thisArg, connectionArgs);\n      },\n    });\n  }\n\n  /**\n   * Sanitize SQL query as per the OTEL semantic conventions\n   * https://opentelemetry.io/docs/specs/semconv/database/database-spans/#sanitization-of-dbquerytext\n   */\n   _sanitizeSqlQuery(sqlQuery) {\n    if (!sqlQuery) {\n      return 'Unknown SQL Query';\n    }\n\n    return (\n      sqlQuery\n        .replace(/\\s+/g, ' ')\n        .trim() // Remove extra spaces including newlines and trim\n        .substring(0, 1024) // Truncate to 1024 characters\n        .replace(/--.*?(\\r?\\n|$)/g, '') // Single line comments\n        .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '') // Multi-line comments\n        .replace(/;\\s*$/, '') // Remove trailing semicolons\n        .replace(/\\b\\d+\\b/g, '?') // Replace standalone numbers\n        // Collapse whitespace to a single space\n        .replace(/\\s+/g, ' ')\n        // Collapse IN and in clauses\n        // eg. IN (?, ?, ?, ?) to IN (?)\n        .replace(/\\bIN\\b\\s*\\(\\s*\\?(?:\\s*,\\s*\\?)*\\s*\\)/g, 'IN (?)')\n    );\n  }\n}\n\nconst _postgresJsIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentPostgresJs();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [postgres](https://www.npmjs.com/package/postgres) library.\n *\n * For more information, see the [`postgresIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/postgres/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.postgresJsIntegration()],\n * });\n * ```\n */\n\nconst postgresJsIntegration = core.defineIntegration(_postgresJsIntegration);\n\nexports.PostgresJsInstrumentation = PostgresJsInstrumentation;\nexports.instrumentPostgresJs = instrumentPostgresJs;\nexports.postgresJsIntegration = postgresJsIntegration;\n//# sourceMappingURL=postgresjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/postgresjs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation = __webpack_require__(/*! @prisma/instrumentation */ \"(rsc)/./node_modules/.pnpm/@prisma+instrumentation@6.15.0_@opentelemetry+api@1.9.0/node_modules/@prisma/instrumentation/dist/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst INTEGRATION_NAME = 'Prisma';\n\nfunction isPrismaV6TracingHelper(helper) {\n  return !!helper && typeof helper === 'object' && 'dispatchEngineSpans' in helper;\n}\n\nfunction getPrismaTracingHelper() {\n  const prismaInstrumentationObject = (globalThis ).PRISMA_INSTRUMENTATION;\n  const prismaTracingHelper =\n    prismaInstrumentationObject &&\n    typeof prismaInstrumentationObject === 'object' &&\n    'helper' in prismaInstrumentationObject\n      ? prismaInstrumentationObject.helper\n      : undefined;\n\n  return prismaTracingHelper;\n}\n\nclass SentryPrismaInteropInstrumentation extends instrumentation.PrismaInstrumentation {\n   constructor() {\n    super();\n  }\n\n   enable() {\n    super.enable();\n\n    // The PrismaIntegration (super class) defines a global variable `global[\"PRISMA_INSTRUMENTATION\"]` when `enable()` is called. This global variable holds a \"TracingHelper\" which Prisma uses internally to create tracing data. It's their way of not depending on OTEL with their main package. The sucky thing is, prisma broke the interface of the tracing helper with the v6 major update. This means that if you use Prisma 5 with the v6 instrumentation (or vice versa) Prisma just blows up, because tries to call methods on the helper that no longer exist.\n    // Because we actually want to use the v6 instrumentation and not blow up in Prisma 5 user's faces, what we're doing here is backfilling the v5 method (`createEngineSpan`) with a noop so that no longer crashes when it attempts to call that function.\n    const prismaTracingHelper = getPrismaTracingHelper();\n\n    if (isPrismaV6TracingHelper(prismaTracingHelper)) {\n      // Inspired & adjusted from https://github.com/prisma/prisma/tree/5.22.0/packages/instrumentation\n      (prismaTracingHelper ).createEngineSpan = (\n        engineSpanEvent,\n      ) => {\n        const tracer = api.trace.getTracer('prismaV5Compatibility') ;\n\n        // Prisma v5 relies on being able to create spans with a specific span & trace ID\n        // this is no longer possible in OTEL v2, there is no public API to do this anymore\n        // So in order to kind of hack this possibility, we rely on the internal `_idGenerator` property\n        // This is used to generate the random IDs, and we overwrite this temporarily to generate static IDs\n        // This is flawed and may not work, e.g. if the code is bundled and the private property is renamed\n        // in such cases, these spans will not be captured and some Prisma spans will be missing\n        const initialIdGenerator = tracer._idGenerator;\n\n        if (!initialIdGenerator) {\n          core.consoleSandbox(() => {\n            // eslint-disable-next-line no-console\n            console.warn(\n              '[Sentry] Could not find _idGenerator on tracer, skipping Prisma v5 compatibility - some Prisma spans may be missing!',\n            );\n          });\n\n          return;\n        }\n\n        try {\n          engineSpanEvent.spans.forEach(engineSpan => {\n            const kind = engineSpanKindToOTELSpanKind(engineSpan.kind);\n\n            const parentSpanId = engineSpan.parent_span_id;\n            const spanId = engineSpan.span_id;\n            const traceId = engineSpan.trace_id;\n\n            const links = engineSpan.links?.map(link => {\n              return {\n                context: {\n                  traceId: link.trace_id,\n                  spanId: link.span_id,\n                  traceFlags: api.TraceFlags.SAMPLED,\n                },\n              };\n            });\n\n            const ctx = api.trace.setSpanContext(api.context.active(), {\n              traceId,\n              spanId: parentSpanId,\n              traceFlags: api.TraceFlags.SAMPLED,\n            });\n\n            api.context.with(ctx, () => {\n              const temporaryIdGenerator = {\n                generateTraceId: () => {\n                  return traceId;\n                },\n                generateSpanId: () => {\n                  return spanId;\n                },\n              };\n\n              tracer._idGenerator = temporaryIdGenerator;\n\n              const span = tracer.startSpan(engineSpan.name, {\n                kind,\n                links,\n                startTime: engineSpan.start_time,\n                attributes: engineSpan.attributes,\n              });\n\n              span.end(engineSpan.end_time);\n\n              tracer._idGenerator = initialIdGenerator;\n            });\n          });\n        } finally {\n          // Ensure we always restore this at the end, even if something errors\n          tracer._idGenerator = initialIdGenerator;\n        }\n      };\n    }\n  }\n}\n\nfunction engineSpanKindToOTELSpanKind(engineSpanKind) {\n  switch (engineSpanKind) {\n    case 'client':\n      return api.SpanKind.CLIENT;\n    case 'internal':\n    default: // Other span kinds aren't currently supported\n      return api.SpanKind.INTERNAL;\n  }\n}\n\nconst instrumentPrisma = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, _options => {\n  return new SentryPrismaInteropInstrumentation();\n});\n\n/**\n * Adds Sentry tracing instrumentation for the [prisma](https://www.npmjs.com/package/prisma) library.\n * For more information, see the [`prismaIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/prisma/).\n *\n * NOTE: By default, this integration works with Prisma version 6.\n * To get performance instrumentation for other Prisma versions,\n * 1. Install the `@prisma/instrumentation` package with the desired version.\n * 1. Pass a `new PrismaInstrumentation()` instance as exported from `@prisma/instrumentation` to the `prismaInstrumentation` option of this integration:\n *\n *    ```js\n *    import { PrismaInstrumentation } from '@prisma/instrumentation'\n *\n *    Sentry.init({\n *      integrations: [\n *        prismaIntegration({\n *          // Override the default instrumentation that Sentry uses\n *          prismaInstrumentation: new PrismaInstrumentation()\n *        })\n *      ]\n *    })\n *    ```\n *\n *    The passed instrumentation instance will override the default instrumentation instance the integration would use, while the `prismaIntegration` will still ensure data compatibility for the various Prisma versions.\n * 1. Depending on your Prisma version (prior to version 6), add `previewFeatures = [\"tracing\"]` to the client generator block of your Prisma schema:\n *\n *    ```\n *    generator client {\n *      provider = \"prisma-client-js\"\n *      previewFeatures = [\"tracing\"]\n *    }\n *    ```\n */\nconst prismaIntegration = core.defineIntegration((_options) => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      instrumentPrisma();\n    },\n    setup(client) {\n      // If no tracing helper exists, we skip any work here\n      // this means that prisma is not being used\n      if (!getPrismaTracingHelper()) {\n        return;\n      }\n\n      client.on('spanStart', span => {\n        const spanJSON = core.spanToJSON(span);\n        if (spanJSON.description?.startsWith('prisma:')) {\n          span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, 'auto.db.otel.prisma');\n        }\n\n        // Make sure we use the query text as the span name, for ex. SELECT * FROM \"User\" WHERE \"id\" = $1\n        if (spanJSON.description === 'prisma:engine:db_query' && spanJSON.data['db.query.text']) {\n          span.updateName(spanJSON.data['db.query.text'] );\n        }\n\n        // In Prisma v5.22+, the `db.system` attribute is automatically set\n        // On older versions, this is missing, so we add it here\n        if (spanJSON.description === 'prisma:engine:db_query' && !spanJSON.data['db.system']) {\n          span.setAttribute('db.system', 'prisma');\n        }\n      });\n    },\n  };\n});\n\nexports.instrumentPrisma = instrumentPrisma;\nexports.prismaIntegration = prismaIntegration;\n//# sourceMappingURL=prisma.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/redis.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/redis.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationIoredis = __webpack_require__(/*! @opentelemetry/instrumentation-ioredis */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_7c4adc452bfd1b7c6ad0c5262d94b3a4/node_modules/@opentelemetry/instrumentation-ioredis/build/src/index.js\");\nconst instrumentationRedis = __webpack_require__(/*! @opentelemetry/instrumentation-redis */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_7384594ffdb1c27f9ac33821efdcaad9/node_modules/@opentelemetry/instrumentation-redis/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst redisCache = __webpack_require__(/*! ../../utils/redisCache.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/utils/redisCache.js\");\n\nconst INTEGRATION_NAME = 'Redis';\n\nlet _redisOptions = {};\n\nconst cacheResponseHook = (span, redisCommand, cmdArgs, response) => {\n  span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, 'auto.db.otel.redis');\n\n  const safeKey = redisCache.getCacheKeySafely(redisCommand, cmdArgs);\n  const cacheOperation = redisCache.getCacheOperation(redisCommand);\n\n  if (\n    !safeKey ||\n    !cacheOperation ||\n    !_redisOptions.cachePrefixes ||\n    !redisCache.shouldConsiderForCache(redisCommand, safeKey, _redisOptions.cachePrefixes)\n  ) {\n    // not relevant for cache\n    return;\n  }\n\n  // otel/ioredis seems to be using the old standard, as there was a change to those params: https://github.com/open-telemetry/opentelemetry-specification/issues/3199\n  // We are using params based on the docs: https://opentelemetry.io/docs/specs/semconv/attributes-registry/network/\n  const networkPeerAddress = core.spanToJSON(span).data['net.peer.name'];\n  const networkPeerPort = core.spanToJSON(span).data['net.peer.port'];\n  if (networkPeerPort && networkPeerAddress) {\n    span.setAttributes({ 'network.peer.address': networkPeerAddress, 'network.peer.port': networkPeerPort });\n  }\n\n  const cacheItemSize = redisCache.calculateCacheItemSize(response);\n\n  if (cacheItemSize) {\n    span.setAttribute(core.SEMANTIC_ATTRIBUTE_CACHE_ITEM_SIZE, cacheItemSize);\n  }\n\n  if (redisCache.isInCommands(redisCache.GET_COMMANDS, redisCommand) && cacheItemSize !== undefined) {\n    span.setAttribute(core.SEMANTIC_ATTRIBUTE_CACHE_HIT, cacheItemSize > 0);\n  }\n\n  span.setAttributes({\n    [core.SEMANTIC_ATTRIBUTE_SENTRY_OP]: cacheOperation,\n    [core.SEMANTIC_ATTRIBUTE_CACHE_KEY]: safeKey,\n  });\n\n  const spanDescription = safeKey.join(', ');\n\n  span.updateName(core.truncate(spanDescription, 1024));\n};\n\nconst instrumentIORedis = nodeCore.generateInstrumentOnce(`${INTEGRATION_NAME}.IORedis`, () => {\n  return new instrumentationIoredis.IORedisInstrumentation({\n    responseHook: cacheResponseHook,\n  });\n});\n\nconst instrumentRedisModule = nodeCore.generateInstrumentOnce(`${INTEGRATION_NAME}.Redis`, () => {\n  return new instrumentationRedis.RedisInstrumentation({\n    responseHook: cacheResponseHook,\n  });\n});\n\n/** To be able to preload all Redis OTel instrumentations with just one ID (\"Redis\"), all the instrumentations are generated in this one function  */\nconst instrumentRedis = Object.assign(\n  () => {\n    instrumentIORedis();\n    instrumentRedisModule();\n\n    // todo: implement them gradually\n    // new LegacyRedisInstrumentation({}),\n  },\n  { id: INTEGRATION_NAME },\n);\n\nconst _redisIntegration = ((options = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      _redisOptions = options;\n      instrumentRedis();\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [redis](https://www.npmjs.com/package/redis) and\n * [ioredis](https://www.npmjs.com/package/ioredis) libraries.\n *\n * For more information, see the [`redisIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/redis/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.redisIntegration()],\n * });\n * ```\n */\nconst redisIntegration = core.defineIntegration(_redisIntegration);\n\nexports.instrumentRedis = instrumentRedis;\nexports.redisIntegration = redisIntegration;\n//# sourceMappingURL=redis.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvcmVkaXMuanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsK0JBQStCLG1CQUFPLENBQUMsOE1BQXdDO0FBQy9FLDZCQUE2QixtQkFBTyxDQUFDLDBNQUFzQztBQUMzRSxhQUFhLG1CQUFPLENBQUMsa0hBQWM7QUFDbkMsaUJBQWlCLG1CQUFPLENBQUMsb0tBQW1CO0FBQzVDLG1CQUFtQixtQkFBTyxDQUFDLDBJQUEyQjs7QUFFdEQ7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGtGQUFrRjtBQUMzRzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTs7QUFFQSw2REFBNkQsaUJBQWlCO0FBQzlFO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRCxpRUFBaUUsaUJBQWlCO0FBQ2xGO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0NBQXdDO0FBQ3hDLEdBQUc7QUFDSCxJQUFJLHNCQUFzQjtBQUMxQjs7QUFFQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUI7QUFDdkIsd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXHJlZGlzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBpbnN0cnVtZW50YXRpb25Jb3JlZGlzID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLWlvcmVkaXMnKTtcbmNvbnN0IGluc3RydW1lbnRhdGlvblJlZGlzID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLXJlZGlzJyk7XG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5jb25zdCBub2RlQ29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZS1jb3JlJyk7XG5jb25zdCByZWRpc0NhY2hlID0gcmVxdWlyZSgnLi4vLi4vdXRpbHMvcmVkaXNDYWNoZS5qcycpO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ1JlZGlzJztcblxubGV0IF9yZWRpc09wdGlvbnMgPSB7fTtcblxuY29uc3QgY2FjaGVSZXNwb25zZUhvb2sgPSAoc3BhbiwgcmVkaXNDb21tYW5kLCBjbWRBcmdzLCByZXNwb25zZSkgPT4ge1xuICBzcGFuLnNldEF0dHJpYnV0ZShjb3JlLlNFTUFOVElDX0FUVFJJQlVURV9TRU5UUllfT1JJR0lOLCAnYXV0by5kYi5vdGVsLnJlZGlzJyk7XG5cbiAgY29uc3Qgc2FmZUtleSA9IHJlZGlzQ2FjaGUuZ2V0Q2FjaGVLZXlTYWZlbHkocmVkaXNDb21tYW5kLCBjbWRBcmdzKTtcbiAgY29uc3QgY2FjaGVPcGVyYXRpb24gPSByZWRpc0NhY2hlLmdldENhY2hlT3BlcmF0aW9uKHJlZGlzQ29tbWFuZCk7XG5cbiAgaWYgKFxuICAgICFzYWZlS2V5IHx8XG4gICAgIWNhY2hlT3BlcmF0aW9uIHx8XG4gICAgIV9yZWRpc09wdGlvbnMuY2FjaGVQcmVmaXhlcyB8fFxuICAgICFyZWRpc0NhY2hlLnNob3VsZENvbnNpZGVyRm9yQ2FjaGUocmVkaXNDb21tYW5kLCBzYWZlS2V5LCBfcmVkaXNPcHRpb25zLmNhY2hlUHJlZml4ZXMpXG4gICkge1xuICAgIC8vIG5vdCByZWxldmFudCBmb3IgY2FjaGVcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBvdGVsL2lvcmVkaXMgc2VlbXMgdG8gYmUgdXNpbmcgdGhlIG9sZCBzdGFuZGFyZCwgYXMgdGhlcmUgd2FzIGEgY2hhbmdlIHRvIHRob3NlIHBhcmFtczogaHR0cHM6Ly9naXRodWIuY29tL29wZW4tdGVsZW1ldHJ5L29wZW50ZWxlbWV0cnktc3BlY2lmaWNhdGlvbi9pc3N1ZXMvMzE5OVxuICAvLyBXZSBhcmUgdXNpbmcgcGFyYW1zIGJhc2VkIG9uIHRoZSBkb2NzOiBodHRwczovL29wZW50ZWxlbWV0cnkuaW8vZG9jcy9zcGVjcy9zZW1jb252L2F0dHJpYnV0ZXMtcmVnaXN0cnkvbmV0d29yay9cbiAgY29uc3QgbmV0d29ya1BlZXJBZGRyZXNzID0gY29yZS5zcGFuVG9KU09OKHNwYW4pLmRhdGFbJ25ldC5wZWVyLm5hbWUnXTtcbiAgY29uc3QgbmV0d29ya1BlZXJQb3J0ID0gY29yZS5zcGFuVG9KU09OKHNwYW4pLmRhdGFbJ25ldC5wZWVyLnBvcnQnXTtcbiAgaWYgKG5ldHdvcmtQZWVyUG9ydCAmJiBuZXR3b3JrUGVlckFkZHJlc3MpIHtcbiAgICBzcGFuLnNldEF0dHJpYnV0ZXMoeyAnbmV0d29yay5wZWVyLmFkZHJlc3MnOiBuZXR3b3JrUGVlckFkZHJlc3MsICduZXR3b3JrLnBlZXIucG9ydCc6IG5ldHdvcmtQZWVyUG9ydCB9KTtcbiAgfVxuXG4gIGNvbnN0IGNhY2hlSXRlbVNpemUgPSByZWRpc0NhY2hlLmNhbGN1bGF0ZUNhY2hlSXRlbVNpemUocmVzcG9uc2UpO1xuXG4gIGlmIChjYWNoZUl0ZW1TaXplKSB7XG4gICAgc3Bhbi5zZXRBdHRyaWJ1dGUoY29yZS5TRU1BTlRJQ19BVFRSSUJVVEVfQ0FDSEVfSVRFTV9TSVpFLCBjYWNoZUl0ZW1TaXplKTtcbiAgfVxuXG4gIGlmIChyZWRpc0NhY2hlLmlzSW5Db21tYW5kcyhyZWRpc0NhY2hlLkdFVF9DT01NQU5EUywgcmVkaXNDb21tYW5kKSAmJiBjYWNoZUl0ZW1TaXplICE9PSB1bmRlZmluZWQpIHtcbiAgICBzcGFuLnNldEF0dHJpYnV0ZShjb3JlLlNFTUFOVElDX0FUVFJJQlVURV9DQUNIRV9ISVQsIGNhY2hlSXRlbVNpemUgPiAwKTtcbiAgfVxuXG4gIHNwYW4uc2V0QXR0cmlidXRlcyh7XG4gICAgW2NvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUF06IGNhY2hlT3BlcmF0aW9uLFxuICAgIFtjb3JlLlNFTUFOVElDX0FUVFJJQlVURV9DQUNIRV9LRVldOiBzYWZlS2V5LFxuICB9KTtcblxuICBjb25zdCBzcGFuRGVzY3JpcHRpb24gPSBzYWZlS2V5LmpvaW4oJywgJyk7XG5cbiAgc3Bhbi51cGRhdGVOYW1lKGNvcmUudHJ1bmNhdGUoc3BhbkRlc2NyaXB0aW9uLCAxMDI0KSk7XG59O1xuXG5jb25zdCBpbnN0cnVtZW50SU9SZWRpcyA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoYCR7SU5URUdSQVRJT05fTkFNRX0uSU9SZWRpc2AsICgpID0+IHtcbiAgcmV0dXJuIG5ldyBpbnN0cnVtZW50YXRpb25Jb3JlZGlzLklPUmVkaXNJbnN0cnVtZW50YXRpb24oe1xuICAgIHJlc3BvbnNlSG9vazogY2FjaGVSZXNwb25zZUhvb2ssXG4gIH0pO1xufSk7XG5cbmNvbnN0IGluc3RydW1lbnRSZWRpc01vZHVsZSA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoYCR7SU5URUdSQVRJT05fTkFNRX0uUmVkaXNgLCAoKSA9PiB7XG4gIHJldHVybiBuZXcgaW5zdHJ1bWVudGF0aW9uUmVkaXMuUmVkaXNJbnN0cnVtZW50YXRpb24oe1xuICAgIHJlc3BvbnNlSG9vazogY2FjaGVSZXNwb25zZUhvb2ssXG4gIH0pO1xufSk7XG5cbi8qKiBUbyBiZSBhYmxlIHRvIHByZWxvYWQgYWxsIFJlZGlzIE9UZWwgaW5zdHJ1bWVudGF0aW9ucyB3aXRoIGp1c3Qgb25lIElEIChcIlJlZGlzXCIpLCBhbGwgdGhlIGluc3RydW1lbnRhdGlvbnMgYXJlIGdlbmVyYXRlZCBpbiB0aGlzIG9uZSBmdW5jdGlvbiAgKi9cbmNvbnN0IGluc3RydW1lbnRSZWRpcyA9IE9iamVjdC5hc3NpZ24oXG4gICgpID0+IHtcbiAgICBpbnN0cnVtZW50SU9SZWRpcygpO1xuICAgIGluc3RydW1lbnRSZWRpc01vZHVsZSgpO1xuXG4gICAgLy8gdG9kbzogaW1wbGVtZW50IHRoZW0gZ3JhZHVhbGx5XG4gICAgLy8gbmV3IExlZ2FjeVJlZGlzSW5zdHJ1bWVudGF0aW9uKHt9KSxcbiAgfSxcbiAgeyBpZDogSU5URUdSQVRJT05fTkFNRSB9LFxuKTtcblxuY29uc3QgX3JlZGlzSW50ZWdyYXRpb24gPSAoKG9wdGlvbnMgPSB7fSkgPT4ge1xuICByZXR1cm4ge1xuICAgIG5hbWU6IElOVEVHUkFUSU9OX05BTUUsXG4gICAgc2V0dXBPbmNlKCkge1xuICAgICAgX3JlZGlzT3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICBpbnN0cnVtZW50UmVkaXMoKTtcbiAgICB9LFxuICB9O1xufSkgO1xuXG4vKipcbiAqIEFkZHMgU2VudHJ5IHRyYWNpbmcgaW5zdHJ1bWVudGF0aW9uIGZvciB0aGUgW3JlZGlzXShodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9yZWRpcykgYW5kXG4gKiBbaW9yZWRpc10oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaW9yZWRpcykgbGlicmFyaWVzLlxuICpcbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIFtgcmVkaXNJbnRlZ3JhdGlvbmAgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvbm9kZS9jb25maWd1cmF0aW9uL2ludGVncmF0aW9ucy9yZWRpcy8pLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgaW50ZWdyYXRpb25zOiBbU2VudHJ5LnJlZGlzSW50ZWdyYXRpb24oKV0sXG4gKiB9KTtcbiAqIGBgYFxuICovXG5jb25zdCByZWRpc0ludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfcmVkaXNJbnRlZ3JhdGlvbik7XG5cbmV4cG9ydHMuaW5zdHJ1bWVudFJlZGlzID0gaW5zdHJ1bWVudFJlZGlzO1xuZXhwb3J0cy5yZWRpc0ludGVncmF0aW9uID0gcmVkaXNJbnRlZ3JhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZGlzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/redis.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/tedious.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/tedious.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentationTedious = __webpack_require__(/*! @opentelemetry/instrumentation-tedious */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_324a190ad1ac52c1e001dce6cbdc724d/node_modules/@opentelemetry/instrumentation-tedious/build/src/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\n\nconst TEDIUS_INSTRUMENTED_METHODS = new Set([\n  'callProcedure',\n  'execSql',\n  'execSqlBatch',\n  'execBulkLoad',\n  'prepare',\n  'execute',\n]);\n\nconst INTEGRATION_NAME = 'Tedious';\n\nconst instrumentTedious = nodeCore.generateInstrumentOnce(INTEGRATION_NAME, () => new instrumentationTedious.TediousInstrumentation({}));\n\nconst _tediousIntegration = (() => {\n  let instrumentationWrappedCallback;\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      const instrumentation = instrumentTedious();\n      instrumentationWrappedCallback = nodeCore.instrumentWhenWrapped(instrumentation);\n    },\n\n    setup(client) {\n      instrumentationWrappedCallback?.(() =>\n        client.on('spanStart', span => {\n          const { description, data } = core.spanToJSON(span);\n          // Tedius integration always set a span name and `db.system` attribute to `mssql`.\n          if (!description || data['db.system'] !== 'mssql') {\n            return;\n          }\n\n          const operation = description.split(' ')[0] || '';\n          if (TEDIUS_INSTRUMENTED_METHODS.has(operation)) {\n            span.setAttribute(core.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, 'auto.db.otel.tedious');\n          }\n        }),\n      );\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [tedious](https://www.npmjs.com/package/tedious) library.\n *\n * For more information, see the [`tediousIntegration` documentation](https://docs.sentry.io/platforms/javascript/guides/node/configuration/integrations/tedious/).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.tediousIntegration()],\n * });\n * ```\n */\nconst tediousIntegration = core.defineIntegration(_tediousIntegration);\n\nexports.instrumentTedious = instrumentTedious;\nexports.tediousIntegration = tediousIntegration;\n//# sourceMappingURL=tedious.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvdGVkaW91cy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RSwrQkFBK0IsbUJBQU8sQ0FBQyw4TUFBd0M7QUFDL0UsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxzSUFBc0k7O0FBRXRJO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG9CQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCO0FBQ3pCLDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFx0ZWRpb3VzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBpbnN0cnVtZW50YXRpb25UZWRpb3VzID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLXRlZGlvdXMnKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcblxuY29uc3QgVEVESVVTX0lOU1RSVU1FTlRFRF9NRVRIT0RTID0gbmV3IFNldChbXG4gICdjYWxsUHJvY2VkdXJlJyxcbiAgJ2V4ZWNTcWwnLFxuICAnZXhlY1NxbEJhdGNoJyxcbiAgJ2V4ZWNCdWxrTG9hZCcsXG4gICdwcmVwYXJlJyxcbiAgJ2V4ZWN1dGUnLFxuXSk7XG5cbmNvbnN0IElOVEVHUkFUSU9OX05BTUUgPSAnVGVkaW91cyc7XG5cbmNvbnN0IGluc3RydW1lbnRUZWRpb3VzID0gbm9kZUNvcmUuZ2VuZXJhdGVJbnN0cnVtZW50T25jZShJTlRFR1JBVElPTl9OQU1FLCAoKSA9PiBuZXcgaW5zdHJ1bWVudGF0aW9uVGVkaW91cy5UZWRpb3VzSW5zdHJ1bWVudGF0aW9uKHt9KSk7XG5cbmNvbnN0IF90ZWRpb3VzSW50ZWdyYXRpb24gPSAoKCkgPT4ge1xuICBsZXQgaW5zdHJ1bWVudGF0aW9uV3JhcHBlZENhbGxiYWNrO1xuXG4gIHJldHVybiB7XG4gICAgbmFtZTogSU5URUdSQVRJT05fTkFNRSxcbiAgICBzZXR1cE9uY2UoKSB7XG4gICAgICBjb25zdCBpbnN0cnVtZW50YXRpb24gPSBpbnN0cnVtZW50VGVkaW91cygpO1xuICAgICAgaW5zdHJ1bWVudGF0aW9uV3JhcHBlZENhbGxiYWNrID0gbm9kZUNvcmUuaW5zdHJ1bWVudFdoZW5XcmFwcGVkKGluc3RydW1lbnRhdGlvbik7XG4gICAgfSxcblxuICAgIHNldHVwKGNsaWVudCkge1xuICAgICAgaW5zdHJ1bWVudGF0aW9uV3JhcHBlZENhbGxiYWNrPy4oKCkgPT5cbiAgICAgICAgY2xpZW50Lm9uKCdzcGFuU3RhcnQnLCBzcGFuID0+IHtcbiAgICAgICAgICBjb25zdCB7IGRlc2NyaXB0aW9uLCBkYXRhIH0gPSBjb3JlLnNwYW5Ub0pTT04oc3Bhbik7XG4gICAgICAgICAgLy8gVGVkaXVzIGludGVncmF0aW9uIGFsd2F5cyBzZXQgYSBzcGFuIG5hbWUgYW5kIGBkYi5zeXN0ZW1gIGF0dHJpYnV0ZSB0byBgbXNzcWxgLlxuICAgICAgICAgIGlmICghZGVzY3JpcHRpb24gfHwgZGF0YVsnZGIuc3lzdGVtJ10gIT09ICdtc3NxbCcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCBvcGVyYXRpb24gPSBkZXNjcmlwdGlvbi5zcGxpdCgnICcpWzBdIHx8ICcnO1xuICAgICAgICAgIGlmIChURURJVVNfSU5TVFJVTUVOVEVEX01FVEhPRFMuaGFzKG9wZXJhdGlvbikpIHtcbiAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKGNvcmUuU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4sICdhdXRvLmRiLm90ZWwudGVkaW91cycpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSksXG4gICAgICApO1xuICAgIH0sXG4gIH07XG59KSA7XG5cbi8qKlxuICogQWRkcyBTZW50cnkgdHJhY2luZyBpbnN0cnVtZW50YXRpb24gZm9yIHRoZSBbdGVkaW91c10oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvdGVkaW91cykgbGlicmFyeS5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBbYHRlZGlvdXNJbnRlZ3JhdGlvbmAgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnNlbnRyeS5pby9wbGF0Zm9ybXMvamF2YXNjcmlwdC9ndWlkZXMvbm9kZS9jb25maWd1cmF0aW9uL2ludGVncmF0aW9ucy90ZWRpb3VzLykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGNvbnN0IFNlbnRyeSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZScpO1xuICpcbiAqIFNlbnRyeS5pbml0KHtcbiAqICBpbnRlZ3JhdGlvbnM6IFtTZW50cnkudGVkaW91c0ludGVncmF0aW9uKCldLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuY29uc3QgdGVkaW91c0ludGVncmF0aW9uID0gY29yZS5kZWZpbmVJbnRlZ3JhdGlvbihfdGVkaW91c0ludGVncmF0aW9uKTtcblxuZXhwb3J0cy5pbnN0cnVtZW50VGVkaW91cyA9IGluc3RydW1lbnRUZWRpb3VzO1xuZXhwb3J0cy50ZWRpb3VzSW50ZWdyYXRpb24gPSB0ZWRpb3VzSW50ZWdyYXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZWRpb3VzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/tedious.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/constants.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/constants.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst INTEGRATION_NAME = 'VercelAI';\n\nexports.INTEGRATION_NAME = INTEGRATION_NAME;\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvdmVyY2VsYWkvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFOztBQUVBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcaW50ZWdyYXRpb25zXFx0cmFjaW5nXFx2ZXJjZWxhaVxcY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBJTlRFR1JBVElPTl9OQU1FID0gJ1ZlcmNlbEFJJztcblxuZXhwb3J0cy5JTlRFR1JBVElPTl9OQU1FID0gSU5URUdSQVRJT05fTkFNRTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/index.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/index.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst constants = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/constants.js\");\nconst instrumentation = __webpack_require__(/*! ./instrumentation.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/instrumentation.js\");\n\nconst instrumentVercelAi = nodeCore.generateInstrumentOnce(constants.INTEGRATION_NAME, () => new instrumentation.SentryVercelAiInstrumentation({}));\n\n/**\n * Determines if the integration should be forced based on environment and package availability.\n * Returns true if the 'ai' package is available.\n */\nfunction shouldForceIntegration(client) {\n  const modules = client.getIntegrationByName('Modules');\n  return !!modules?.getModules?.()?.ai;\n}\n\nconst _vercelAIIntegration = ((options = {}) => {\n  let instrumentation;\n\n  return {\n    name: constants.INTEGRATION_NAME,\n    options,\n    setupOnce() {\n      instrumentation = instrumentVercelAi();\n    },\n    afterAllSetup(client) {\n      // Auto-detect if we should force the integration when running with 'ai' package available\n      // Note that this can only be detected if the 'Modules' integration is available, and running in CJS mode\n      const shouldForce = options.force ?? shouldForceIntegration(client);\n\n      if (shouldForce) {\n        core.addVercelAiProcessors(client);\n      } else {\n        instrumentation?.callWhenPatched(() => core.addVercelAiProcessors(client));\n      }\n    },\n  };\n}) ;\n\n/**\n * Adds Sentry tracing instrumentation for the [ai](https://www.npmjs.com/package/ai) library.\n * This integration is not enabled by default, you need to manually add it.\n *\n * For more information, see the [`ai` documentation](https://sdk.vercel.ai/docs/ai-sdk-core/telemetry).\n *\n * @example\n * ```javascript\n * const Sentry = require('@sentry/node');\n *\n * Sentry.init({\n *  integrations: [Sentry.vercelAIIntegration()],\n * });\n * ```\n *\n * This integration adds tracing support to all `ai` function calls.\n * You need to opt-in to collecting spans for a specific call,\n * you can do so by setting `experimental_telemetry.isEnabled` to `true` in the first argument of the function call.\n *\n * ```javascript\n * const result = await generateText({\n *   model: openai('gpt-4-turbo'),\n *   experimental_telemetry: { isEnabled: true },\n * });\n * ```\n *\n * If you want to collect inputs and outputs for a specific call, you must specifically opt-in to each\n * function call by setting `experimental_telemetry.recordInputs` and `experimental_telemetry.recordOutputs`\n * to `true`.\n *\n * ```javascript\n * const result = await generateText({\n *  model: openai('gpt-4-turbo'),\n *  experimental_telemetry: { isEnabled: true, recordInputs: true, recordOutputs: true },\n * });\n */\nconst vercelAIIntegration = core.defineIntegration(_vercelAIIntegration);\n\nexports.instrumentVercelAi = instrumentVercelAi;\nexports.vercelAIIntegration = vercelAIIntegration;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvaW50ZWdyYXRpb25zL3RyYWNpbmcvdmVyY2VsYWkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEscURBQXFELGlCQUFpQjs7QUFFdEUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjtBQUM1QyxrQkFBa0IsbUJBQU8sQ0FBQyxzSkFBZ0I7QUFDMUMsd0JBQXdCLG1CQUFPLENBQUMsa0tBQXNCOztBQUV0RCxpSkFBaUo7O0FBRWpKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsMkNBQTJDO0FBQzNDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlCQUFpQjtBQUNoRCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDBEQUEwRDtBQUN4RixJQUFJO0FBQ0o7QUFDQTs7QUFFQSwwQkFBMEI7QUFDMUIsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxpbnRlZ3JhdGlvbnNcXHRyYWNpbmdcXHZlcmNlbGFpXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgY29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvY29yZScpO1xuY29uc3Qgbm9kZUNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUtY29yZScpO1xuY29uc3QgY29uc3RhbnRzID0gcmVxdWlyZSgnLi9jb25zdGFudHMuanMnKTtcbmNvbnN0IGluc3RydW1lbnRhdGlvbiA9IHJlcXVpcmUoJy4vaW5zdHJ1bWVudGF0aW9uLmpzJyk7XG5cbmNvbnN0IGluc3RydW1lbnRWZXJjZWxBaSA9IG5vZGVDb3JlLmdlbmVyYXRlSW5zdHJ1bWVudE9uY2UoY29uc3RhbnRzLklOVEVHUkFUSU9OX05BTUUsICgpID0+IG5ldyBpbnN0cnVtZW50YXRpb24uU2VudHJ5VmVyY2VsQWlJbnN0cnVtZW50YXRpb24oe30pKTtcblxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIHRoZSBpbnRlZ3JhdGlvbiBzaG91bGQgYmUgZm9yY2VkIGJhc2VkIG9uIGVudmlyb25tZW50IGFuZCBwYWNrYWdlIGF2YWlsYWJpbGl0eS5cbiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgJ2FpJyBwYWNrYWdlIGlzIGF2YWlsYWJsZS5cbiAqL1xuZnVuY3Rpb24gc2hvdWxkRm9yY2VJbnRlZ3JhdGlvbihjbGllbnQpIHtcbiAgY29uc3QgbW9kdWxlcyA9IGNsaWVudC5nZXRJbnRlZ3JhdGlvbkJ5TmFtZSgnTW9kdWxlcycpO1xuICByZXR1cm4gISFtb2R1bGVzPy5nZXRNb2R1bGVzPy4oKT8uYWk7XG59XG5cbmNvbnN0IF92ZXJjZWxBSUludGVncmF0aW9uID0gKChvcHRpb25zID0ge30pID0+IHtcbiAgbGV0IGluc3RydW1lbnRhdGlvbjtcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IGNvbnN0YW50cy5JTlRFR1JBVElPTl9OQU1FLFxuICAgIG9wdGlvbnMsXG4gICAgc2V0dXBPbmNlKCkge1xuICAgICAgaW5zdHJ1bWVudGF0aW9uID0gaW5zdHJ1bWVudFZlcmNlbEFpKCk7XG4gICAgfSxcbiAgICBhZnRlckFsbFNldHVwKGNsaWVudCkge1xuICAgICAgLy8gQXV0by1kZXRlY3QgaWYgd2Ugc2hvdWxkIGZvcmNlIHRoZSBpbnRlZ3JhdGlvbiB3aGVuIHJ1bm5pbmcgd2l0aCAnYWknIHBhY2thZ2UgYXZhaWxhYmxlXG4gICAgICAvLyBOb3RlIHRoYXQgdGhpcyBjYW4gb25seSBiZSBkZXRlY3RlZCBpZiB0aGUgJ01vZHVsZXMnIGludGVncmF0aW9uIGlzIGF2YWlsYWJsZSwgYW5kIHJ1bm5pbmcgaW4gQ0pTIG1vZGVcbiAgICAgIGNvbnN0IHNob3VsZEZvcmNlID0gb3B0aW9ucy5mb3JjZSA/PyBzaG91bGRGb3JjZUludGVncmF0aW9uKGNsaWVudCk7XG5cbiAgICAgIGlmIChzaG91bGRGb3JjZSkge1xuICAgICAgICBjb3JlLmFkZFZlcmNlbEFpUHJvY2Vzc29ycyhjbGllbnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW5zdHJ1bWVudGF0aW9uPy5jYWxsV2hlblBhdGNoZWQoKCkgPT4gY29yZS5hZGRWZXJjZWxBaVByb2Nlc3NvcnMoY2xpZW50KSk7XG4gICAgICB9XG4gICAgfSxcbiAgfTtcbn0pIDtcblxuLyoqXG4gKiBBZGRzIFNlbnRyeSB0cmFjaW5nIGluc3RydW1lbnRhdGlvbiBmb3IgdGhlIFthaV0oaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvYWkpIGxpYnJhcnkuXG4gKiBUaGlzIGludGVncmF0aW9uIGlzIG5vdCBlbmFibGVkIGJ5IGRlZmF1bHQsIHlvdSBuZWVkIHRvIG1hbnVhbGx5IGFkZCBpdC5cbiAqXG4gKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBbYGFpYCBkb2N1bWVudGF0aW9uXShodHRwczovL3Nkay52ZXJjZWwuYWkvZG9jcy9haS1zZGstY29yZS90ZWxlbWV0cnkpLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBTZW50cnkgPSByZXF1aXJlKCdAc2VudHJ5L25vZGUnKTtcbiAqXG4gKiBTZW50cnkuaW5pdCh7XG4gKiAgaW50ZWdyYXRpb25zOiBbU2VudHJ5LnZlcmNlbEFJSW50ZWdyYXRpb24oKV0sXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIFRoaXMgaW50ZWdyYXRpb24gYWRkcyB0cmFjaW5nIHN1cHBvcnQgdG8gYWxsIGBhaWAgZnVuY3Rpb24gY2FsbHMuXG4gKiBZb3UgbmVlZCB0byBvcHQtaW4gdG8gY29sbGVjdGluZyBzcGFucyBmb3IgYSBzcGVjaWZpYyBjYWxsLFxuICogeW91IGNhbiBkbyBzbyBieSBzZXR0aW5nIGBleHBlcmltZW50YWxfdGVsZW1ldHJ5LmlzRW5hYmxlZGAgdG8gYHRydWVgIGluIHRoZSBmaXJzdCBhcmd1bWVudCBvZiB0aGUgZnVuY3Rpb24gY2FsbC5cbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCBnZW5lcmF0ZVRleHQoe1xuICogICBtb2RlbDogb3BlbmFpKCdncHQtNC10dXJibycpLFxuICogICBleHBlcmltZW50YWxfdGVsZW1ldHJ5OiB7IGlzRW5hYmxlZDogdHJ1ZSB9LFxuICogfSk7XG4gKiBgYGBcbiAqXG4gKiBJZiB5b3Ugd2FudCB0byBjb2xsZWN0IGlucHV0cyBhbmQgb3V0cHV0cyBmb3IgYSBzcGVjaWZpYyBjYWxsLCB5b3UgbXVzdCBzcGVjaWZpY2FsbHkgb3B0LWluIHRvIGVhY2hcbiAqIGZ1bmN0aW9uIGNhbGwgYnkgc2V0dGluZyBgZXhwZXJpbWVudGFsX3RlbGVtZXRyeS5yZWNvcmRJbnB1dHNgIGFuZCBgZXhwZXJpbWVudGFsX3RlbGVtZXRyeS5yZWNvcmRPdXRwdXRzYFxuICogdG8gYHRydWVgLlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGdlbmVyYXRlVGV4dCh7XG4gKiAgbW9kZWw6IG9wZW5haSgnZ3B0LTQtdHVyYm8nKSxcbiAqICBleHBlcmltZW50YWxfdGVsZW1ldHJ5OiB7IGlzRW5hYmxlZDogdHJ1ZSwgcmVjb3JkSW5wdXRzOiB0cnVlLCByZWNvcmRPdXRwdXRzOiB0cnVlIH0sXG4gKiB9KTtcbiAqL1xuY29uc3QgdmVyY2VsQUlJbnRlZ3JhdGlvbiA9IGNvcmUuZGVmaW5lSW50ZWdyYXRpb24oX3ZlcmNlbEFJSW50ZWdyYXRpb24pO1xuXG5leHBvcnRzLmluc3RydW1lbnRWZXJjZWxBaSA9IGluc3RydW1lbnRWZXJjZWxBaTtcbmV4cG9ydHMudmVyY2VsQUlJbnRlZ3JhdGlvbiA9IHZlcmNlbEFJSW50ZWdyYXRpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/instrumentation.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/instrumentation.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = undefined;globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryNextJsVersion\"] = \"15.5.4\";globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst instrumentation = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+instrumentat_f652686f626c89883300e722e0beadcf/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst constants = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/constants.js\");\n\n// List of patched methods\n// From: https://sdk.vercel.ai/docs/ai-sdk-core/telemetry#collected-data\nconst INSTRUMENTED_METHODS = [\n  'generateText',\n  'streamText',\n  'generateObject',\n  'streamObject',\n  'embed',\n  'embedMany',\n] ;\n\nfunction isToolError(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  const candidate = obj ;\n  return (\n    'type' in candidate &&\n    'error' in candidate &&\n    'toolName' in candidate &&\n    'toolCallId' in candidate &&\n    candidate.type === 'tool-error' &&\n    candidate.error instanceof Error\n  );\n}\n\n/**\n * Check for tool errors in the result and capture them\n * Tool errors are not rejected in Vercel V5, it is added as metadata to the result content\n */\nfunction checkResultForToolErrors(result) {\n  if (typeof result !== 'object' || result === null || !('content' in result)) {\n    return;\n  }\n\n  const resultObj = result ;\n  if (!Array.isArray(resultObj.content)) {\n    return;\n  }\n\n  for (const item of resultObj.content) {\n    if (isToolError(item)) {\n      // Try to get the span associated with this tool call ID\n      const associatedSpan = core._INTERNAL_getSpanForToolCallId(item.toolCallId) ;\n\n      if (associatedSpan) {\n        // We have the span, so link the error using span and trace IDs from the span\n        const spanContext = associatedSpan.spanContext();\n\n        core.withScope(scope => {\n          // Set the span and trace context for proper linking\n          scope.setContext('trace', {\n            trace_id: spanContext.traceId,\n            span_id: spanContext.spanId,\n          });\n\n          scope.setTag('vercel.ai.tool.name', item.toolName);\n          scope.setTag('vercel.ai.tool.callId', item.toolCallId);\n\n          scope.setLevel('error');\n\n          core.captureException(item.error, {\n            mechanism: {\n              type: 'auto.vercelai.otel',\n              handled: false,\n            },\n          });\n        });\n\n        // Clean up the span mapping since we've processed this tool error\n        // We won't get multiple { type: 'tool-error' } parts for the same toolCallId.\n        core._INTERNAL_cleanupToolCallSpan(item.toolCallId);\n      } else {\n        // Fallback: capture without span linking\n        core.withScope(scope => {\n          scope.setTag('vercel.ai.tool.name', item.toolName);\n          scope.setTag('vercel.ai.tool.callId', item.toolCallId);\n          scope.setLevel('error');\n\n          core.captureException(item.error, {\n            mechanism: {\n              type: 'auto.vercelai.otel',\n              handled: false,\n            },\n          });\n        });\n      }\n    }\n  }\n}\n\n/**\n * Determines whether to record inputs and outputs for Vercel AI telemetry based on the configuration hierarchy.\n *\n * The order of precedence is:\n * 1. The vercel ai integration options\n * 2. The experimental_telemetry options in the vercel ai method calls\n * 3. When telemetry is explicitly enabled (isEnabled: true), default to recording\n * 4. Otherwise, use the sendDefaultPii option from client options\n */\nfunction determineRecordingSettings(\n  integrationRecordingOptions,\n  methodTelemetryOptions,\n  telemetryExplicitlyEnabled,\n  defaultRecordingEnabled,\n) {\n  const recordInputs =\n    integrationRecordingOptions?.recordInputs !== undefined\n      ? integrationRecordingOptions.recordInputs\n      : methodTelemetryOptions.recordInputs !== undefined\n        ? methodTelemetryOptions.recordInputs\n        : telemetryExplicitlyEnabled === true\n          ? true // When telemetry is explicitly enabled, default to recording inputs\n          : defaultRecordingEnabled;\n\n  const recordOutputs =\n    integrationRecordingOptions?.recordOutputs !== undefined\n      ? integrationRecordingOptions.recordOutputs\n      : methodTelemetryOptions.recordOutputs !== undefined\n        ? methodTelemetryOptions.recordOutputs\n        : telemetryExplicitlyEnabled === true\n          ? true // When telemetry is explicitly enabled, default to recording inputs\n          : defaultRecordingEnabled;\n\n  return { recordInputs, recordOutputs };\n}\n\n/**\n * This detects is added by the Sentry Vercel AI Integration to detect if the integration should\n * be enabled.\n *\n * It also patches the `ai` module to enable Vercel AI telemetry automatically for all methods.\n */\nclass SentryVercelAiInstrumentation extends instrumentation.InstrumentationBase {\n   __init() {this._isPatched = false;}\n   __init2() {this._callbacks = [];}\n\n   constructor(config = {}) {\n    super('@sentry/instrumentation-vercel-ai', core.SDK_VERSION, config);SentryVercelAiInstrumentation.prototype.__init.call(this);SentryVercelAiInstrumentation.prototype.__init2.call(this);  }\n\n  /**\n   * Initializes the instrumentation by defining the modules to be patched.\n   */\n   init() {\n    const module = new instrumentation.InstrumentationNodeModuleDefinition('ai', ['>=3.0.0 <6'], this._patch.bind(this));\n    return module;\n  }\n\n  /**\n   * Call the provided callback when the module is patched.\n   * If it has already been patched, the callback will be called immediately.\n   */\n   callWhenPatched(callback) {\n    if (this._isPatched) {\n      callback();\n    } else {\n      this._callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Patches module exports to enable Vercel AI telemetry.\n   */\n   _patch(moduleExports) {\n    this._isPatched = true;\n\n    this._callbacks.forEach(callback => callback());\n    this._callbacks = [];\n\n    const generatePatch = (originalMethod) => {\n      return new Proxy(originalMethod, {\n        apply: (target, thisArg, args) => {\n          const existingExperimentalTelemetry = args[0].experimental_telemetry || {};\n          const isEnabled = existingExperimentalTelemetry.isEnabled;\n\n          const client = core.getClient();\n          const integration = client?.getIntegrationByName(constants.INTEGRATION_NAME);\n          const integrationOptions = integration?.options;\n          const shouldRecordInputsAndOutputs = integration ? Boolean(client?.getOptions().sendDefaultPii) : false;\n\n          const { recordInputs, recordOutputs } = determineRecordingSettings(\n            integrationOptions,\n            existingExperimentalTelemetry,\n            isEnabled,\n            shouldRecordInputsAndOutputs,\n          );\n\n          args[0].experimental_telemetry = {\n            ...existingExperimentalTelemetry,\n            isEnabled: isEnabled !== undefined ? isEnabled : true,\n            recordInputs,\n            recordOutputs,\n          };\n\n          return core.handleCallbackErrors(\n            () => Reflect.apply(target, thisArg, args),\n            error => {\n              // This error bubbles up to unhandledrejection handler (if not handled before),\n              // where we do not know the active span anymore\n              // So to circumvent this, we set the active span on the error object\n              // which is picked up by the unhandledrejection handler\n              if (error && typeof error === 'object') {\n                core.addNonEnumerableProperty(error, '_sentry_active_span', core.getActiveSpan());\n              }\n            },\n            () => {},\n            result => {\n              checkResultForToolErrors(result);\n            },\n          );\n        },\n      });\n    };\n\n    // Is this an ESM module?\n    // https://tc39.es/ecma262/#sec-module-namespace-objects\n    if (Object.prototype.toString.call(moduleExports) === '[object Module]') {\n      // In ESM we take the usual route and just replace the exports we want to instrument\n      for (const method of INSTRUMENTED_METHODS) {\n        moduleExports[method] = generatePatch(moduleExports[method]);\n      }\n\n      return moduleExports;\n    } else {\n      // In CJS we can't replace the exports in the original module because they\n      // don't have setters, so we create a new object with the same properties\n      const patchedModuleExports = INSTRUMENTED_METHODS.reduce((acc, curr) => {\n        acc[curr] = generatePatch(moduleExports[curr]);\n        return acc;\n      }, {} );\n\n      return { ...moduleExports, ...patchedModuleExports };\n    }\n  }\n}\n\nexports.SentryVercelAiInstrumentation = SentryVercelAiInstrumentation;\nexports.determineRecordingSettings = determineRecordingSettings;\n//# sourceMappingURL=instrumentation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/vercelai/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/sdk/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/sdk/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst http = __webpack_require__(/*! ../integrations/http.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/http.js\");\nconst nodeFetch = __webpack_require__(/*! ../integrations/node-fetch.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/node-fetch.js\");\nconst index = __webpack_require__(/*! ../integrations/tracing/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/index.js\");\nconst initOtel = __webpack_require__(/*! ./initOtel.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/sdk/initOtel.js\");\n\n/**\n * Get default integrations, excluding performance.\n */\nfunction getDefaultIntegrationsWithoutPerformance() {\n  const nodeCoreIntegrations = nodeCore.getDefaultIntegrations();\n\n  // Filter out the node-core HTTP and NodeFetch integrations and replace them with Node SDK's composite versions\n  return nodeCoreIntegrations\n    .filter(integration => integration.name !== 'Http' && integration.name !== 'NodeFetch')\n    .concat(http.httpIntegration(), nodeFetch.nativeNodeFetchIntegration());\n}\n\n/** Get the default integrations for the Node SDK. */\nfunction getDefaultIntegrations(options) {\n  return [\n    ...getDefaultIntegrationsWithoutPerformance(),\n    // We only add performance integrations if tracing is enabled\n    // Note that this means that without tracing enabled, e.g. `expressIntegration()` will not be added\n    // This means that generally request isolation will work (because that is done by httpIntegration)\n    // But `transactionName` will not be set automatically\n    ...(core.hasSpansEnabled(options) ? index.getAutoPerformanceIntegrations() : []),\n  ];\n}\n\n/**\n * Initialize Sentry for Node.\n */\nfunction init(options = {}) {\n  return _init(options, getDefaultIntegrations);\n}\n\n/**\n * Internal initialization function.\n */\nfunction _init(\n  options = {},\n  getDefaultIntegrationsImpl,\n) {\n  core.applySdkMetadata(options, 'node');\n\n  const client = nodeCore.init({\n    ...options,\n    // Only use Node SDK defaults if none provided\n    defaultIntegrations: options.defaultIntegrations ?? getDefaultIntegrationsImpl(options),\n  });\n\n  // Add Node SDK specific OpenTelemetry setup\n  if (client && !options.skipOpenTelemetrySetup) {\n    initOtel.initOpenTelemetry(client, {\n      spanProcessors: options.openTelemetrySpanProcessors,\n    });\n    nodeCore.validateOpenTelemetrySetup();\n  }\n\n  return client;\n}\n\n/**\n * Initialize Sentry for Node, without any integrations added by default.\n */\nfunction initWithoutDefaultIntegrations(options = {}) {\n  return _init(options, () => []);\n}\n\nexports.getDefaultIntegrations = getDefaultIntegrations;\nexports.getDefaultIntegrationsWithoutPerformance = getDefaultIntegrationsWithoutPerformance;\nexports.init = init;\nexports.initWithoutDefaultIntegrations = initWithoutDefaultIntegrations;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvc2RrL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFLGFBQWEsbUJBQU8sQ0FBQyxrSEFBYztBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxvS0FBbUI7QUFDNUMsYUFBYSxtQkFBTyxDQUFDLHlJQUF5QjtBQUM5QyxrQkFBa0IsbUJBQU8sQ0FBQyxxSkFBK0I7QUFDekQsY0FBYyxtQkFBTyxDQUFDLDJKQUFrQztBQUN4RCxpQkFBaUIsbUJBQU8sQ0FBQywwSEFBZTs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BEO0FBQ0E7O0FBRUEsOEJBQThCO0FBQzlCLGdEQUFnRDtBQUNoRCxZQUFZO0FBQ1osc0NBQXNDO0FBQ3RDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFxzZGtcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXG5jb25zdCBjb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9jb3JlJyk7XG5jb25zdCBub2RlQ29yZSA9IHJlcXVpcmUoJ0BzZW50cnkvbm9kZS1jb3JlJyk7XG5jb25zdCBodHRwID0gcmVxdWlyZSgnLi4vaW50ZWdyYXRpb25zL2h0dHAuanMnKTtcbmNvbnN0IG5vZGVGZXRjaCA9IHJlcXVpcmUoJy4uL2ludGVncmF0aW9ucy9ub2RlLWZldGNoLmpzJyk7XG5jb25zdCBpbmRleCA9IHJlcXVpcmUoJy4uL2ludGVncmF0aW9ucy90cmFjaW5nL2luZGV4LmpzJyk7XG5jb25zdCBpbml0T3RlbCA9IHJlcXVpcmUoJy4vaW5pdE90ZWwuanMnKTtcblxuLyoqXG4gKiBHZXQgZGVmYXVsdCBpbnRlZ3JhdGlvbnMsIGV4Y2x1ZGluZyBwZXJmb3JtYW5jZS5cbiAqL1xuZnVuY3Rpb24gZ2V0RGVmYXVsdEludGVncmF0aW9uc1dpdGhvdXRQZXJmb3JtYW5jZSgpIHtcbiAgY29uc3Qgbm9kZUNvcmVJbnRlZ3JhdGlvbnMgPSBub2RlQ29yZS5nZXREZWZhdWx0SW50ZWdyYXRpb25zKCk7XG5cbiAgLy8gRmlsdGVyIG91dCB0aGUgbm9kZS1jb3JlIEhUVFAgYW5kIE5vZGVGZXRjaCBpbnRlZ3JhdGlvbnMgYW5kIHJlcGxhY2UgdGhlbSB3aXRoIE5vZGUgU0RLJ3MgY29tcG9zaXRlIHZlcnNpb25zXG4gIHJldHVybiBub2RlQ29yZUludGVncmF0aW9uc1xuICAgIC5maWx0ZXIoaW50ZWdyYXRpb24gPT4gaW50ZWdyYXRpb24ubmFtZSAhPT0gJ0h0dHAnICYmIGludGVncmF0aW9uLm5hbWUgIT09ICdOb2RlRmV0Y2gnKVxuICAgIC5jb25jYXQoaHR0cC5odHRwSW50ZWdyYXRpb24oKSwgbm9kZUZldGNoLm5hdGl2ZU5vZGVGZXRjaEludGVncmF0aW9uKCkpO1xufVxuXG4vKiogR2V0IHRoZSBkZWZhdWx0IGludGVncmF0aW9ucyBmb3IgdGhlIE5vZGUgU0RLLiAqL1xuZnVuY3Rpb24gZ2V0RGVmYXVsdEludGVncmF0aW9ucyhvcHRpb25zKSB7XG4gIHJldHVybiBbXG4gICAgLi4uZ2V0RGVmYXVsdEludGVncmF0aW9uc1dpdGhvdXRQZXJmb3JtYW5jZSgpLFxuICAgIC8vIFdlIG9ubHkgYWRkIHBlcmZvcm1hbmNlIGludGVncmF0aW9ucyBpZiB0cmFjaW5nIGlzIGVuYWJsZWRcbiAgICAvLyBOb3RlIHRoYXQgdGhpcyBtZWFucyB0aGF0IHdpdGhvdXQgdHJhY2luZyBlbmFibGVkLCBlLmcuIGBleHByZXNzSW50ZWdyYXRpb24oKWAgd2lsbCBub3QgYmUgYWRkZWRcbiAgICAvLyBUaGlzIG1lYW5zIHRoYXQgZ2VuZXJhbGx5IHJlcXVlc3QgaXNvbGF0aW9uIHdpbGwgd29yayAoYmVjYXVzZSB0aGF0IGlzIGRvbmUgYnkgaHR0cEludGVncmF0aW9uKVxuICAgIC8vIEJ1dCBgdHJhbnNhY3Rpb25OYW1lYCB3aWxsIG5vdCBiZSBzZXQgYXV0b21hdGljYWxseVxuICAgIC4uLihjb3JlLmhhc1NwYW5zRW5hYmxlZChvcHRpb25zKSA/IGluZGV4LmdldEF1dG9QZXJmb3JtYW5jZUludGVncmF0aW9ucygpIDogW10pLFxuICBdO1xufVxuXG4vKipcbiAqIEluaXRpYWxpemUgU2VudHJ5IGZvciBOb2RlLlxuICovXG5mdW5jdGlvbiBpbml0KG9wdGlvbnMgPSB7fSkge1xuICByZXR1cm4gX2luaXQob3B0aW9ucywgZ2V0RGVmYXVsdEludGVncmF0aW9ucyk7XG59XG5cbi8qKlxuICogSW50ZXJuYWwgaW5pdGlhbGl6YXRpb24gZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIF9pbml0KFxuICBvcHRpb25zID0ge30sXG4gIGdldERlZmF1bHRJbnRlZ3JhdGlvbnNJbXBsLFxuKSB7XG4gIGNvcmUuYXBwbHlTZGtNZXRhZGF0YShvcHRpb25zLCAnbm9kZScpO1xuXG4gIGNvbnN0IGNsaWVudCA9IG5vZGVDb3JlLmluaXQoe1xuICAgIC4uLm9wdGlvbnMsXG4gICAgLy8gT25seSB1c2UgTm9kZSBTREsgZGVmYXVsdHMgaWYgbm9uZSBwcm92aWRlZFxuICAgIGRlZmF1bHRJbnRlZ3JhdGlvbnM6IG9wdGlvbnMuZGVmYXVsdEludGVncmF0aW9ucyA/PyBnZXREZWZhdWx0SW50ZWdyYXRpb25zSW1wbChvcHRpb25zKSxcbiAgfSk7XG5cbiAgLy8gQWRkIE5vZGUgU0RLIHNwZWNpZmljIE9wZW5UZWxlbWV0cnkgc2V0dXBcbiAgaWYgKGNsaWVudCAmJiAhb3B0aW9ucy5za2lwT3BlblRlbGVtZXRyeVNldHVwKSB7XG4gICAgaW5pdE90ZWwuaW5pdE9wZW5UZWxlbWV0cnkoY2xpZW50LCB7XG4gICAgICBzcGFuUHJvY2Vzc29yczogb3B0aW9ucy5vcGVuVGVsZW1ldHJ5U3BhblByb2Nlc3NvcnMsXG4gICAgfSk7XG4gICAgbm9kZUNvcmUudmFsaWRhdGVPcGVuVGVsZW1ldHJ5U2V0dXAoKTtcbiAgfVxuXG4gIHJldHVybiBjbGllbnQ7XG59XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBTZW50cnkgZm9yIE5vZGUsIHdpdGhvdXQgYW55IGludGVncmF0aW9ucyBhZGRlZCBieSBkZWZhdWx0LlxuICovXG5mdW5jdGlvbiBpbml0V2l0aG91dERlZmF1bHRJbnRlZ3JhdGlvbnMob3B0aW9ucyA9IHt9KSB7XG4gIHJldHVybiBfaW5pdChvcHRpb25zLCAoKSA9PiBbXSk7XG59XG5cbmV4cG9ydHMuZ2V0RGVmYXVsdEludGVncmF0aW9ucyA9IGdldERlZmF1bHRJbnRlZ3JhdGlvbnM7XG5leHBvcnRzLmdldERlZmF1bHRJbnRlZ3JhdGlvbnNXaXRob3V0UGVyZm9ybWFuY2UgPSBnZXREZWZhdWx0SW50ZWdyYXRpb25zV2l0aG91dFBlcmZvcm1hbmNlO1xuZXhwb3J0cy5pbml0ID0gaW5pdDtcbmV4cG9ydHMuaW5pdFdpdGhvdXREZWZhdWx0SW50ZWdyYXRpb25zID0gaW5pdFdpdGhvdXREZWZhdWx0SW50ZWdyYXRpb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/sdk/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/sdk/initOtel.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/sdk/initOtel.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst api = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst resources = __webpack_require__(/*! @opentelemetry/resources */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+resources@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/resources/build/esm/index.js\");\nconst sdkTraceBase = __webpack_require__(/*! @opentelemetry/sdk-trace-base */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+sdk-trace-base@2.1.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/sdk-trace-base/build/esm/index.js\");\nconst semanticConventions = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/./node_modules/.pnpm/@opentelemetry+semantic-conventions@1.37.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst core = __webpack_require__(/*! @sentry/core */ \"(rsc)/./node_modules/.pnpm/@sentry+core@10.16.0/node_modules/@sentry/core/build/cjs/index.js\");\nconst nodeCore = __webpack_require__(/*! @sentry/node-core */ \"(rsc)/./node_modules/.pnpm/@sentry+node-core@10.16.0_@_dd8f4cab6eb7421205e3a0687e82d051/node_modules/@sentry/node-core/build/cjs/index.js\");\nconst opentelemetry = __webpack_require__(/*! @sentry/opentelemetry */ \"(rsc)/./node_modules/.pnpm/@sentry+opentelemetry@10.16_6ab421456e2f0bf04c66c14f54985fe1/node_modules/@sentry/opentelemetry/build/cjs/index.js\");\nconst debugBuild = __webpack_require__(/*! ../debug-build.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/debug-build.js\");\nconst index = __webpack_require__(/*! ../integrations/tracing/index.js */ \"(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/integrations/tracing/index.js\");\n\n// About 277h - this must fit into new Array(len)!\nconst MAX_MAX_SPAN_WAIT_DURATION = 1000000;\n\n/**\n * Initialize OpenTelemetry for Node.\n */\nfunction initOpenTelemetry(client, options = {}) {\n  if (client.getOptions().debug) {\n    nodeCore.setupOpenTelemetryLogger();\n  }\n\n  const provider = setupOtel(client, options);\n  client.traceProvider = provider;\n}\n\n/**\n * Preload OpenTelemetry for Node.\n * This can be used to preload instrumentation early, but set up Sentry later.\n * By preloading the OTEL instrumentation wrapping still happens early enough that everything works.\n */\nfunction preloadOpenTelemetry(options = {}) {\n  const { debug } = options;\n\n  if (debug) {\n    core.debug.enable();\n  }\n\n  nodeCore.initializeEsmLoader();\n\n  // These are all integrations that we need to pre-load to ensure they are set up before any other code runs\n  getPreloadMethods(options.integrations).forEach(fn => {\n    fn();\n\n    if (debug) {\n      core.debug.log(`[Sentry] Preloaded ${fn.id} instrumentation`);\n    }\n  });\n}\n\nfunction getPreloadMethods(integrationNames) {\n  const instruments = index.getOpenTelemetryInstrumentationToPreload();\n\n  if (!integrationNames) {\n    return instruments;\n  }\n\n  // We match exact matches of instrumentation, but also match prefixes, e.g. \"Fastify.v5\" will match \"Fastify\"\n  return instruments.filter(instrumentation => {\n    const id = instrumentation.id;\n    return integrationNames.some(integrationName => id === integrationName || id.startsWith(`${integrationName}.`));\n  });\n}\n\n/** Just exported for tests. */\nfunction setupOtel(client, options = {}) {\n  // Create and configure NodeTracerProvider\n  const provider = new sdkTraceBase.BasicTracerProvider({\n    sampler: new opentelemetry.SentrySampler(client),\n    resource: resources.defaultResource().merge(\n      resources.resourceFromAttributes({\n        [semanticConventions.ATTR_SERVICE_NAME]: 'node',\n        // eslint-disable-next-line deprecation/deprecation\n        [semanticConventions.SEMRESATTRS_SERVICE_NAMESPACE]: 'sentry',\n        [semanticConventions.ATTR_SERVICE_VERSION]: core.SDK_VERSION,\n      }),\n    ),\n    forceFlushTimeoutMillis: 500,\n    spanProcessors: [\n      new opentelemetry.SentrySpanProcessor({\n        timeout: _clampSpanProcessorTimeout(client.getOptions().maxSpanWaitDuration),\n      }),\n      ...(options.spanProcessors || []),\n    ],\n  });\n\n  // Register as globals\n  api.trace.setGlobalTracerProvider(provider);\n  api.propagation.setGlobalPropagator(new opentelemetry.SentryPropagator());\n  api.context.setGlobalContextManager(new nodeCore.SentryContextManager());\n\n  return provider;\n}\n\n/** Just exported for tests. */\nfunction _clampSpanProcessorTimeout(maxSpanWaitDuration) {\n  if (maxSpanWaitDuration == null) {\n    return undefined;\n  }\n\n  // We guard for a max. value here, because we create an array with this length\n  // So if this value is too large, this would fail\n  if (maxSpanWaitDuration > MAX_MAX_SPAN_WAIT_DURATION) {\n    debugBuild.DEBUG_BUILD &&\n      core.debug.warn(`\\`maxSpanWaitDuration\\` is too high, using the maximum value of ${MAX_MAX_SPAN_WAIT_DURATION}`);\n    return MAX_MAX_SPAN_WAIT_DURATION;\n  } else if (maxSpanWaitDuration <= 0 || Number.isNaN(maxSpanWaitDuration)) {\n    debugBuild.DEBUG_BUILD && core.debug.warn('`maxSpanWaitDuration` must be a positive number, using default value instead.');\n    return undefined;\n  }\n\n  return maxSpanWaitDuration;\n}\n\nexports._clampSpanProcessorTimeout = _clampSpanProcessorTimeout;\nexports.initOpenTelemetry = initOpenTelemetry;\nexports.preloadOpenTelemetry = preloadOpenTelemetry;\nexports.setupOtel = setupOtel;\n//# sourceMappingURL=initOtel.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvc2RrL2luaXRPdGVsLmpzIiwibWFwcGluZ3MiOiJBQUFBLHFEQUFxRCxpQkFBaUI7O0FBRXRFLFlBQVksbUJBQU8sQ0FBQyxrSUFBb0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsNktBQTBCO0FBQ3BELHFCQUFxQixtQkFBTyxDQUFDLDRMQUErQjtBQUM1RCw0QkFBNEIsbUJBQU8sQ0FBQyxzTEFBcUM7QUFDekUsYUFBYSxtQkFBTyxDQUFDLGtIQUFjO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLG9LQUFtQjtBQUM1QyxzQkFBc0IsbUJBQU8sQ0FBQyw0S0FBdUI7QUFDckQsbUJBQW1CLG1CQUFPLENBQUMsNkhBQW1CO0FBQzlDLGNBQWMsbUJBQU8sQ0FBQywySkFBa0M7O0FBRXhEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQztBQUMxQyxVQUFVLFFBQVE7O0FBRWxCO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkMsT0FBTztBQUNsRDtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrRkFBK0YsZ0JBQWdCO0FBQy9HLEdBQUc7QUFDSDs7QUFFQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RkFBeUYsMkJBQTJCO0FBQ3BIO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGtDQUFrQztBQUNsQyx5QkFBeUI7QUFDekIsNEJBQTRCO0FBQzVCLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxWaXNoTGFwXFxDdXJlOFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHNlbnRyeStub2RlQDEwLjE2LjBcXG5vZGVfbW9kdWxlc1xcQHNlbnRyeVxcbm9kZVxcYnVpbGRcXGNqc1xcc2RrXFxpbml0T3RlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgYXBpID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvYXBpJyk7XG5jb25zdCByZXNvdXJjZXMgPSByZXF1aXJlKCdAb3BlbnRlbGVtZXRyeS9yZXNvdXJjZXMnKTtcbmNvbnN0IHNka1RyYWNlQmFzZSA9IHJlcXVpcmUoJ0BvcGVudGVsZW1ldHJ5L3Nkay10cmFjZS1iYXNlJyk7XG5jb25zdCBzZW1hbnRpY0NvbnZlbnRpb25zID0gcmVxdWlyZSgnQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnMnKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKCdAc2VudHJ5L2NvcmUnKTtcbmNvbnN0IG5vZGVDb3JlID0gcmVxdWlyZSgnQHNlbnRyeS9ub2RlLWNvcmUnKTtcbmNvbnN0IG9wZW50ZWxlbWV0cnkgPSByZXF1aXJlKCdAc2VudHJ5L29wZW50ZWxlbWV0cnknKTtcbmNvbnN0IGRlYnVnQnVpbGQgPSByZXF1aXJlKCcuLi9kZWJ1Zy1idWlsZC5qcycpO1xuY29uc3QgaW5kZXggPSByZXF1aXJlKCcuLi9pbnRlZ3JhdGlvbnMvdHJhY2luZy9pbmRleC5qcycpO1xuXG4vLyBBYm91dCAyNzdoIC0gdGhpcyBtdXN0IGZpdCBpbnRvIG5ldyBBcnJheShsZW4pIVxuY29uc3QgTUFYX01BWF9TUEFOX1dBSVRfRFVSQVRJT04gPSAxMDAwMDAwO1xuXG4vKipcbiAqIEluaXRpYWxpemUgT3BlblRlbGVtZXRyeSBmb3IgTm9kZS5cbiAqL1xuZnVuY3Rpb24gaW5pdE9wZW5UZWxlbWV0cnkoY2xpZW50LCBvcHRpb25zID0ge30pIHtcbiAgaWYgKGNsaWVudC5nZXRPcHRpb25zKCkuZGVidWcpIHtcbiAgICBub2RlQ29yZS5zZXR1cE9wZW5UZWxlbWV0cnlMb2dnZXIoKTtcbiAgfVxuXG4gIGNvbnN0IHByb3ZpZGVyID0gc2V0dXBPdGVsKGNsaWVudCwgb3B0aW9ucyk7XG4gIGNsaWVudC50cmFjZVByb3ZpZGVyID0gcHJvdmlkZXI7XG59XG5cbi8qKlxuICogUHJlbG9hZCBPcGVuVGVsZW1ldHJ5IGZvciBOb2RlLlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBwcmVsb2FkIGluc3RydW1lbnRhdGlvbiBlYXJseSwgYnV0IHNldCB1cCBTZW50cnkgbGF0ZXIuXG4gKiBCeSBwcmVsb2FkaW5nIHRoZSBPVEVMIGluc3RydW1lbnRhdGlvbiB3cmFwcGluZyBzdGlsbCBoYXBwZW5zIGVhcmx5IGVub3VnaCB0aGF0IGV2ZXJ5dGhpbmcgd29ya3MuXG4gKi9cbmZ1bmN0aW9uIHByZWxvYWRPcGVuVGVsZW1ldHJ5KG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCB7IGRlYnVnIH0gPSBvcHRpb25zO1xuXG4gIGlmIChkZWJ1Zykge1xuICAgIGNvcmUuZGVidWcuZW5hYmxlKCk7XG4gIH1cblxuICBub2RlQ29yZS5pbml0aWFsaXplRXNtTG9hZGVyKCk7XG5cbiAgLy8gVGhlc2UgYXJlIGFsbCBpbnRlZ3JhdGlvbnMgdGhhdCB3ZSBuZWVkIHRvIHByZS1sb2FkIHRvIGVuc3VyZSB0aGV5IGFyZSBzZXQgdXAgYmVmb3JlIGFueSBvdGhlciBjb2RlIHJ1bnNcbiAgZ2V0UHJlbG9hZE1ldGhvZHMob3B0aW9ucy5pbnRlZ3JhdGlvbnMpLmZvckVhY2goZm4gPT4ge1xuICAgIGZuKCk7XG5cbiAgICBpZiAoZGVidWcpIHtcbiAgICAgIGNvcmUuZGVidWcubG9nKGBbU2VudHJ5XSBQcmVsb2FkZWQgJHtmbi5pZH0gaW5zdHJ1bWVudGF0aW9uYCk7XG4gICAgfVxuICB9KTtcbn1cblxuZnVuY3Rpb24gZ2V0UHJlbG9hZE1ldGhvZHMoaW50ZWdyYXRpb25OYW1lcykge1xuICBjb25zdCBpbnN0cnVtZW50cyA9IGluZGV4LmdldE9wZW5UZWxlbWV0cnlJbnN0cnVtZW50YXRpb25Ub1ByZWxvYWQoKTtcblxuICBpZiAoIWludGVncmF0aW9uTmFtZXMpIHtcbiAgICByZXR1cm4gaW5zdHJ1bWVudHM7XG4gIH1cblxuICAvLyBXZSBtYXRjaCBleGFjdCBtYXRjaGVzIG9mIGluc3RydW1lbnRhdGlvbiwgYnV0IGFsc28gbWF0Y2ggcHJlZml4ZXMsIGUuZy4gXCJGYXN0aWZ5LnY1XCIgd2lsbCBtYXRjaCBcIkZhc3RpZnlcIlxuICByZXR1cm4gaW5zdHJ1bWVudHMuZmlsdGVyKGluc3RydW1lbnRhdGlvbiA9PiB7XG4gICAgY29uc3QgaWQgPSBpbnN0cnVtZW50YXRpb24uaWQ7XG4gICAgcmV0dXJuIGludGVncmF0aW9uTmFtZXMuc29tZShpbnRlZ3JhdGlvbk5hbWUgPT4gaWQgPT09IGludGVncmF0aW9uTmFtZSB8fCBpZC5zdGFydHNXaXRoKGAke2ludGVncmF0aW9uTmFtZX0uYCkpO1xuICB9KTtcbn1cblxuLyoqIEp1c3QgZXhwb3J0ZWQgZm9yIHRlc3RzLiAqL1xuZnVuY3Rpb24gc2V0dXBPdGVsKGNsaWVudCwgb3B0aW9ucyA9IHt9KSB7XG4gIC8vIENyZWF0ZSBhbmQgY29uZmlndXJlIE5vZGVUcmFjZXJQcm92aWRlclxuICBjb25zdCBwcm92aWRlciA9IG5ldyBzZGtUcmFjZUJhc2UuQmFzaWNUcmFjZXJQcm92aWRlcih7XG4gICAgc2FtcGxlcjogbmV3IG9wZW50ZWxlbWV0cnkuU2VudHJ5U2FtcGxlcihjbGllbnQpLFxuICAgIHJlc291cmNlOiByZXNvdXJjZXMuZGVmYXVsdFJlc291cmNlKCkubWVyZ2UoXG4gICAgICByZXNvdXJjZXMucmVzb3VyY2VGcm9tQXR0cmlidXRlcyh7XG4gICAgICAgIFtzZW1hbnRpY0NvbnZlbnRpb25zLkFUVFJfU0VSVklDRV9OQU1FXTogJ25vZGUnLFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICAgICAgW3NlbWFudGljQ29udmVudGlvbnMuU0VNUkVTQVRUUlNfU0VSVklDRV9OQU1FU1BBQ0VdOiAnc2VudHJ5JyxcbiAgICAgICAgW3NlbWFudGljQ29udmVudGlvbnMuQVRUUl9TRVJWSUNFX1ZFUlNJT05dOiBjb3JlLlNES19WRVJTSU9OLFxuICAgICAgfSksXG4gICAgKSxcbiAgICBmb3JjZUZsdXNoVGltZW91dE1pbGxpczogNTAwLFxuICAgIHNwYW5Qcm9jZXNzb3JzOiBbXG4gICAgICBuZXcgb3BlbnRlbGVtZXRyeS5TZW50cnlTcGFuUHJvY2Vzc29yKHtcbiAgICAgICAgdGltZW91dDogX2NsYW1wU3BhblByb2Nlc3NvclRpbWVvdXQoY2xpZW50LmdldE9wdGlvbnMoKS5tYXhTcGFuV2FpdER1cmF0aW9uKSxcbiAgICAgIH0pLFxuICAgICAgLi4uKG9wdGlvbnMuc3BhblByb2Nlc3NvcnMgfHwgW10pLFxuICAgIF0sXG4gIH0pO1xuXG4gIC8vIFJlZ2lzdGVyIGFzIGdsb2JhbHNcbiAgYXBpLnRyYWNlLnNldEdsb2JhbFRyYWNlclByb3ZpZGVyKHByb3ZpZGVyKTtcbiAgYXBpLnByb3BhZ2F0aW9uLnNldEdsb2JhbFByb3BhZ2F0b3IobmV3IG9wZW50ZWxlbWV0cnkuU2VudHJ5UHJvcGFnYXRvcigpKTtcbiAgYXBpLmNvbnRleHQuc2V0R2xvYmFsQ29udGV4dE1hbmFnZXIobmV3IG5vZGVDb3JlLlNlbnRyeUNvbnRleHRNYW5hZ2VyKCkpO1xuXG4gIHJldHVybiBwcm92aWRlcjtcbn1cblxuLyoqIEp1c3QgZXhwb3J0ZWQgZm9yIHRlc3RzLiAqL1xuZnVuY3Rpb24gX2NsYW1wU3BhblByb2Nlc3NvclRpbWVvdXQobWF4U3BhbldhaXREdXJhdGlvbikge1xuICBpZiAobWF4U3BhbldhaXREdXJhdGlvbiA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8vIFdlIGd1YXJkIGZvciBhIG1heC4gdmFsdWUgaGVyZSwgYmVjYXVzZSB3ZSBjcmVhdGUgYW4gYXJyYXkgd2l0aCB0aGlzIGxlbmd0aFxuICAvLyBTbyBpZiB0aGlzIHZhbHVlIGlzIHRvbyBsYXJnZSwgdGhpcyB3b3VsZCBmYWlsXG4gIGlmIChtYXhTcGFuV2FpdER1cmF0aW9uID4gTUFYX01BWF9TUEFOX1dBSVRfRFVSQVRJT04pIHtcbiAgICBkZWJ1Z0J1aWxkLkRFQlVHX0JVSUxEICYmXG4gICAgICBjb3JlLmRlYnVnLndhcm4oYFxcYG1heFNwYW5XYWl0RHVyYXRpb25cXGAgaXMgdG9vIGhpZ2gsIHVzaW5nIHRoZSBtYXhpbXVtIHZhbHVlIG9mICR7TUFYX01BWF9TUEFOX1dBSVRfRFVSQVRJT059YCk7XG4gICAgcmV0dXJuIE1BWF9NQVhfU1BBTl9XQUlUX0RVUkFUSU9OO1xuICB9IGVsc2UgaWYgKG1heFNwYW5XYWl0RHVyYXRpb24gPD0gMCB8fCBOdW1iZXIuaXNOYU4obWF4U3BhbldhaXREdXJhdGlvbikpIHtcbiAgICBkZWJ1Z0J1aWxkLkRFQlVHX0JVSUxEICYmIGNvcmUuZGVidWcud2FybignYG1heFNwYW5XYWl0RHVyYXRpb25gIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXIsIHVzaW5nIGRlZmF1bHQgdmFsdWUgaW5zdGVhZC4nKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgcmV0dXJuIG1heFNwYW5XYWl0RHVyYXRpb247XG59XG5cbmV4cG9ydHMuX2NsYW1wU3BhblByb2Nlc3NvclRpbWVvdXQgPSBfY2xhbXBTcGFuUHJvY2Vzc29yVGltZW91dDtcbmV4cG9ydHMuaW5pdE9wZW5UZWxlbWV0cnkgPSBpbml0T3BlblRlbGVtZXRyeTtcbmV4cG9ydHMucHJlbG9hZE9wZW5UZWxlbWV0cnkgPSBwcmVsb2FkT3BlblRlbGVtZXRyeTtcbmV4cG9ydHMuc2V0dXBPdGVsID0gc2V0dXBPdGVsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5pdE90ZWwuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/sdk/initOtel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/utils/redisCache.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/utils/redisCache.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\nconst SINGLE_ARG_COMMANDS = ['get', 'set', 'setex'];\n\nconst GET_COMMANDS = ['get', 'mget'];\nconst SET_COMMANDS = ['set', 'setex'];\n// todo: del, expire\n\n/** Checks if a given command is in the list of redis commands.\n *  Useful because commands can come in lowercase or uppercase (depending on the library). */\nfunction isInCommands(redisCommands, command) {\n  return redisCommands.includes(command.toLowerCase());\n}\n\n/** Determine cache operation based on redis statement */\nfunction getCacheOperation(\n  command,\n) {\n  if (isInCommands(GET_COMMANDS, command)) {\n    return 'cache.get';\n  } else if (isInCommands(SET_COMMANDS, command)) {\n    return 'cache.put';\n  } else {\n    return undefined;\n  }\n}\n\nfunction keyHasPrefix(key, prefixes) {\n  return prefixes.some(prefix => key.startsWith(prefix));\n}\n\n/** Safely converts a redis key to a string (comma-separated if there are multiple keys) */\nfunction getCacheKeySafely(redisCommand, cmdArgs) {\n  try {\n    if (cmdArgs.length === 0) {\n      return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const processArg = (arg) => {\n      if (typeof arg === 'string' || typeof arg === 'number' || Buffer.isBuffer(arg)) {\n        return [arg.toString()];\n      } else if (Array.isArray(arg)) {\n        return flatten(arg.map(arg => processArg(arg)));\n      } else {\n        return ['<unknown>'];\n      }\n    };\n\n    const firstArg = cmdArgs[0];\n    if (isInCommands(SINGLE_ARG_COMMANDS, redisCommand) && firstArg != null) {\n      return processArg(firstArg);\n    }\n\n    return flatten(cmdArgs.map(arg => processArg(arg)));\n  } catch {\n    return undefined;\n  }\n}\n\n/** Determines whether a redis operation should be considered as \"cache operation\" by checking if a key is prefixed.\n *  We only support certain commands (such as 'set', 'get', 'mget'). */\nfunction shouldConsiderForCache(redisCommand, keys, prefixes) {\n  if (!getCacheOperation(redisCommand)) {\n    return false;\n  }\n\n  for (const key of keys) {\n    if (keyHasPrefix(key, prefixes)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/** Calculates size based on the cache response value */\nfunction calculateCacheItemSize(response) {\n  const getSize = (value) => {\n    try {\n      if (Buffer.isBuffer(value)) return value.byteLength;\n      else if (typeof value === 'string') return value.length;\n      else if (typeof value === 'number') return value.toString().length;\n      else if (value === null || value === undefined) return 0;\n      return JSON.stringify(value).length;\n    } catch {\n      return undefined;\n    }\n  };\n\n  return Array.isArray(response)\n    ? response.reduce((acc, curr) => {\n        const size = getSize(curr);\n        return typeof size === 'number' ? (acc !== undefined ? acc + size : size) : acc;\n      }, 0)\n    : getSize(response);\n}\n\nfunction flatten(input) {\n  const result = [];\n\n  const flattenHelper = (input) => {\n    input.forEach((el) => {\n      if (Array.isArray(el)) {\n        flattenHelper(el);\n      } else {\n        result.push(el);\n      }\n    });\n  };\n\n  flattenHelper(input);\n  return result;\n}\n\nexports.GET_COMMANDS = GET_COMMANDS;\nexports.SET_COMMANDS = SET_COMMANDS;\nexports.calculateCacheItemSize = calculateCacheItemSize;\nexports.getCacheKeySafely = getCacheKeySafely;\nexports.getCacheOperation = getCacheOperation;\nexports.isInCommands = isInCommands;\nexports.shouldConsiderForCache = shouldConsiderForCache;\n//# sourceMappingURL=redisCache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHNlbnRyeStub2RlQDEwLjE2LjAvbm9kZV9tb2R1bGVzL0BzZW50cnkvbm9kZS9idWlsZC9janMvdXRpbHMvcmVkaXNDYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxxREFBcUQsaUJBQWlCOztBQUV0RTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQiw4QkFBOEI7QUFDOUIseUJBQXlCO0FBQ3pCLHlCQUF5QjtBQUN6QixvQkFBb0I7QUFDcEIsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFZpc2hMYXBcXEN1cmU4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAc2VudHJ5K25vZGVAMTAuMTYuMFxcbm9kZV9tb2R1bGVzXFxAc2VudHJ5XFxub2RlXFxidWlsZFxcY2pzXFx1dGlsc1xccmVkaXNDYWNoZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblxuY29uc3QgU0lOR0xFX0FSR19DT01NQU5EUyA9IFsnZ2V0JywgJ3NldCcsICdzZXRleCddO1xuXG5jb25zdCBHRVRfQ09NTUFORFMgPSBbJ2dldCcsICdtZ2V0J107XG5jb25zdCBTRVRfQ09NTUFORFMgPSBbJ3NldCcsICdzZXRleCddO1xuLy8gdG9kbzogZGVsLCBleHBpcmVcblxuLyoqIENoZWNrcyBpZiBhIGdpdmVuIGNvbW1hbmQgaXMgaW4gdGhlIGxpc3Qgb2YgcmVkaXMgY29tbWFuZHMuXG4gKiAgVXNlZnVsIGJlY2F1c2UgY29tbWFuZHMgY2FuIGNvbWUgaW4gbG93ZXJjYXNlIG9yIHVwcGVyY2FzZSAoZGVwZW5kaW5nIG9uIHRoZSBsaWJyYXJ5KS4gKi9cbmZ1bmN0aW9uIGlzSW5Db21tYW5kcyhyZWRpc0NvbW1hbmRzLCBjb21tYW5kKSB7XG4gIHJldHVybiByZWRpc0NvbW1hbmRzLmluY2x1ZGVzKGNvbW1hbmQudG9Mb3dlckNhc2UoKSk7XG59XG5cbi8qKiBEZXRlcm1pbmUgY2FjaGUgb3BlcmF0aW9uIGJhc2VkIG9uIHJlZGlzIHN0YXRlbWVudCAqL1xuZnVuY3Rpb24gZ2V0Q2FjaGVPcGVyYXRpb24oXG4gIGNvbW1hbmQsXG4pIHtcbiAgaWYgKGlzSW5Db21tYW5kcyhHRVRfQ09NTUFORFMsIGNvbW1hbmQpKSB7XG4gICAgcmV0dXJuICdjYWNoZS5nZXQnO1xuICB9IGVsc2UgaWYgKGlzSW5Db21tYW5kcyhTRVRfQ09NTUFORFMsIGNvbW1hbmQpKSB7XG4gICAgcmV0dXJuICdjYWNoZS5wdXQnO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuZnVuY3Rpb24ga2V5SGFzUHJlZml4KGtleSwgcHJlZml4ZXMpIHtcbiAgcmV0dXJuIHByZWZpeGVzLnNvbWUocHJlZml4ID0+IGtleS5zdGFydHNXaXRoKHByZWZpeCkpO1xufVxuXG4vKiogU2FmZWx5IGNvbnZlcnRzIGEgcmVkaXMga2V5IHRvIGEgc3RyaW5nIChjb21tYS1zZXBhcmF0ZWQgaWYgdGhlcmUgYXJlIG11bHRpcGxlIGtleXMpICovXG5mdW5jdGlvbiBnZXRDYWNoZUtleVNhZmVseShyZWRpc0NvbW1hbmQsIGNtZEFyZ3MpIHtcbiAgdHJ5IHtcbiAgICBpZiAoY21kQXJncy5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBjb25zdCBwcm9jZXNzQXJnID0gKGFyZykgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiBhcmcgPT09ICdudW1iZXInIHx8IEJ1ZmZlci5pc0J1ZmZlcihhcmcpKSB7XG4gICAgICAgIHJldHVybiBbYXJnLnRvU3RyaW5nKCldO1xuICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcbiAgICAgICAgcmV0dXJuIGZsYXR0ZW4oYXJnLm1hcChhcmcgPT4gcHJvY2Vzc0FyZyhhcmcpKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gWyc8dW5rbm93bj4nXTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgZmlyc3RBcmcgPSBjbWRBcmdzWzBdO1xuICAgIGlmIChpc0luQ29tbWFuZHMoU0lOR0xFX0FSR19DT01NQU5EUywgcmVkaXNDb21tYW5kKSAmJiBmaXJzdEFyZyAhPSBudWxsKSB7XG4gICAgICByZXR1cm4gcHJvY2Vzc0FyZyhmaXJzdEFyZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZsYXR0ZW4oY21kQXJncy5tYXAoYXJnID0+IHByb2Nlc3NBcmcoYXJnKSkpO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbi8qKiBEZXRlcm1pbmVzIHdoZXRoZXIgYSByZWRpcyBvcGVyYXRpb24gc2hvdWxkIGJlIGNvbnNpZGVyZWQgYXMgXCJjYWNoZSBvcGVyYXRpb25cIiBieSBjaGVja2luZyBpZiBhIGtleSBpcyBwcmVmaXhlZC5cbiAqICBXZSBvbmx5IHN1cHBvcnQgY2VydGFpbiBjb21tYW5kcyAoc3VjaCBhcyAnc2V0JywgJ2dldCcsICdtZ2V0JykuICovXG5mdW5jdGlvbiBzaG91bGRDb25zaWRlckZvckNhY2hlKHJlZGlzQ29tbWFuZCwga2V5cywgcHJlZml4ZXMpIHtcbiAgaWYgKCFnZXRDYWNoZU9wZXJhdGlvbihyZWRpc0NvbW1hbmQpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZm9yIChjb25zdCBrZXkgb2Yga2V5cykge1xuICAgIGlmIChrZXlIYXNQcmVmaXgoa2V5LCBwcmVmaXhlcykpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKiBDYWxjdWxhdGVzIHNpemUgYmFzZWQgb24gdGhlIGNhY2hlIHJlc3BvbnNlIHZhbHVlICovXG5mdW5jdGlvbiBjYWxjdWxhdGVDYWNoZUl0ZW1TaXplKHJlc3BvbnNlKSB7XG4gIGNvbnN0IGdldFNpemUgPSAodmFsdWUpID0+IHtcbiAgICB0cnkge1xuICAgICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcih2YWx1ZSkpIHJldHVybiB2YWx1ZS5ieXRlTGVuZ3RoO1xuICAgICAgZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykgcmV0dXJuIHZhbHVlLmxlbmd0aDtcbiAgICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHJldHVybiB2YWx1ZS50b1N0cmluZygpLmxlbmd0aDtcbiAgICAgIGVsc2UgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHJldHVybiAwO1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKS5sZW5ndGg7XG4gICAgfSBjYXRjaCB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gQXJyYXkuaXNBcnJheShyZXNwb25zZSlcbiAgICA/IHJlc3BvbnNlLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiB7XG4gICAgICAgIGNvbnN0IHNpemUgPSBnZXRTaXplKGN1cnIpO1xuICAgICAgICByZXR1cm4gdHlwZW9mIHNpemUgPT09ICdudW1iZXInID8gKGFjYyAhPT0gdW5kZWZpbmVkID8gYWNjICsgc2l6ZSA6IHNpemUpIDogYWNjO1xuICAgICAgfSwgMClcbiAgICA6IGdldFNpemUocmVzcG9uc2UpO1xufVxuXG5mdW5jdGlvbiBmbGF0dGVuKGlucHV0KSB7XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuXG4gIGNvbnN0IGZsYXR0ZW5IZWxwZXIgPSAoaW5wdXQpID0+IHtcbiAgICBpbnB1dC5mb3JFYWNoKChlbCkgPT4ge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZWwpKSB7XG4gICAgICAgIGZsYXR0ZW5IZWxwZXIoZWwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzdWx0LnB1c2goZWwpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGZsYXR0ZW5IZWxwZXIoaW5wdXQpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnRzLkdFVF9DT01NQU5EUyA9IEdFVF9DT01NQU5EUztcbmV4cG9ydHMuU0VUX0NPTU1BTkRTID0gU0VUX0NPTU1BTkRTO1xuZXhwb3J0cy5jYWxjdWxhdGVDYWNoZUl0ZW1TaXplID0gY2FsY3VsYXRlQ2FjaGVJdGVtU2l6ZTtcbmV4cG9ydHMuZ2V0Q2FjaGVLZXlTYWZlbHkgPSBnZXRDYWNoZUtleVNhZmVseTtcbmV4cG9ydHMuZ2V0Q2FjaGVPcGVyYXRpb24gPSBnZXRDYWNoZU9wZXJhdGlvbjtcbmV4cG9ydHMuaXNJbkNvbW1hbmRzID0gaXNJbkNvbW1hbmRzO1xuZXhwb3J0cy5zaG91bGRDb25zaWRlckZvckNhY2hlID0gc2hvdWxkQ29uc2lkZXJGb3JDYWNoZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZGlzQ2FjaGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@sentry+node@10.16.0/node_modules/@sentry/node/build/cjs/utils/redisCache.js\n");

/***/ })

};
;